!RBIX
9595534255132031488
x
M
1
n
n
x
10
__script__
i
44
5
45
0
1
45
0
2
45
0
3
65
49
4
0
49
5
1
49
6
1
7
7
64
49
8
2
47
49
9
1
15
5
7
10
64
56
11
47
50
12
1
15
2
11
I
5
I
0
I
0
I
0
n
p
13
x
4
File
n
n
n
x
11
active_path
x
11
expand_path
x
7
dirname
s
11
spec_helper
x
4
join
x
7
require
s
32
constraint_validations extension
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
509
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
5
56
6
47
50
7
0
15
5
7
8
64
56
9
47
50
10
1
15
5
7
11
64
56
12
47
50
10
1
15
5
7
13
64
56
14
47
50
10
1
15
5
7
15
64
56
16
47
50
10
1
15
5
7
17
64
56
18
47
50
10
1
15
5
7
19
64
56
20
47
50
10
1
15
5
7
21
64
56
22
47
50
10
1
15
5
7
23
64
56
24
47
50
10
1
15
5
7
25
64
56
26
47
50
10
1
15
5
7
27
64
56
28
47
50
10
1
15
5
7
29
64
56
30
47
50
10
1
15
5
7
31
64
56
32
47
50
10
1
15
5
7
33
64
56
34
47
50
10
1
15
5
7
35
64
56
36
47
50
10
1
15
5
7
37
64
56
38
47
50
10
1
15
5
7
39
64
56
40
47
50
10
1
15
5
7
41
64
56
42
47
50
10
1
15
5
7
43
64
56
44
47
50
10
1
15
5
7
45
64
56
46
47
50
10
1
15
5
7
47
64
56
48
47
50
10
1
15
5
7
49
64
56
50
47
50
10
1
15
5
7
51
64
56
52
47
50
10
1
15
5
7
53
64
56
54
47
50
10
1
15
5
7
55
64
56
56
47
50
10
1
15
5
7
57
64
56
58
47
50
10
1
15
5
7
59
64
56
60
47
50
10
1
15
5
7
61
64
56
62
47
50
10
1
15
5
7
63
64
56
64
47
50
10
1
15
5
7
65
64
56
66
47
50
10
1
15
5
7
67
64
56
68
47
50
10
1
15
5
7
69
64
56
70
47
50
10
1
15
5
7
71
64
56
72
47
50
10
1
15
5
7
73
64
56
74
47
50
10
1
15
5
7
75
64
56
76
47
50
10
1
15
5
7
77
64
56
78
47
50
10
1
15
5
7
79
64
56
80
47
50
10
1
15
5
7
81
64
56
82
47
50
10
1
15
5
7
83
64
56
84
47
50
10
1
15
5
7
85
64
56
86
47
50
10
1
15
5
7
87
64
56
88
47
50
10
1
15
5
7
89
64
56
90
47
50
10
1
15
5
7
91
64
56
92
47
50
10
1
15
5
7
93
64
56
94
47
50
10
1
11
I
6
I
0
I
0
I
0
I
-2
p
95
x
12
parse_insert
M
1
n
n
x
12
parse_insert
i
80
7
0
13
70
9
18
15
44
43
1
7
2
78
49
3
2
6
0
20
0
49
4
1
19
1
15
45
5
6
20
1
79
49
7
1
7
8
64
49
9
1
56
10
50
11
0
20
1
80
49
7
1
7
8
64
49
9
1
56
12
50
11
0
49
13
1
56
14
50
15
0
49
16
0
36
1
51
7
0
11
I
6
I
2
I
1
I
1
n
p
17
n
x
6
Regexp
s
70
\AINSERT INTO sequel_constraint_validations \((.*)\) VALUES \((.*)\)\z
x
3
new
x
5
match
x
4
Hash
n
x
2
[]
s
2
, 
x
5
split
M
1
p
2
x
9
for_block
t
n
x
12
parse_insert
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
6
to_sym
p
3
I
0
I
6
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
1
v
x
3
map
M
1
p
2
x
9
for_block
t
n
x
12
parse_insert
i
12
57
19
0
15
5
20
0
47
49
0
1
11
I
4
I
1
I
1
I
1
n
p
1
x
18
parse_insert_value
p
3
I
0
I
6
I
c
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
1
v
x
3
zip
M
1
p
2
x
9
for_block
t
n
x
12
parse_insert
i
16
58
37
19
0
15
37
19
1
15
15
20
1
49
0
0
11
I
5
I
2
I
2
I
2
n
p
1
x
4
nil?
p
3
I
0
I
6
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
2
x
1
k
x
1
v
x
6
reject
x
7
flatten
p
7
I
-1
I
4
I
0
I
5
I
1a
I
6
I
50
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
2
x
1
s
x
1
m
x
17
method_visibility
x
15
add_defn_method
x
18
parse_insert_value
M
1
n
n
x
18
parse_insert_value
i
74
20
0
13
7
0
64
12
49
1
1
9
16
15
1
8
73
13
7
2
13
70
9
35
15
44
43
3
7
4
78
49
5
2
6
2
12
49
1
1
9
50
15
4
5
78
98
6
2
8
73
15
5
45
7
8
43
9
7
10
20
0
49
11
0
47
101
12
63
2
47
49
13
2
11
I
6
I
1
I
1
I
1
n
p
14
s
4
NULL
x
3
===
n
x
6
Regexp
s
10
\A'(.*)'\z
x
3
new
x
24
regexp_last_match_result
x
6
Sequel
n
x
5
Error
s
24
unhandled insert value: 
x
7
inspect
x
4
to_s
x
5
raise
p
17
I
-1
I
9
I
0
I
a
I
2
I
b
I
d
I
c
I
10
I
d
I
2a
I
e
I
33
I
10
I
49
I
0
I
4a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
1
s
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
45
0
1
49
2
0
38
3
15
39
3
45
4
5
56
6
50
7
0
49
8
1
15
39
3
7
9
49
10
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
6
Sequel
n
x
4
mock
x
3
@db
x
6
Module
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
5
7
0
47
49
1
1
15
99
7
0
7
2
65
67
49
3
0
49
4
4
11
I
6
I
0
I
0
I
0
I
-2
p
5
x
6
schema
x
11
attr_writer
M
1
n
n
x
6
schema
i
18
5
7
0
20
0
47
101
1
63
2
47
49
2
1
15
39
3
11
I
5
I
2
I
1
I
1
I
1
p
4
s
17
parse schema for 
x
4
to_s
x
7
execute
x
7
@schema
p
3
I
-1
I
16
I
12
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
2
x
5
table
x
14
@unnamed_splat
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
16
I
16
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
3
new
x
6
extend
x
22
constraint_validations
x
9
extension
p
7
I
0
I
15
I
9
I
16
I
17
I
17
I
1f
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
6
before
s
61
should allow creating the sequel_constraint_validations table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
49
1
0
15
39
0
49
2
0
49
3
0
7
4
64
35
1
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@db
x
35
create_constraint_validations_table
x
4
sqls
x
6
should
s
235
CREATE TABLE sequel_constraint_validations (table varchar(255) NOT NULL, constraint_name varchar(255), validation_type varchar(255) NOT NULL, column varchar(255) NOT NULL, argument varchar(255), message varchar(255), allow_nil boolean)
x
2
==
p
5
I
0
I
1b
I
6
I
1c
I
16
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
2
it
s
91
should allow creating the sequel_constraint_validations table with a non-default table name
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
39
0
7
1
13
18
2
49
2
1
15
15
39
0
49
3
0
15
39
0
49
4
0
49
5
0
7
6
64
35
1
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@db
x
3
foo
x
29
constraint_validations_table=
x
35
create_constraint_validations_table
x
4
sqls
x
6
should
s
209
CREATE TABLE foo (table varchar(255) NOT NULL, constraint_name varchar(255), validation_type varchar(255) NOT NULL, column varchar(255) NOT NULL, argument varchar(255), message varchar(255), allow_nil boolean)
x
2
==
p
7
I
0
I
20
I
c
I
21
I
12
I
22
I
22
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
61
should allow dropping the sequel_constraint_validations table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
49
1
0
15
39
0
49
2
0
49
3
0
7
4
64
35
1
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@db
x
33
drop_constraint_validations_table
x
4
sqls
x
6
should
s
40
DROP TABLE sequel_constraint_validations
x
2
==
p
5
I
0
I
26
I
6
I
27
I
16
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
91
should allow dropping the sequel_constraint_validations table with a non-default table name
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
39
0
7
1
13
18
2
49
2
1
15
15
39
0
49
3
0
15
39
0
49
4
0
49
5
0
7
6
64
35
1
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@db
x
3
foo
x
29
constraint_validations_table=
x
33
drop_constraint_validations_table
x
4
sqls
x
6
should
s
14
DROP TABLE foo
x
2
==
p
7
I
0
I
2b
I
c
I
2c
I
12
I
2d
I
22
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
51
should allow dropping validations for a given table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
15
39
0
49
7
0
49
8
0
7
9
64
35
1
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
3
@db
x
4
Hash
x
16
new_from_literal
x
5
table
x
3
foo
x
3
[]=
x
31
drop_constraint_validations_for
x
4
sqls
x
6
should
s
63
DELETE FROM sequel_constraint_validations WHERE (table = 'foo')
x
2
==
p
5
I
0
I
31
I
16
I
32
I
26
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
62
should allow dropping validations for a given table and column
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
39
0
44
43
1
80
49
2
1
13
7
3
7
4
49
5
2
15
13
7
6
7
7
49
5
2
15
49
8
1
15
39
0
49
9
0
49
10
0
7
11
64
35
1
83
12
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@db
x
4
Hash
x
16
new_from_literal
x
5
table
x
3
foo
x
3
[]=
x
6
column
x
3
bar
x
31
drop_constraint_validations_for
x
4
sqls
x
6
should
s
86
DELETE FROM sequel_constraint_validations WHERE ((table = 'foo') AND (column = 'bar'))
x
2
==
p
5
I
0
I
36
I
1f
I
37
I
2f
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
66
should allow dropping validations for a given table and constraint
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
39
0
44
43
1
80
49
2
1
13
7
3
7
4
49
5
2
15
13
7
6
7
7
49
5
2
15
49
8
1
15
39
0
49
9
0
49
10
0
7
11
64
35
1
83
12
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@db
x
4
Hash
x
16
new_from_literal
x
5
table
x
3
foo
x
3
[]=
x
10
constraint
x
3
bar
x
31
drop_constraint_validations_for
x
4
sqls
x
6
should
s
95
DELETE FROM sequel_constraint_validations WHERE ((table = 'foo') AND (constraint_name = 'bar'))
x
2
==
p
5
I
0
I
3b
I
1f
I
3c
I
2f
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
80
should allow dropping validations for a non-default constraint_validations table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
50
39
0
7
1
13
18
2
49
2
1
15
15
39
0
44
43
3
79
49
4
1
13
7
5
7
6
49
7
2
15
49
8
1
15
39
0
49
9
0
49
10
0
7
11
64
35
1
83
12
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@db
x
2
cv
x
29
constraint_validations_table=
x
4
Hash
x
16
new_from_literal
x
5
table
x
3
foo
x
3
[]=
x
31
drop_constraint_validations_for
x
4
sqls
x
6
should
s
36
DELETE FROM cv WHERE (table = 'foo')
x
2
==
p
7
I
0
I
40
I
c
I
41
I
22
I
42
I
32
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
106
should raise an error without deleting if attempting to drop validations with table, column, or constraint
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
39
7
49
8
0
49
6
0
35
0
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
39
0
44
43
1
78
49
2
1
49
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
3
@db
x
4
Hash
x
16
new_from_literal
x
31
drop_constraint_validations_for
p
3
I
0
I
46
I
d
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
x
3
@db
x
4
sqls
x
2
==
p
5
I
0
I
46
I
15
I
47
I
22
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
68
should allow adding constraint validations via create_table validate
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
92
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
18
64
7
19
64
7
20
64
35
3
83
17
11
I
7
I
1
I
0
I
0
I
-2
p
21
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
8
presence
p
3
I
0
I
4b
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
4b
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
87
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (trim(name) != '')))
p
9
I
0
I
4b
I
a
I
4c
I
12
I
4d
I
49
I
4e
I
5c
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
67
should allow adding constraint validations via alter_table validate
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
127
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
35
2
35
1
13
18
2
49
7
1
15
15
39
0
7
8
56
9
50
10
1
15
39
0
49
11
0
19
0
15
5
20
0
80
49
12
1
47
49
13
1
49
14
0
44
43
2
4
3
49
3
1
13
7
15
7
16
64
49
6
2
15
13
7
17
7
18
64
49
6
2
15
13
7
19
7
20
64
49
6
2
15
83
21
15
20
0
49
14
0
7
22
64
7
23
64
7
24
64
7
25
64
35
4
83
21
11
I
8
I
1
I
0
I
0
I
-2
p
26
x
3
@db
x
4
name
x
4
Hash
x
16
new_from_literal
x
4
type
x
6
string
x
3
[]=
x
7
schema=
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
56
0
47
50
1
0
11
I
3
I
0
I
0
I
0
I
-2
p
2
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
8
presence
p
3
I
0
I
53
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
53
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
11
alter_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
15
validation_type
s
8
presence
x
6
column
s
4
name
x
5
table
s
3
foo
x
2
==
s
20
parse schema for foo
s
5
BEGIN
s
6
COMMIT
s
69
ALTER TABLE foo ADD CHECK ((name IS NOT NULL) AND (trim(name) != ''))
p
11
I
0
I
52
I
20
I
53
I
2a
I
54
I
32
I
55
I
69
I
56
I
7f
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
53
should handle :message option when adding validations
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
5
7
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
47
49
6
2
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
4
name
x
4
Hash
x
16
new_from_literal
x
7
message
s
9
not there
x
3
[]=
x
8
presence
p
3
I
0
I
5a
I
19
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
5a
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
7
message
s
9
not there
x
2
==
s
5
BEGIN
s
6
COMMIT
s
87
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (trim(name) != '')))
p
9
I
0
I
5a
I
a
I
5b
I
12
I
5c
I
53
I
5d
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
55
should handle :allow_nil option when adding validations
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
5
7
0
44
43
1
79
49
2
1
13
7
3
2
49
4
2
15
47
49
5
2
11
I
7
I
0
I
0
I
0
I
-2
p
6
x
4
name
x
4
Hash
x
16
new_from_literal
x
9
allow_nil
x
3
[]=
x
8
presence
p
3
I
0
I
61
I
17
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
61
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
9
allow_nil
s
1
t
x
2
==
s
5
BEGIN
s
6
COMMIT
s
62
CREATE TABLE foo (name varchar(255), CHECK (trim(name) != ''))
p
9
I
0
I
61
I
a
I
62
I
12
I
63
I
53
I
64
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
50
should handle :name option when adding validations
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
5
7
0
44
43
1
79
49
2
1
13
7
0
7
3
64
49
4
2
15
47
49
5
2
11
I
7
I
0
I
0
I
0
I
-2
p
6
x
4
name
x
4
Hash
x
16
new_from_literal
s
4
cons
x
3
[]=
x
8
presence
p
3
I
0
I
68
I
19
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
68
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
15
constraint_name
s
4
cons
x
2
==
s
5
BEGIN
s
6
COMMIT
s
103
CREATE TABLE foo (name varchar(255), CONSTRAINT cons CHECK ((name IS NOT NULL) AND (trim(name) != '')))
p
9
I
0
I
68
I
a
I
69
I
12
I
6a
I
53
I
6b
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
54
should handle multiple columns when adding validations
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
147
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
18
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
19
64
7
20
64
7
21
64
35
3
83
17
11
I
7
I
1
I
0
I
0
I
-2
p
22
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
5
7
0
47
49
1
1
15
5
7
2
47
49
1
1
15
5
56
3
47
50
4
0
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
4
name
x
6
String
x
3
bar
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
5
7
0
7
1
35
2
47
49
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
x
4
name
x
3
bar
x
8
presence
p
3
I
0
I
6f
I
c
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
6f
I
18
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
2
==
s
3
bar
s
5
BEGIN
s
6
COMMIT
s
149
CREATE TABLE foo (name varchar(255), bar varchar(255), CHECK ((name IS NOT NULL) AND (bar IS NOT NULL) AND (trim(name) != '') AND (trim(bar) != '')))
p
11
I
0
I
6f
I
a
I
70
I
12
I
71
I
49
I
72
I
80
I
73
I
93
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
55
should handle presence validation on non-String columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
219
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
18
64
7
19
64
7
20
64
35
3
83
17
15
39
0
7
21
44
43
8
79
49
9
1
13
7
22
7
23
49
12
2
15
35
2
35
1
13
18
2
49
24
1
15
15
39
0
7
1
56
25
50
26
1
15
39
0
49
4
0
19
0
15
5
20
0
80
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
27
64
7
18
64
7
19
64
7
28
64
35
4
83
17
11
I
8
I
1
I
0
I
0
I
-2
p
29
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
7
Integer
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
8
presence
p
3
I
0
I
77
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
77
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
57
CREATE TABLE foo (name integer, CHECK (name IS NOT NULL))
x
4
name
x
4
type
x
7
integer
x
7
schema=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
56
0
47
50
1
0
11
I
3
I
0
I
0
I
0
I
-2
p
2
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
8
presence
p
3
I
0
I
7d
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
7d
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
11
alter_table
s
20
parse schema for foo
s
44
ALTER TABLE foo ADD CHECK (name IS NOT NULL)
p
19
I
0
I
77
I
a
I
78
I
12
I
79
I
49
I
7a
I
5c
I
7c
I
7c
I
7d
I
86
I
7e
I
8e
I
7f
I
c5
I
80
I
db
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
77
should handle presence validation on Oracle with IS NOT NULL instead of != ''
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
126
45
0
1
44
43
2
79
49
3
1
13
7
4
7
5
64
49
6
2
15
49
7
1
38
8
15
39
8
7
9
49
10
1
15
39
8
7
11
56
12
50
13
1
15
39
8
49
14
0
19
0
15
5
20
0
79
49
15
1
47
49
16
1
49
17
0
44
43
2
4
3
49
3
1
13
7
18
7
19
64
49
6
2
15
13
7
20
7
21
64
49
6
2
15
13
7
22
7
23
64
49
6
2
15
83
24
15
20
0
49
17
0
7
25
64
7
26
64
7
27
64
35
3
83
24
11
I
7
I
1
I
0
I
0
I
-2
p
28
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
4
host
s
6
oracle
x
3
[]=
x
4
mock
x
3
@db
x
22
constraint_validations
x
9
extension
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
8
presence
p
3
I
0
I
86
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
86
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
15
validation_type
s
8
presence
x
6
column
s
4
name
x
5
table
s
3
foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
93
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (trim(name) IS NOT NULL)))
p
13
I
0
I
84
I
1a
I
85
I
22
I
86
I
2c
I
87
I
34
I
88
I
6b
I
89
I
7e
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
67
should assume column is not a String if it can't determine the type
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
219
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
18
64
7
19
64
7
20
64
35
3
83
17
15
39
0
7
21
44
43
8
79
49
9
1
13
7
22
7
23
49
12
2
15
35
2
35
1
13
18
2
49
24
1
15
15
39
0
7
1
56
25
50
26
1
15
39
0
49
4
0
19
0
15
5
20
0
80
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
27
64
7
18
64
7
19
64
7
28
64
35
4
83
17
11
I
8
I
1
I
0
I
0
I
-2
p
29
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
7
Integer
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
bar
x
8
presence
p
3
I
0
I
8d
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
8d
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
3
bar
x
5
table
s
3
foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
56
CREATE TABLE foo (name integer, CHECK (bar IS NOT NULL))
x
4
name
x
4
type
x
7
integer
x
7
schema=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
56
0
47
50
1
0
11
I
3
I
0
I
0
I
0
I
-2
p
2
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
bar
x
8
presence
p
3
I
0
I
93
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
93
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
11
alter_table
s
20
parse schema for foo
s
43
ALTER TABLE foo ADD CHECK (bar IS NOT NULL)
p
19
I
0
I
8d
I
a
I
8e
I
12
I
8f
I
49
I
90
I
5c
I
92
I
7c
I
93
I
86
I
94
I
8e
I
95
I
c5
I
96
I
db
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
78
should handle presence validation on non-String columns with :allow_nil option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
7
Integer
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
5
7
0
44
43
1
79
49
2
1
13
7
3
2
49
4
2
15
47
49
5
2
11
I
7
I
0
I
0
I
0
I
-2
p
6
x
4
name
x
4
Hash
x
16
new_from_literal
x
9
allow_nil
x
3
[]=
x
8
presence
p
3
I
0
I
9a
I
17
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
9a
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
9
allow_nil
s
1
t
x
2
==
s
5
BEGIN
s
6
COMMIT
s
31
CREATE TABLE foo (name integer)
p
9
I
0
I
9a
I
a
I
9b
I
12
I
9c
I
53
I
9d
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
50
should support :exact_length constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
5
4
5
7
0
47
49
1
2
11
I
4
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
12
exact_length
p
3
I
0
I
a1
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
a1
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
12
exact_length
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
1
5
x
2
==
s
5
BEGIN
s
6
COMMIT
s
92
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (char_length(name) = 5)))
p
9
I
0
I
a1
I
a
I
a2
I
12
I
a3
I
53
I
a4
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
48
should support :min_length constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
5
4
5
7
0
47
49
1
2
11
I
4
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
10
min_length
p
3
I
0
I
a8
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
a8
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
10
min_length
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
1
5
x
2
==
s
5
BEGIN
s
6
COMMIT
s
93
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (char_length(name) >= 5)))
p
9
I
0
I
a8
I
a
I
a9
I
12
I
aa
I
53
I
ab
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
48
should support :max_length constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
5
4
5
7
0
47
49
1
2
11
I
4
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
10
max_length
p
3
I
0
I
af
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
af
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
10
max_length
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
1
5
x
2
==
s
5
BEGIN
s
6
COMMIT
s
93
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (char_length(name) <= 5)))
p
9
I
0
I
af
I
a
I
b0
I
12
I
b1
I
53
I
b2
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
50
should support :length_range constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
204
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
15
39
0
7
1
56
23
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
24
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
25
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
26
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
18
5
44
43
0
4
3
4
5
49
1
2
7
2
47
49
3
2
11
I
5
I
0
I
0
I
0
I
-2
p
4
x
5
Range
x
3
new
x
4
name
x
12
length_range
p
3
I
0
I
b6
I
12
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
b6
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
12
length_range
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
4
3..5
x
2
==
s
5
BEGIN
s
6
COMMIT
s
122
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (char_length(name) >= 3) AND (char_length(name) <= 5)))
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
5
44
43
0
4
3
4
5
2
49
1
3
7
2
47
49
3
2
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
5
Range
x
3
new
x
4
name
x
12
length_range
p
3
I
0
I
bb
I
13
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
bb
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
5
3...5
s
121
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (char_length(name) >= 3) AND (char_length(name) < 5)))
p
17
I
0
I
b6
I
a
I
b7
I
12
I
b8
I
53
I
b9
I
66
I
bb
I
70
I
bc
I
78
I
bd
I
b9
I
be
I
cc
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
44
should support :format constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
136
45
0
1
44
43
2
79
49
3
1
13
7
4
7
5
64
49
6
2
15
49
7
1
38
8
15
39
8
7
9
49
10
1
15
39
8
7
11
56
12
50
13
1
15
39
8
49
14
0
19
0
15
5
20
0
79
49
15
1
47
49
16
1
49
17
0
44
43
2
4
4
49
3
1
13
7
18
7
19
64
49
6
2
15
13
7
20
7
21
64
49
6
2
15
13
7
22
7
23
64
49
6
2
15
13
7
24
7
25
64
49
6
2
15
83
26
15
20
0
49
17
0
7
27
64
7
28
64
7
29
64
35
3
83
26
11
I
7
I
1
I
0
I
0
I
-2
p
30
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
4
host
s
8
postgres
x
3
[]=
x
4
mock
x
3
@db
x
22
constraint_validations
x
9
extension
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
5
7
0
13
70
9
19
15
44
43
1
7
2
78
49
3
2
6
0
7
4
47
49
5
2
11
I
5
I
0
I
0
I
0
I
-2
p
6
n
x
6
Regexp
s
6
^foo.*
x
3
new
x
4
name
x
6
format
p
3
I
0
I
c4
I
1a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
c4
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
15
validation_type
s
6
format
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
6
^foo.*
x
2
==
s
5
BEGIN
s
6
COMMIT
s
78
CREATE TABLE foo (name text, CHECK ((name IS NOT NULL) AND (name ~ '^foo.*')))
p
13
I
0
I
c2
I
1a
I
c3
I
22
I
c4
I
2c
I
c5
I
34
I
c6
I
75
I
c7
I
88
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
73
should support :format constraint validation with case insensitive format
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
136
45
0
1
44
43
2
79
49
3
1
13
7
4
7
5
64
49
6
2
15
49
7
1
38
8
15
39
8
7
9
49
10
1
15
39
8
7
11
56
12
50
13
1
15
39
8
49
14
0
19
0
15
5
20
0
79
49
15
1
47
49
16
1
49
17
0
44
43
2
4
4
49
3
1
13
7
18
7
19
64
49
6
2
15
13
7
20
7
21
64
49
6
2
15
13
7
22
7
23
64
49
6
2
15
13
7
24
7
25
64
49
6
2
15
83
26
15
20
0
49
17
0
7
27
64
7
28
64
7
29
64
35
3
83
26
11
I
7
I
1
I
0
I
0
I
-2
p
30
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
4
host
s
8
postgres
x
3
[]=
x
4
mock
x
3
@db
x
22
constraint_validations
x
9
extension
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
5
7
0
13
70
9
19
15
44
43
1
7
2
79
49
3
2
6
0
7
4
47
49
5
2
11
I
5
I
0
I
0
I
0
I
-2
p
6
n
x
6
Regexp
s
6
^foo.*
x
3
new
x
4
name
x
6
format
p
3
I
0
I
cd
I
1a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
cd
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
15
validation_type
s
7
iformat
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
6
^foo.*
x
2
==
s
5
BEGIN
s
6
COMMIT
s
79
CREATE TABLE foo (name text, CHECK ((name IS NOT NULL) AND (name ~* '^foo.*')))
p
13
I
0
I
cb
I
1a
I
cc
I
22
I
cd
I
2c
I
ce
I
34
I
cf
I
75
I
d0
I
88
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
71
should support :includes constraint validation with an array of strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
5
7
0
64
7
1
64
7
2
64
35
3
7
3
47
49
4
2
11
I
5
I
0
I
0
I
0
I
-2
p
5
s
1
a
s
1
b
s
1
c
x
4
name
x
8
includes
p
3
I
0
I
d4
I
13
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
d4
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
18
includes_str_array
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
5
a,b,c
x
2
==
s
5
BEGIN
s
6
COMMIT
s
94
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (name IN ('a', 'b', 'c'))))
p
9
I
0
I
d4
I
a
I
d5
I
12
I
d6
I
53
I
d7
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
72
should support :includes constraint validation with an array of integers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
79
80
4
3
35
3
7
0
47
49
1
2
11
I
5
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
8
includes
p
3
I
0
I
db
I
e
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
db
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
18
includes_int_array
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
5
1,2,3
x
2
==
s
5
BEGIN
s
6
COMMIT
s
88
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (name IN (1, 2, 3))))
p
9
I
0
I
db
I
a
I
dc
I
12
I
dd
I
53
I
de
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
81
should support :includes constraint validation with a inclusive range of integers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
18
5
44
43
0
4
3
4
5
49
1
2
7
2
47
49
3
2
11
I
5
I
0
I
0
I
0
I
-2
p
4
x
5
Range
x
3
new
x
4
name
x
8
includes
p
3
I
0
I
e2
I
12
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
e2
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
18
includes_int_range
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
4
3..5
x
2
==
s
5
BEGIN
s
6
COMMIT
s
96
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (name >= 3) AND (name <= 5)))
p
9
I
0
I
e2
I
a
I
e3
I
12
I
e4
I
53
I
e5
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
81
should support :includes constraint validation with a exclusive range of integers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
5
44
43
0
4
3
4
5
2
49
1
3
7
2
47
49
3
2
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
5
Range
x
3
new
x
4
name
x
8
includes
p
3
I
0
I
e9
I
13
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
e9
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
18
includes_int_range
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
5
3...5
x
2
==
s
5
BEGIN
s
6
COMMIT
s
95
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (name >= 3) AND (name < 5)))
p
9
I
0
I
e9
I
a
I
ea
I
12
I
eb
I
53
I
ec
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
42
should support :like constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
7
1
47
49
2
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
4
foo%
x
4
name
x
4
like
p
3
I
0
I
f0
I
b
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
f0
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
4
like
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
4
foo%
x
2
==
s
5
BEGIN
s
6
COMMIT
s
87
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (name LIKE 'foo%')))
p
9
I
0
I
f0
I
a
I
f1
I
12
I
f2
I
53
I
f3
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
43
should support :ilike constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
4
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
13
7
17
7
18
64
49
12
2
15
83
19
15
20
0
49
7
0
7
20
64
7
21
64
7
22
64
35
3
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
23
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
7
1
47
49
2
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
4
foo%
x
4
name
x
5
ilike
p
3
I
0
I
f7
I
b
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
f7
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
5
ilike
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
8
argument
s
4
foo%
x
2
==
s
5
BEGIN
s
6
COMMIT
s
88
CREATE TABLE foo (name varchar(255), CHECK ((name IS NOT NULL) AND (name ILIKE 'foo%')))
p
9
I
0
I
f7
I
a
I
f8
I
12
I
f9
I
53
I
fa
I
66
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
44
should support :unique constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
92
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
18
64
7
19
64
7
20
64
35
3
83
17
11
I
7
I
1
I
0
I
0
I
-2
p
21
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
6
unique
p
3
I
0
I
fe
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
fe
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
6
unique
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
51
CREATE TABLE foo (name varchar(255), UNIQUE (name))
p
9
I
0
I
fe
I
a
I
ff
I
12
I
100
I
49
I
101
I
5c
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
66
should support :unique constraint validation with multiple columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
92
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
18
64
7
19
64
7
20
64
35
3
83
17
11
I
7
I
1
I
0
I
0
I
-2
p
21
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
5
7
0
47
49
1
1
15
5
7
2
47
49
3
1
15
5
56
4
47
50
5
0
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
4
name
x
6
String
x
2
id
x
7
Integer
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
5
7
0
7
1
35
2
47
49
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
x
4
name
x
2
id
x
6
unique
p
3
I
0
I
105
I
c
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
105
I
18
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
6
unique
x
3
[]=
x
6
column
s
7
name,id
x
5
table
s
3
foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
67
CREATE TABLE foo (name varchar(255), id integer, UNIQUE (name, id))
p
9
I
0
I
105
I
a
I
106
I
12
I
107
I
49
I
108
I
5c
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
59
should support :unique constraint validation in alter_table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
92
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
19
0
15
5
20
0
79
49
5
1
47
49
6
1
49
7
0
44
43
8
4
3
49
9
1
13
7
10
7
11
64
49
12
2
15
13
7
13
7
14
64
49
12
2
15
13
7
15
7
16
64
49
12
2
15
83
17
15
20
0
49
7
0
7
18
64
7
19
64
7
20
64
35
3
83
17
11
I
7
I
1
I
0
I
0
I
-2
p
21
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
56
0
47
50
1
0
11
I
3
I
0
I
0
I
0
I
-2
p
2
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
6
unique
p
3
I
0
I
10c
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
10c
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
11
alter_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
6
unique
x
3
[]=
x
6
column
s
4
name
x
5
table
s
3
foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
33
ALTER TABLE foo ADD UNIQUE (name)
p
9
I
0
I
10c
I
a
I
10d
I
12
I
10e
I
49
I
10f
I
5c
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
77
should drop constraints and validations when dropping a constraint validation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
39
0
7
1
56
2
50
3
1
15
39
0
49
4
0
49
5
0
7
6
64
7
7
64
35
2
83
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
bar
x
4
drop
p
3
I
0
I
113
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
113
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
11
alter_table
x
4
sqls
x
6
should
s
94
DELETE FROM sequel_constraint_validations WHERE ((table, constraint_name) IN (('foo', 'bar')))
s
35
ALTER TABLE foo DROP CONSTRAINT bar
x
2
==
p
5
I
0
I
113
I
a
I
114
I
1d
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
86
should raise an error if attempting to validate inclusion with a range of non-integers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
5
44
43
0
7
1
64
7
2
64
49
3
2
7
4
47
49
5
2
11
I
5
I
0
I
0
I
0
I
-2
p
6
x
5
Range
s
1
a
s
1
z
x
3
new
x
4
name
x
8
includes
p
3
I
0
I
118
I
14
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
118
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
p
3
I
0
I
118
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
118
I
15
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
97
should raise an error if attempting to validate inclusion with a range of non-integers or strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
7
0
7
1
35
2
7
2
47
49
3
2
11
I
4
I
0
I
0
I
0
I
-2
p
4
d
 +0.500000000000000000000000000000000000000000000000000000     1
d
 +0.500000000000000000000000000000000000000000000000000000     2
x
4
name
x
8
includes
p
3
I
0
I
11c
I
e
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
11c
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
p
3
I
0
I
11c
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
11c
I
15
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
83
should raise an error if attempting to validate inclusion with a unsupported object
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
7
1
47
49
2
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
1
a
x
4
name
x
8
includes
p
3
I
0
I
120
I
b
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
120
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
p
3
I
0
I
120
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
120
I
15
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
95
should raise an error if attempting to drop a constraint validation in a create_table generator
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
foo
x
4
drop
p
3
I
0
I
124
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
124
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
p
3
I
0
I
124
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
124
I
15
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
82
should raise an error if attempting to drop a constraint validation without a name
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
1
47
49
0
1
11
I
3
I
0
I
0
I
0
I
-2
p
1
x
4
drop
p
3
I
0
I
128
I
7
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
128
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
11
alter_table
p
3
I
0
I
128
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
128
I
15
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
106
should raise an error if attempting attempting to process a constraint validation with an unsupported type
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
3
@db
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
5
7
0
47
49
1
1
15
5
48
2
44
43
3
79
49
4
1
13
7
5
7
6
49
7
2
15
49
8
1
11
I
6
I
0
I
0
I
0
I
-2
p
9
x
4
name
x
6
String
x
11
validations
x
4
Hash
x
16
new_from_literal
x
4
type
x
3
foo
x
3
[]=
x
2
<<
p
3
I
0
I
12c
I
1f
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
11
alter_table
p
3
I
0
I
12c
I
a
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
12c
I
15
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
s
84
should allow adding constraint validations for tables specified as a SQL::Identifier
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
98
39
0
45
1
2
7
3
49
4
1
56
5
50
6
1
15
39
0
49
7
0
19
0
15
5
20
0
79
49
8
1
47
49
9
1
49
10
0
44
43
11
4
3
49
12
1
13
7
13
7
14
64
49
15
2
15
13
7
16
7
17
64
49
15
2
15
13
7
18
7
19
64
49
15
2
15
83
20
15
20
0
49
10
0
7
21
64
7
22
64
7
23
64
35
3
83
20
11
I
7
I
1
I
0
I
0
I
-2
p
24
x
3
@db
x
6
Sequel
n
x
8
sch__foo
x
10
identifier
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
8
presence
p
3
I
0
I
130
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
130
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
8
sch__foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
92
CREATE TABLE sch__foo (name varchar(255), CHECK ((name IS NOT NULL) AND (trim(name) != '')))
p
9
I
0
I
130
I
10
I
131
I
18
I
132
I
4f
I
133
I
62
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
s
93
should allow adding constraint validations for tables specified as a SQL::QualifiedIdentifier
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
100
39
0
45
1
2
7
3
7
4
49
5
2
56
6
50
7
1
15
39
0
49
8
0
19
0
15
5
20
0
79
49
9
1
47
49
10
1
49
11
0
44
43
12
4
3
49
13
1
13
7
14
7
15
64
49
16
2
15
13
7
17
7
18
64
49
16
2
15
13
7
19
7
20
64
49
16
2
15
83
21
15
20
0
49
11
0
7
22
64
7
23
64
7
24
64
35
3
83
21
11
I
7
I
1
I
0
I
0
I
-2
p
25
x
3
@db
x
6
Sequel
n
x
3
sch
x
3
foo
x
7
qualify
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
5
7
0
47
49
1
1
15
5
56
2
47
50
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
name
x
6
String
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
7
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
name
x
8
presence
p
3
I
0
I
137
I
8
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
validate
p
3
I
0
I
137
I
10
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
12
create_table
x
4
sqls
x
6
slice!
x
12
parse_insert
x
6
should
x
4
Hash
x
16
new_from_literal
x
15
validation_type
s
8
presence
x
3
[]=
x
6
column
s
4
name
x
5
table
s
7
sch.foo
x
2
==
s
5
BEGIN
s
6
COMMIT
s
91
CREATE TABLE sch.foo (name varchar(255), CHECK ((name IS NOT NULL) AND (trim(name) != '')))
p
9
I
0
I
137
I
12
I
138
I
1a
I
139
I
51
I
13a
I
64
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
1
x
4
sqls
p
93
I
0
I
4
I
e
I
9
I
1c
I
14
I
24
I
1a
I
2f
I
1f
I
3a
I
25
I
45
I
2a
I
50
I
30
I
5b
I
35
I
66
I
3a
I
71
I
3f
I
7c
I
45
I
87
I
4a
I
92
I
51
I
9d
I
59
I
a8
I
60
I
b3
I
67
I
be
I
6e
I
c9
I
76
I
d4
I
83
I
df
I
8c
I
ea
I
99
I
f5
I
a0
I
100
I
a7
I
10b
I
ae
I
116
I
b5
I
121
I
c1
I
12c
I
ca
I
137
I
d3
I
142
I
da
I
14d
I
e1
I
158
I
e8
I
163
I
ef
I
16e
I
f6
I
179
I
fd
I
184
I
104
I
18f
I
10b
I
19a
I
112
I
1a5
I
117
I
1b0
I
11b
I
1bb
I
11f
I
1c6
I
123
I
1d1
I
127
I
1dc
I
12b
I
1e7
I
12f
I
1f2
I
136
I
1fd
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0
x
8
describe
p
5
I
0
I
1
I
1f
I
3
I
2c
x
127
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/constraint_validations_spec.rb
p
0

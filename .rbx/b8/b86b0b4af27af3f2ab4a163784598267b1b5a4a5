!RBIX
9595534255132031488
x
M
1
n
n
x
10
__script__
i
1163
5
45
0
1
45
0
2
45
0
3
65
49
4
0
49
5
1
49
6
1
7
7
64
49
8
2
47
49
9
1
15
5
7
10
64
56
11
47
50
12
1
15
5
7
13
64
56
14
47
50
12
1
15
5
7
15
64
56
16
47
50
12
1
15
5
7
17
64
56
18
47
50
12
1
15
5
7
19
64
56
20
47
50
12
1
15
5
7
21
64
56
22
47
50
12
1
15
5
7
23
64
56
24
47
50
12
1
15
5
7
25
64
56
26
47
50
12
1
15
5
7
27
64
56
28
47
50
12
1
15
5
7
29
64
56
30
47
50
12
1
15
5
7
31
64
56
32
47
50
12
1
15
5
7
33
64
56
34
47
50
12
1
15
5
7
35
64
56
36
47
50
12
1
15
5
7
37
64
56
38
47
50
12
1
15
5
7
39
64
56
40
47
50
12
1
15
5
7
41
64
56
42
47
50
12
1
15
5
7
43
64
56
44
47
50
12
1
15
5
7
45
64
56
46
47
50
12
1
15
5
7
47
64
56
48
47
50
12
1
15
5
7
49
64
56
50
47
50
12
1
15
5
7
49
64
56
51
47
50
12
1
15
5
7
52
64
56
53
47
50
12
1
15
5
7
54
64
56
55
47
50
12
1
15
5
7
56
64
56
57
47
50
12
1
15
5
7
58
64
56
59
47
50
12
1
15
5
7
60
64
56
61
47
50
12
1
15
5
7
62
64
56
63
47
50
12
1
15
5
7
64
64
56
65
47
50
12
1
15
5
7
66
64
56
67
47
50
12
1
15
5
7
68
64
56
69
47
50
12
1
15
5
7
70
64
56
71
47
50
12
1
15
5
7
72
64
56
73
47
50
12
1
15
5
7
74
64
56
75
47
50
12
1
15
5
7
76
64
56
77
47
50
12
1
15
5
7
78
64
56
79
47
50
12
1
15
5
7
80
64
56
81
47
50
12
1
15
5
7
82
64
56
83
47
50
12
1
15
5
7
84
64
56
85
47
50
12
1
15
5
7
86
64
56
87
47
50
12
1
15
5
7
88
64
56
89
47
50
12
1
15
5
7
90
64
56
91
47
50
12
1
15
5
7
92
64
56
93
47
50
12
1
15
5
7
94
64
56
95
47
50
12
1
15
5
7
96
64
56
97
47
50
12
1
15
5
7
98
64
56
99
47
50
12
1
15
5
7
100
64
56
101
47
50
12
1
15
5
7
102
64
56
103
47
50
12
1
15
5
7
104
64
56
105
47
50
12
1
15
5
7
106
64
56
107
47
50
12
1
15
5
7
108
64
56
109
47
50
12
1
15
5
7
110
64
56
111
47
50
12
1
15
5
7
112
64
56
113
47
50
12
1
15
5
7
114
64
56
115
47
50
12
1
15
5
7
116
64
56
117
47
50
12
1
15
5
7
118
64
56
119
47
50
12
1
15
5
7
120
64
56
121
47
50
12
1
15
5
7
122
64
56
123
47
50
12
1
15
5
7
124
64
56
125
47
50
12
1
15
5
7
126
64
56
127
47
50
12
1
15
5
7
128
64
56
129
47
50
12
1
15
5
7
130
64
56
131
47
50
12
1
15
5
7
132
64
56
133
47
50
12
1
15
5
7
134
64
56
135
47
50
12
1
15
5
7
136
64
56
137
47
50
12
1
15
5
7
138
64
56
139
47
50
12
1
15
5
7
140
64
56
141
47
50
12
1
15
5
7
142
64
56
143
47
50
12
1
15
5
7
144
64
56
145
47
50
12
1
15
5
7
146
64
56
147
47
50
12
1
15
5
7
148
64
56
149
47
50
12
1
15
5
7
10
64
56
150
47
50
12
1
15
5
7
151
64
56
152
47
50
12
1
15
5
7
153
64
56
154
47
50
12
1
15
5
7
155
64
56
156
47
50
12
1
15
5
7
157
64
56
158
47
50
12
1
15
5
7
159
64
56
160
47
50
12
1
15
5
7
161
64
56
162
47
50
12
1
15
5
7
163
64
56
164
47
50
12
1
15
5
7
165
64
56
166
47
50
12
1
15
5
45
167
168
43
169
43
170
56
171
47
50
12
1
15
5
7
172
64
56
173
47
50
12
1
15
5
7
174
64
56
175
47
50
12
1
15
5
7
176
64
56
177
47
50
12
1
15
5
7
178
64
56
179
47
50
12
1
15
5
7
180
64
56
181
47
50
12
1
15
5
7
182
64
56
183
47
50
12
1
15
5
7
184
64
56
185
47
50
12
1
15
5
7
186
64
56
187
47
50
12
1
15
5
7
188
64
56
189
47
50
12
1
15
5
45
167
190
43
191
43
192
56
193
47
50
12
1
15
5
7
194
64
56
195
47
50
12
1
15
5
7
196
64
56
197
47
50
12
1
15
5
7
198
64
56
199
47
50
12
1
15
5
7
200
64
56
201
47
50
12
1
15
5
7
202
64
56
203
47
50
12
1
15
5
7
204
64
56
205
47
50
12
1
15
5
7
206
64
56
207
47
50
12
1
15
5
7
208
64
56
209
47
50
12
1
15
5
7
210
64
56
211
47
50
12
1
15
5
7
212
64
56
213
47
50
12
1
15
5
7
214
64
56
215
47
50
12
1
15
5
7
216
64
56
217
47
50
12
1
15
2
11
I
5
I
0
I
0
I
0
n
p
218
x
4
File
n
n
n
x
11
active_path
x
11
expand_path
x
7
dirname
s
11
spec_helper
x
4
join
x
7
require
s
7
Dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
118
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
23
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
45
0
1
43
2
13
71
3
47
9
26
47
49
4
0
13
7
5
64
47
49
6
1
15
8
32
7
5
64
49
3
1
38
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
s
2
db
x
10
initialize
x
8
@dataset
p
3
I
0
I
5
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
45
should accept database and opts in initialize
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
178
7
0
64
19
0
15
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
19
1
15
45
6
7
43
8
13
71
9
47
9
52
47
49
10
0
13
20
0
20
1
47
49
11
2
15
8
59
20
0
20
1
49
9
2
19
2
15
20
2
49
12
0
5
20
0
47
49
13
1
49
14
1
15
20
2
49
15
0
5
20
1
47
49
13
1
49
14
1
15
45
6
16
43
8
13
71
9
47
9
119
47
49
10
0
13
20
0
47
49
11
1
15
8
124
20
0
49
9
1
19
2
15
20
2
49
12
0
5
20
0
47
49
13
1
49
14
1
15
20
2
49
15
0
5
45
1
17
47
49
18
1
49
14
1
15
20
2
49
15
0
49
14
0
44
43
1
78
49
2
1
83
19
11
I
8
I
3
I
0
I
0
I
-2
p
20
s
2
db
x
4
Hash
x
16
new_from_literal
x
4
from
x
4
test
x
3
[]=
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
2
db
x
2
be
x
6
should
x
4
opts
n
n
x
12
be_a_kind_of
x
2
==
p
19
I
0
I
9
I
6
I
a
I
19
I
b
I
3e
I
c
I
4e
I
d
I
5e
I
f
I
7f
I
10
I
8f
I
11
I
a0
I
12
I
b2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
2
db
x
4
opts
x
1
d
x
7
specify
s
37
should provide clone for chainability
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
246
39
0
44
43
1
79
49
2
1
13
7
3
7
4
35
1
49
5
2
15
49
6
1
19
0
15
20
0
49
7
0
49
8
0
39
0
49
7
0
83
9
15
20
0
49
10
0
39
0
83
9
15
20
0
49
11
0
5
39
0
49
11
0
47
49
12
1
49
8
1
15
20
0
49
13
0
7
3
49
14
1
49
8
0
7
4
35
1
83
9
15
39
0
49
13
0
7
3
49
14
1
5
48
15
49
8
1
15
20
0
44
43
1
79
49
2
1
13
7
16
7
17
35
1
49
5
2
15
49
6
1
19
1
15
20
1
49
7
0
49
8
0
39
0
49
7
0
83
9
15
20
1
49
10
0
20
0
83
9
15
20
1
49
10
0
39
0
83
9
15
20
1
49
11
0
5
39
0
49
11
0
47
49
12
1
49
8
1
15
20
1
49
13
0
7
3
49
14
1
49
8
0
7
4
35
1
83
9
15
20
1
49
13
0
7
16
49
14
1
49
8
0
7
17
35
1
83
9
15
20
0
49
13
0
7
16
49
14
1
5
48
15
49
8
1
11
I
8
I
2
I
0
I
0
I
-2
p
18
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
4
from
x
4
test
x
3
[]=
x
5
clone
x
5
class
x
6
should
x
2
==
x
10
should_not
x
2
db
x
2
be
x
4
opts
x
2
[]
x
6
be_nil
x
5
order
x
4
name
p
29
I
0
I
16
I
1a
I
17
I
2a
I
18
I
34
I
19
I
47
I
1a
I
5b
I
1b
I
6c
I
1d
I
86
I
1e
I
96
I
1f
I
a0
I
20
I
aa
I
21
I
bd
I
22
I
d1
I
23
I
e5
I
24
I
f6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
d1
x
2
d2
s
25
should include Enumerable
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
45
0
1
43
2
49
3
0
5
45
4
5
47
49
6
1
49
7
1
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
6
Sequel
n
x
7
Dataset
x
16
included_modules
x
10
Enumerable
n
x
7
include
x
6
should
p
3
I
0
I
28
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should get quote_identifiers default from database
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
152
45
0
1
43
2
13
71
3
47
9
38
47
49
4
0
13
44
43
5
79
49
6
1
13
7
7
2
49
8
2
15
47
49
9
1
15
8
56
44
43
5
79
49
6
1
13
7
7
2
49
8
2
15
49
3
1
19
0
15
20
0
7
10
49
11
1
49
12
0
49
13
0
2
83
14
15
45
0
15
43
2
13
71
3
47
9
114
47
49
4
0
13
44
43
5
79
49
6
1
13
7
7
3
49
8
2
15
47
49
9
1
15
8
132
44
43
5
79
49
6
1
13
7
7
3
49
8
2
15
49
3
1
19
0
15
20
0
7
10
49
11
1
49
12
0
49
13
0
3
83
14
11
I
8
I
1
I
0
I
0
I
-2
p
16
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
4
Hash
x
16
new_from_literal
x
17
quote_identifiers
x
3
[]=
x
10
initialize
x
1
a
x
2
[]
x
18
quote_identifiers?
x
6
should
x
2
==
n
p
9
I
0
I
2c
I
3b
I
2d
I
4c
I
2e
I
87
I
2f
I
98
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
db
s
56
should get identifier_input_method default from database
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
158
45
0
1
43
2
13
71
3
47
9
39
47
49
4
0
13
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
47
49
10
1
15
8
58
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
3
1
19
0
15
20
0
7
11
49
12
1
49
7
0
49
13
0
7
8
83
14
15
45
0
15
43
2
13
71
3
47
9
118
47
49
4
0
13
44
43
5
79
49
6
1
13
7
7
7
16
49
9
2
15
47
49
10
1
15
8
137
44
43
5
79
49
6
1
13
7
7
7
16
49
9
2
15
49
3
1
19
0
15
20
0
7
11
49
12
1
49
7
0
49
13
0
7
16
83
14
11
I
8
I
1
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
4
Hash
x
16
new_from_literal
x
23
identifier_input_method
x
6
upcase
x
3
[]=
x
10
initialize
x
1
a
x
2
[]
x
6
should
x
2
==
n
x
8
downcase
p
9
I
0
I
33
I
3d
I
34
I
4f
I
35
I
8c
I
36
I
9e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
db
s
57
should get identifier_output_method default from database
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
158
45
0
1
43
2
13
71
3
47
9
39
47
49
4
0
13
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
47
49
10
1
15
8
58
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
3
1
19
0
15
20
0
7
11
49
12
1
49
7
0
49
13
0
7
8
83
14
15
45
0
15
43
2
13
71
3
47
9
118
47
49
4
0
13
44
43
5
79
49
6
1
13
7
7
7
16
49
9
2
15
47
49
10
1
15
8
137
44
43
5
79
49
6
1
13
7
7
7
16
49
9
2
15
49
3
1
19
0
15
20
0
7
11
49
12
1
49
7
0
49
13
0
7
16
83
14
11
I
8
I
1
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
4
Hash
x
16
new_from_literal
x
24
identifier_output_method
x
6
upcase
x
3
[]=
x
10
initialize
x
1
a
x
2
[]
x
6
should
x
2
==
n
x
8
downcase
p
9
I
0
I
3a
I
3d
I
3b
I
4f
I
3c
I
8c
I
3d
I
9e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
db
s
81
should have quote_identifiers= method which changes literalization of identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
39
0
2
13
18
2
49
1
1
15
15
39
0
7
2
49
3
1
49
4
0
7
5
64
83
6
15
39
0
3
13
18
2
49
1
1
15
15
39
0
7
2
49
3
1
49
4
0
7
7
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
18
quote_identifiers=
x
1
a
x
7
literal
x
6
should
s
3
"a"
x
2
==
s
1
a
p
9
I
0
I
41
I
b
I
42
I
1b
I
43
I
26
I
44
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
87
should have identifier_input_method= method which changes literalization of identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
84
39
0
7
1
13
18
2
49
2
1
15
15
39
0
7
3
49
4
1
49
5
0
7
6
64
83
7
15
39
0
7
8
13
18
2
49
2
1
15
15
39
0
7
9
49
4
1
49
5
0
7
10
64
83
7
15
39
0
7
11
13
18
2
49
2
1
15
15
39
0
7
12
49
4
1
49
5
0
7
13
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
6
upcase
x
24
identifier_input_method=
x
1
a
x
7
literal
x
6
should
s
1
A
x
2
==
x
8
downcase
x
1
A
s
1
a
x
7
reverse
x
4
at_b
s
4
b_ta
p
13
I
0
I
48
I
c
I
49
I
1c
I
4a
I
28
I
4b
I
38
I
4c
I
44
I
4d
I
54
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
97
should have identifier_output_method= method which changes identifiers returned from the database
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
39
0
7
1
7
2
64
49
3
2
49
4
0
7
5
83
6
15
39
0
7
7
13
18
2
49
8
1
15
15
39
0
7
1
7
2
64
49
3
2
49
4
0
7
9
83
6
15
39
0
7
10
13
18
2
49
8
1
15
15
39
0
7
1
7
2
64
49
3
2
49
4
0
7
11
83
6
15
39
0
7
12
13
18
2
49
8
1
15
15
39
0
7
1
7
2
64
49
3
2
49
4
0
7
13
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
17
output_identifier
s
6
at_b_C
x
4
send
x
6
should
x
6
at_b_C
x
2
==
x
6
upcase
x
25
identifier_output_method=
x
6
AT_B_C
x
8
downcase
x
6
at_b_c
x
7
reverse
x
6
C_b_ta
p
15
I
0
I
51
I
12
I
52
I
1e
I
53
I
30
I
54
I
3c
I
55
I
4e
I
56
I
5a
I
57
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should have output_identifier handle empty identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
39
0
7
1
7
2
64
49
3
2
49
4
0
7
5
83
6
15
39
0
7
7
13
18
2
49
8
1
15
15
39
0
7
1
7
2
64
49
3
2
49
4
0
7
9
83
6
15
39
0
7
10
13
18
2
49
8
1
15
15
39
0
7
1
7
2
64
49
3
2
49
4
0
7
5
83
6
15
39
0
7
11
13
18
2
49
8
1
15
15
39
0
7
1
7
2
64
49
3
2
49
4
0
7
12
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
8
@dataset
x
17
output_identifier
s
0

x
4
send
x
6
should
x
8
untitled
x
2
==
x
6
upcase
x
25
identifier_output_method=
x
8
UNTITLED
x
8
downcase
x
7
reverse
x
8
deltitnu
p
15
I
0
I
5b
I
12
I
5c
I
1e
I
5d
I
30
I
5e
I
3c
I
5f
I
4e
I
60
I
5a
I
61
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
23
I
0
I
4
I
8
I
8
I
13
I
15
I
1e
I
27
I
29
I
2b
I
34
I
32
I
3f
I
39
I
4a
I
40
I
55
I
47
I
60
I
50
I
6b
I
5a
I
76
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
describe
s
13
Dataset#clone
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
5
items
x
4
from
x
8
@dataset
p
3
I
0
I
67
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
42
should create an exact copy of the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
106
39
0
45
1
2
56
3
50
4
0
13
18
2
49
5
1
15
15
39
0
49
6
0
19
0
15
20
0
49
7
0
49
8
0
39
0
49
7
0
86
9
15
20
0
49
10
0
49
11
0
39
0
49
10
0
83
12
15
20
0
49
13
0
49
11
0
39
0
49
13
0
83
12
15
20
0
49
14
0
49
11
0
39
0
49
14
0
83
12
15
20
0
49
15
0
49
11
0
39
0
49
15
0
83
12
11
I
5
I
1
I
0
I
0
I
-2
p
16
x
8
@dataset
x
4
Proc
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
57
19
0
15
20
0
11
I
3
I
1
I
1
I
1
n
p
0
p
3
I
0
I
6b
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
3
new
x
9
row_proc=
x
5
clone
x
9
object_id
x
10
should_not
x
3
===
x
5
class
x
6
should
x
2
==
x
2
db
x
4
opts
x
8
row_proc
p
15
I
0
I
6b
I
12
I
6c
I
1a
I
6e
I
2a
I
6f
I
3a
I
70
I
4a
I
71
I
5a
I
72
I
6a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
5
clone
x
7
specify
s
33
should deep-copy the dataset opts
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
133
39
0
49
1
0
19
0
15
20
0
49
2
0
5
39
0
49
2
0
47
49
3
1
49
4
1
15
39
0
44
43
5
79
49
6
1
13
7
7
7
8
64
49
9
2
15
49
10
1
15
20
0
49
2
0
7
11
49
12
1
5
48
13
49
14
1
15
39
0
44
43
5
79
49
6
1
13
7
15
7
16
35
1
49
9
2
15
49
1
1
19
0
15
39
0
49
2
0
7
15
49
12
1
49
14
0
7
17
35
1
83
18
15
20
0
49
2
0
7
15
49
12
1
49
14
0
7
16
35
1
83
18
11
I
7
I
1
I
0
I
0
I
-2
p
19
x
8
@dataset
x
5
clone
x
4
opts
x
5
equal
x
10
should_not
x
4
Hash
x
16
new_from_literal
x
1
a
s
1
b
x
3
[]=
x
7
filter!
x
6
filter
x
2
[]
x
6
be_nil
x
6
should
x
4
from
x
5
other
x
5
items
x
2
==
p
15
I
0
I
76
I
8
I
78
I
1b
I
79
I
32
I
7a
I
43
I
7c
I
5d
I
7d
I
71
I
7e
I
85
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
5
clone
s
34
should merge the specified options
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
58
39
0
44
43
1
79
49
2
1
13
79
80
49
3
2
15
49
4
1
19
0
15
20
0
49
5
0
49
6
0
44
43
1
80
49
2
1
13
79
80
49
3
2
15
13
7
7
7
8
35
1
49
3
2
15
83
9
11
I
7
I
1
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
5
clone
x
4
opts
x
6
should
x
4
from
x
5
items
x
2
==
p
5
I
0
I
82
I
16
I
83
I
3a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
5
clone
s
33
should overwrite existing options
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
55
39
0
44
43
1
79
49
2
1
13
7
3
7
4
35
1
49
5
2
15
49
6
1
19
0
15
20
0
49
7
0
49
8
0
44
43
1
79
49
2
1
13
7
3
7
4
35
1
49
5
2
15
83
9
11
I
7
I
1
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
4
from
x
5
other
x
3
[]=
x
5
clone
x
4
opts
x
6
should
x
2
==
p
5
I
0
I
87
I
1a
I
88
I
37
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
5
clone
s
54
should return an object with the same modules included
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
45
0
1
56
2
50
3
0
19
0
15
39
4
20
0
49
5
1
15
39
4
44
43
6
78
49
7
1
49
8
1
5
7
9
47
49
10
1
49
11
1
11
I
5
I
1
I
0
I
0
I
-2
p
12
x
6
Module
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
7
__xyz__
M
1
n
n
x
7
__xyz__
i
4
7
0
64
11
I
1
I
0
I
0
I
0
n
p
1
s
3
xyz
p
3
I
-1
I
8d
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
8d
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
8
@dataset
x
6
extend
x
4
Hash
x
16
new_from_literal
x
5
clone
x
7
__xyz__
x
10
respond_to
x
6
should
p
7
I
0
I
8c
I
b
I
8f
I
13
I
90
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
m
p
13
I
0
I
66
I
8
I
6a
I
13
I
75
I
1e
I
81
I
29
I
86
I
34
I
8b
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
10
Dataset#==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
45
0
1
49
2
0
38
3
15
44
43
4
78
49
5
1
38
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
4
mock
x
3
@db
x
4
Hash
x
16
new_from_literal
x
2
@h
p
5
I
0
I
96
I
9
I
97
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
62
should be the true for dataset with the same db, opts, and SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
7
1
49
2
1
49
3
0
39
0
7
1
49
2
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
5
x
3
@db
x
1
t
x
2
[]
x
6
should
x
2
==
p
3
I
0
I
9b
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
51
should be different for datasets with different dbs
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
49
2
1
49
3
0
45
4
5
49
6
0
7
1
49
2
1
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@db
x
1
t
x
2
[]
x
10
should_not
x
6
Sequel
n
x
4
mock
x
2
==
p
3
I
0
I
9f
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
should be different for datasets with different opts
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
7
1
49
2
1
49
3
0
39
0
7
1
49
2
1
44
43
4
79
49
5
1
13
7
6
79
49
7
2
15
49
8
1
83
9
11
I
7
I
0
I
0
I
0
I
-2
p
10
x
3
@db
x
1
t
x
2
[]
x
10
should_not
x
4
Hash
x
16
new_from_literal
x
4
blah
x
3
[]=
x
5
clone
x
2
==
p
3
I
0
I
a3
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
51
should be different for datasets with different SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
49
2
1
19
0
15
20
0
2
13
18
2
49
3
1
15
15
20
0
49
4
0
39
0
7
1
49
2
1
83
5
11
I
5
I
1
I
0
I
0
I
-2
p
6
x
3
@db
x
1
t
x
2
[]
x
18
quote_identifiers=
x
10
should_not
x
2
==
p
7
I
0
I
a7
I
a
I
a8
I
15
I
a9
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
p
11
I
0
I
95
I
8
I
9a
I
13
I
9e
I
1e
I
a2
I
29
I
a6
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
12
Dataset#hash
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
45
0
1
49
2
0
38
3
15
44
43
4
78
49
5
1
38
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
4
mock
x
3
@db
x
4
Hash
x
16
new_from_literal
x
2
@h
p
5
I
0
I
af
I
9
I
b0
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
62
should be the same for dataset with the same db, opts, and SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
39
0
7
1
49
2
1
49
3
0
49
4
0
39
0
7
1
49
2
1
49
3
0
83
5
15
39
6
39
0
7
1
49
2
1
79
13
18
3
49
7
2
15
15
39
6
39
0
7
1
49
2
1
49
2
1
49
4
0
79
83
5
11
I
5
I
0
I
0
I
0
I
-2
p
8
x
3
@db
x
1
t
x
2
[]
x
4
hash
x
6
should
x
2
==
x
2
@h
x
3
[]=
p
7
I
0
I
b4
I
1a
I
b5
I
2c
I
b6
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
51
should be different for datasets with different dbs
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
7
1
49
2
1
49
3
0
49
4
0
45
5
6
49
7
0
7
1
49
2
1
49
3
0
83
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
3
@db
x
1
t
x
2
[]
x
4
hash
x
10
should_not
x
6
Sequel
n
x
4
mock
x
2
==
p
3
I
0
I
ba
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
should be different for datasets with different opts
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
49
2
1
49
3
0
49
4
0
39
0
7
1
49
2
1
44
43
5
79
49
6
1
13
7
7
79
49
8
2
15
49
9
1
49
3
0
83
10
11
I
7
I
0
I
0
I
0
I
-2
p
11
x
3
@db
x
1
t
x
2
[]
x
4
hash
x
10
should_not
x
4
Hash
x
16
new_from_literal
x
4
blah
x
3
[]=
x
5
clone
x
2
==
p
3
I
0
I
be
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
51
should be different for datasets with different SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
49
2
1
19
0
15
20
0
2
13
18
2
49
3
1
15
15
20
0
49
4
0
49
5
0
39
0
7
1
49
2
1
49
4
0
83
6
11
I
5
I
1
I
0
I
0
I
-2
p
7
x
3
@db
x
1
t
x
2
[]
x
18
quote_identifiers=
x
4
hash
x
10
should_not
x
2
==
p
7
I
0
I
c2
I
a
I
c3
I
15
I
c4
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
p
11
I
0
I
ae
I
8
I
b3
I
13
I
b9
I
1e
I
bd
I
29
I
c1
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
16
A simple dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
162
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
15
5
7
29
64
56
30
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
31
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
ca
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
32
should format a select statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
39
0
49
1
0
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
8
@dataset
x
10
select_sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
ce
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
32
should format a delete statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
39
0
49
1
0
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
8
@dataset
x
10
delete_sql
x
6
should
s
16
DELETE FROM test
x
2
==
p
3
I
0
I
d2
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should format a truncate statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
39
0
49
1
0
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
8
@dataset
x
12
truncate_sql
x
6
should
s
19
TRUNCATE TABLE test
x
2
==
p
3
I
0
I
d6
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
68
should format a truncate statement with multiple tables if supported
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
7
1
56
2
50
3
1
15
39
0
7
4
7
5
49
6
2
49
7
0
49
8
0
7
9
64
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
25
check_truncation_allowed!
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
da
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
4
test
x
5
test2
x
4
from
x
12
truncate_sql
x
6
should
s
26
TRUNCATE TABLE test, test2
x
2
==
p
5
I
0
I
da
I
a
I
db
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should format an insert statement with default values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
39
0
49
1
0
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
8
@dataset
x
10
insert_sql
x
6
should
s
31
INSERT INTO test DEFAULT VALUES
x
2
==
p
3
I
0
I
df
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
123
should use a single column with a default value when the dataset doesn't support using insert statement with default values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
39
0
7
1
56
2
50
3
1
15
39
0
7
4
56
5
50
3
1
15
39
0
49
6
0
49
7
0
7
8
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
29
insert_supports_empty_values?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
e3
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
7
columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
7
0
7
1
35
2
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
a
x
1
b
p
3
I
0
I
e4
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
insert_sql
x
6
should
s
37
INSERT INTO test (b) VALUES (DEFAULT)
x
2
==
p
7
I
0
I
e3
I
a
I
e4
I
14
I
e5
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should format an insert statement with hash
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
79
39
0
44
43
1
80
49
2
1
13
7
3
7
4
64
49
5
2
15
13
7
6
7
7
49
5
2
15
49
8
1
5
7
9
13
70
9
50
15
44
43
10
7
11
78
49
12
2
6
9
47
49
13
1
49
14
1
15
39
0
44
43
1
78
49
2
1
49
8
1
49
14
0
7
15
64
83
16
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
4
name
s
4
wxyz
x
3
[]=
x
5
price
I
156
x
10
insert_sql
n
x
6
Regexp
s
111
INSERT INTO test \(name, price\) VALUES \('wxyz', 342\)|INSERT INTO test \(price, name\) VALUES \(342, 'wxyz'\)
x
3
new
x
5
match
x
6
should
s
31
INSERT INTO test DEFAULT VALUES
x
2
==
p
9
I
0
I
e9
I
1f
I
ea
I
36
I
e9
I
3a
I
ec
I
4f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should format an insert statement with string keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
39
0
44
43
1
80
49
2
1
13
7
3
64
7
4
64
49
5
2
15
13
7
6
64
7
7
49
5
2
15
49
8
1
5
7
9
13
70
9
52
15
44
43
10
7
11
78
49
12
2
6
9
47
49
13
1
49
14
1
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
8
@dataset
x
4
Hash
x
16
new_from_literal
s
4
name
s
4
wxyz
x
3
[]=
s
5
price
I
156
x
10
insert_sql
n
x
6
Regexp
s
111
INSERT INTO test \(name, price\) VALUES \('wxyz', 342\)|INSERT INTO test \(price, name\) VALUES \(342, 'wxyz'\)
x
3
new
x
5
match
x
6
should
p
7
I
0
I
f0
I
21
I
f1
I
38
I
f0
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
57
should format an insert statement with an arbitrary value
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
4
123
49
1
1
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
8
@dataset
x
10
insert_sql
x
6
should
s
29
INSERT INTO test VALUES (123)
x
2
==
p
3
I
0
I
f5
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
should format an insert statement with sub-query
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
39
0
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
80
49
6
2
15
49
7
1
49
8
1
49
9
0
7
10
64
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
x
9
something
x
4
from
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
6
filter
x
10
insert_sql
x
6
should
s
54
INSERT INTO test SELECT * FROM something WHERE (x = 2)
x
2
==
p
3
I
0
I
f9
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should format an insert statement with array
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
7
1
64
80
7
2
49
3
3
49
4
0
7
5
64
83
6
11
I
5
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
s
1
a
d
 +0.812500000000000000000000000000000000000000000000000000     3
x
10
insert_sql
x
6
should
s
37
INSERT INTO test VALUES ('a', 2, 6.5)
x
2
==
p
3
I
0
I
fd
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
should format an update statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
4
name
s
3
abc
x
3
[]=
x
10
update_sql
x
6
should
s
28
UPDATE test SET name = 'abc'
x
2
==
p
3
I
0
I
101
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should be able to return rows for arbitrary SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
49
7
0
49
8
0
7
4
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
3
sql
s
11
xxx yyy zzz
x
3
[]=
x
5
clone
x
10
select_sql
x
6
should
x
2
==
p
3
I
0
I
105
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
46
should use the :sql option for all sql methods
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
7
0
64
19
0
15
39
1
44
43
2
79
49
3
1
13
7
4
20
0
49
5
2
15
49
6
1
19
1
15
20
1
49
4
0
49
7
0
20
0
83
8
15
20
1
49
9
0
49
7
0
20
0
83
8
15
20
1
49
10
0
49
7
0
20
0
83
8
15
20
1
49
11
0
49
7
0
20
0
83
8
15
20
1
49
12
0
49
7
0
20
0
83
8
15
20
1
49
13
0
49
7
0
20
0
83
8
11
I
8
I
2
I
0
I
0
I
-2
p
14
s
1
X
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
3
sql
x
3
[]=
x
5
clone
x
6
should
x
2
==
x
10
select_sql
x
10
insert_sql
x
10
delete_sql
x
10
update_sql
x
12
truncate_sql
p
17
I
0
I
109
I
6
I
10a
I
1e
I
10b
I
2b
I
10c
I
38
I
10d
I
45
I
10e
I
52
I
10f
I
5f
I
110
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
3
sql
x
2
ds
p
31
I
0
I
c9
I
8
I
cd
I
13
I
d1
I
1e
I
d5
I
29
I
d9
I
34
I
de
I
3f
I
e2
I
4a
I
e8
I
55
I
ef
I
60
I
f4
I
6b
I
f8
I
76
I
fc
I
81
I
100
I
8c
I
104
I
97
I
108
I
a2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
49
A dataset with multiple tables in its FROM clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
7
7
49
8
2
38
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
2
t1
x
2
t2
x
4
from
x
8
@dataset
p
3
I
0
I
116
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
27
should raise on #update_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
11
I
6
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
10
update_sql
p
3
I
0
I
11a
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
16
InvalidOperation
x
11
raise_error
x
6
should
p
3
I
0
I
11a
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
27
should raise on #delete_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
10
delete_sql
p
3
I
0
I
11e
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
16
InvalidOperation
x
11
raise_error
x
6
should
p
3
I
0
I
11e
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should raise on #truncate_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
12
truncate_sql
p
3
I
0
I
122
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
16
InvalidOperation
x
11
raise_error
x
6
should
p
3
I
0
I
122
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
should raise on #insert_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
10
insert_sql
p
3
I
0
I
126
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
16
InvalidOperation
x
11
raise_error
x
6
should
p
3
I
0
I
126
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
should generate a select query FROM all specified tables
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
39
0
49
1
0
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
8
@dataset
x
10
select_sql
x
6
should
s
20
SELECT * FROM t1, t2
x
2
==
p
3
I
0
I
12a
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
13
I
0
I
115
I
8
I
119
I
13
I
11d
I
1e
I
121
I
29
I
125
I
34
I
129
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
26
Dataset#unused_table_alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
3
@ds
p
3
I
0
I
130
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
57
should return given symbol if it hasn't already been used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
39
0
7
1
49
2
1
49
3
0
7
1
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
3
@ds
x
4
blah
x
18
unused_table_alias
x
6
should
x
2
==
p
3
I
0
I
134
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
100
should return a symbol specifying an alias that hasn't already been used if it has already been used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
64
39
0
7
1
49
2
1
49
3
0
7
4
83
5
15
39
0
7
1
7
4
49
6
2
7
1
49
2
1
49
3
0
7
7
83
5
15
39
0
7
1
7
4
49
6
2
7
7
49
8
1
7
1
49
2
1
49
3
0
7
9
83
5
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
4
test
x
18
unused_table_alias
x
6
should
x
6
test_0
x
2
==
x
4
from
x
6
test_1
x
10
cross_join
x
6
test_2
p
7
I
0
I
138
I
f
I
139
I
25
I
13a
I
40
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
71
should return an appropriate symbol if given other forms of identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
175
39
0
7
1
64
49
2
1
49
3
0
7
4
83
5
15
39
0
7
6
49
2
1
49
3
0
7
4
83
5
15
39
0
7
7
49
2
1
49
3
0
7
4
83
5
15
39
0
45
8
9
7
10
7
11
49
12
2
49
2
1
49
3
0
7
4
83
5
15
39
0
45
8
13
7
10
49
14
1
7
11
49
15
1
49
2
1
49
3
0
7
4
83
5
15
39
0
45
8
16
7
10
49
14
1
45
8
17
7
11
49
18
1
49
15
1
49
2
1
49
3
0
7
4
83
5
15
39
0
45
8
19
7
10
49
14
1
7
1
64
49
15
1
49
2
1
49
3
0
7
4
83
5
15
39
0
45
8
20
7
11
49
18
1
49
2
1
49
3
0
7
4
83
5
11
I
5
I
0
I
0
I
0
I
-2
p
21
x
3
@ds
s
4
test
x
18
unused_table_alias
x
6
should
x
6
test_0
x
2
==
x
11
b__t___test
x
7
b__test
x
6
Sequel
n
x
1
b
x
4
test
x
7
qualify
n
x
4
expr
x
2
as
n
n
x
10
identifier
n
n
p
17
I
0
I
13e
I
10
I
13f
I
1f
I
140
I
2e
I
141
I
45
I
142
I
5f
I
143
I
7f
I
144
I
9a
I
145
I
af
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
12f
I
8
I
133
I
13
I
137
I
1e
I
13d
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
14
Dataset#exists
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
45
0
1
49
2
0
7
3
49
4
1
38
5
15
39
5
45
0
6
7
7
49
8
1
4
100
84
9
49
10
1
38
11
15
39
5
45
0
12
7
7
49
8
1
4
50
85
13
49
10
1
38
14
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
4
mock
x
4
test
x
2
[]
x
4
@ds1
n
x
5
price
x
4
expr
x
1
<
x
6
filter
x
4
@ds2
n
x
1
>
x
4
@ds3
p
7
I
0
I
14b
I
e
I
14c
I
22
I
14d
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
22
should work in filters
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
39
1
49
2
0
49
3
1
49
4
0
49
5
0
7
6
64
83
7
15
39
0
39
1
49
2
0
39
8
49
2
0
49
9
1
49
3
1
49
4
0
49
5
0
7
10
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
4
@ds1
x
4
@ds2
x
6
exists
x
6
filter
x
3
sql
x
6
should
s
74
SELECT * FROM test WHERE (EXISTS (SELECT * FROM test WHERE (price < 100)))
x
2
==
x
4
@ds3
x
1
&
s
129
SELECT * FROM test WHERE ((EXISTS (SELECT * FROM test WHERE (price < 100))) AND (EXISTS (SELECT * FROM test WHERE (price > 50))))
p
9
I
0
I
151
I
10
I
152
I
16
I
153
I
2e
I
154
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
21
should work in select
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
39
0
39
1
49
2
0
7
3
49
4
1
39
5
49
2
0
7
6
49
4
1
49
7
2
49
8
0
49
9
0
7
10
64
83
11
11
I
5
I
0
I
0
I
0
I
-2
p
12
x
4
@ds1
x
4
@ds2
x
6
exists
x
1
a
x
2
as
x
4
@ds3
x
1
b
x
6
select
x
3
sql
x
6
should
s
126
SELECT (EXISTS (SELECT * FROM test WHERE (price < 100))) AS a, (EXISTS (SELECT * FROM test WHERE (price > 50))) AS b FROM test
x
2
==
p
5
I
0
I
158
I
1f
I
159
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
14a
I
8
I
150
I
13
I
157
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
13
Dataset#where
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
382
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
15
5
7
29
64
56
30
47
50
4
1
15
5
7
31
64
56
32
47
50
4
1
15
5
7
33
64
56
34
47
50
4
1
15
5
7
33
64
56
35
47
50
4
1
15
5
7
36
64
56
37
47
50
4
1
15
5
7
38
64
56
39
47
50
4
1
15
5
7
40
64
56
41
47
50
4
1
15
5
7
42
64
56
43
47
50
4
1
15
5
7
44
64
56
45
47
50
4
1
15
5
7
46
64
56
47
47
50
4
1
15
5
7
48
64
56
49
47
50
4
1
15
5
7
50
64
56
51
47
50
4
1
15
5
7
52
64
56
53
47
50
4
1
15
5
7
54
64
56
55
47
50
4
1
15
5
7
56
64
56
57
47
50
4
1
15
5
7
58
64
56
59
47
50
4
1
15
5
7
60
64
56
61
47
50
4
1
15
5
7
62
64
56
63
47
50
4
1
15
5
7
64
64
56
65
47
50
4
1
15
5
7
66
64
56
67
47
50
4
1
15
5
7
68
64
56
69
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
70
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
64
45
0
1
49
2
0
7
3
49
4
1
38
5
15
39
5
44
43
6
79
49
7
1
13
7
8
7
9
64
49
10
2
15
49
11
1
38
12
15
39
5
7
13
64
7
9
64
49
11
2
38
14
15
39
5
7
15
64
49
11
1
38
16
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
4
mock
x
4
test
x
2
[]
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
6
region
s
4
Asia
x
3
[]=
x
5
where
x
3
@d1
s
10
region = ?
x
3
@d2
s
5
a = 1
x
3
@d3
p
9
I
0
I
15f
I
e
I
160
I
27
I
161
I
35
I
162
I
40
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
44
should just clone if given an empty argument
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
138
39
0
44
43
1
78
49
2
1
49
3
1
49
4
0
49
5
0
39
0
49
4
0
83
6
15
39
0
35
0
49
3
1
49
4
0
49
5
0
39
0
49
4
0
83
6
15
39
0
7
7
64
49
3
1
49
4
0
49
5
0
39
0
49
4
0
83
6
15
39
0
44
43
1
78
49
2
1
49
8
1
49
4
0
49
5
0
39
0
49
4
0
83
6
15
39
0
35
0
49
8
1
49
4
0
49
5
0
39
0
49
4
0
83
6
15
39
0
7
7
64
49
8
1
49
4
0
49
5
0
39
0
49
4
0
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
5
where
x
3
sql
x
6
should
x
2
==
s
0

x
6
filter
p
13
I
0
I
166
I
1a
I
167
I
2f
I
168
I
45
I
16a
I
5f
I
16b
I
74
I
16c
I
8a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
23
should work with hashes
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
61
39
0
44
43
1
80
49
2
1
13
7
3
7
4
64
49
5
2
15
13
7
6
7
7
49
5
2
15
49
8
1
49
9
0
5
7
10
13
70
9
53
15
44
43
11
7
12
78
49
13
2
6
10
47
49
14
1
49
15
1
11
I
6
I
0
I
0
I
0
I
-2
p
16
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
4
name
s
3
xyz
x
3
[]=
x
5
price
I
156
x
5
where
x
10
select_sql
n
x
6
Regexp
s
93
WHERE \(\(name = 'xyz'\) AND \(price = 342\)\)|WHERE \(\(price = 342\) AND \(name = 'xyz'\)\)
x
3
new
x
5
match
x
6
should
p
7
I
0
I
170
I
22
I
171
I
39
I
170
I
3d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
80
should work with a string with placeholders and arguments for those placeholders
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
39
0
7
1
64
4
100
79
80
4
3
35
3
49
2
3
49
3
0
49
4
0
7
5
64
83
6
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
s
21
price < ? AND id in ?
x
5
where
x
10
select_sql
x
6
should
s
58
SELECT * FROM test WHERE (price < 100 AND id in (1, 2, 3))
x
2
==
p
3
I
0
I
175
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
should not modify passed array with placeholders
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
40
7
0
64
4
100
79
80
4
3
35
5
19
0
15
20
0
49
1
0
19
1
15
39
2
20
0
49
3
1
15
20
1
49
4
0
20
0
83
5
11
I
8
I
2
I
0
I
0
I
-2
p
6
s
21
price < ? AND id in ?
x
3
dup
x
8
@dataset
x
5
where
x
6
should
x
2
==
p
9
I
0
I
179
I
e
I
17a
I
16
I
17b
I
1e
I
17c
I
28
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
a
x
1
b
s
49
should work with strings (custom SQL expressions)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
7
1
64
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
s
17
(a = 1 AND b = 2)
x
5
where
x
10
select_sql
x
6
should
s
44
SELECT * FROM test WHERE ((a = 1 AND b = 2))
x
2
==
p
5
I
0
I
180
I
e
I
181
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
91
should work with a string with named placeholders and a hash of placeholder value arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
49
39
0
7
1
64
44
43
2
80
49
3
1
13
7
4
4
100
49
5
2
15
13
7
6
79
80
4
3
35
3
49
5
2
15
49
7
2
49
8
0
49
9
0
7
10
64
83
11
11
I
9
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
s
29
price < :price AND id in :ids
x
4
Hash
x
16
new_from_literal
x
5
price
x
3
[]=
x
3
ids
x
5
where
x
10
select_sql
x
6
should
s
58
SELECT * FROM test WHERE (price < 100 AND id in (1, 2, 3))
x
2
==
p
5
I
0
I
185
I
2b
I
186
I
31
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should not modify passed array with named placeholders
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
50
7
0
64
44
43
1
79
49
2
1
13
7
3
4
100
49
4
2
15
35
2
19
0
15
20
0
49
5
0
19
1
15
39
6
20
0
49
7
1
15
20
1
49
8
0
20
0
83
9
11
I
8
I
2
I
0
I
0
I
-2
p
10
s
29
price < :price AND id in :ids
x
4
Hash
x
16
new_from_literal
x
5
price
x
3
[]=
x
3
dup
x
8
@dataset
x
5
where
x
6
should
x
2
==
p
9
I
0
I
18a
I
18
I
18b
I
20
I
18c
I
28
I
18d
I
32
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
a
x
1
b
s
66
should not replace named placeholders that don't exist in the hash
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
64
44
43
2
79
49
3
1
13
7
4
4
100
49
5
2
15
49
6
2
49
7
0
49
8
0
7
9
64
83
10
11
I
7
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
s
29
price < :price AND id in :ids
x
4
Hash
x
16
new_from_literal
x
5
price
x
3
[]=
x
5
where
x
10
select_sql
x
6
should
s
53
SELECT * FROM test WHERE (price < 100 AND id in :ids)
x
2
==
p
3
I
0
I
191
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
should handle partial names
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
64
44
43
2
80
49
3
1
13
7
4
80
49
5
2
15
13
7
6
4
100
49
5
2
15
49
7
2
49
8
0
49
9
0
7
10
64
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
s
26
price < :price AND id = :p
x
4
Hash
x
16
new_from_literal
x
1
p
x
3
[]=
x
5
price
x
5
where
x
10
select_sql
x
6
should
s
49
SELECT * FROM test WHERE (price < 100 AND id = 2)
x
2
==
p
3
I
0
I
195
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should affect select, delete and update statements
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
171
39
0
49
1
0
49
2
0
7
3
64
83
4
15
39
0
49
5
0
49
2
0
7
6
64
83
4
15
39
0
44
43
7
79
49
8
1
13
7
9
78
49
10
2
15
49
11
1
49
2
0
7
12
64
83
4
15
39
13
49
1
0
49
2
0
7
3
64
83
4
15
39
13
49
5
0
49
2
0
7
6
64
83
4
15
39
13
44
43
7
79
49
8
1
13
7
9
78
49
10
2
15
49
11
1
49
2
0
7
12
64
83
4
15
39
14
49
1
0
49
2
0
7
15
64
83
4
15
39
14
49
5
0
49
2
0
7
16
64
83
4
15
39
14
44
43
7
79
49
8
1
13
7
9
78
49
10
2
15
49
11
1
49
2
0
7
17
64
83
4
11
I
6
I
0
I
0
I
0
I
-2
p
18
x
3
@d1
x
10
select_sql
x
6
should
s
42
SELECT * FROM test WHERE (region = 'Asia')
x
2
==
x
10
delete_sql
s
40
DELETE FROM test WHERE (region = 'Asia')
x
4
Hash
x
16
new_from_literal
x
3
GDP
x
3
[]=
x
10
update_sql
s
47
UPDATE test SET GDP = 0 WHERE (region = 'Asia')
x
3
@d2
x
3
@d3
s
32
SELECT * FROM test WHERE (a = 1)
s
30
DELETE FROM test WHERE (a = 1)
s
37
UPDATE test SET GDP = 0 WHERE (a = 1)
p
19
I
0
I
199
I
e
I
19a
I
1c
I
19b
I
39
I
19d
I
47
I
19e
I
55
I
19f
I
72
I
1a1
I
80
I
1a2
I
8e
I
1a3
I
ab
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should be composable using AND operator (for scoping)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
252
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
49
7
0
49
8
0
7
9
64
83
10
15
39
0
7
11
64
49
6
1
49
7
0
49
8
0
7
12
64
83
10
15
39
0
7
13
64
49
6
1
49
7
0
49
8
0
7
14
64
83
10
15
39
0
7
15
64
7
16
49
6
2
49
7
0
49
8
0
7
17
64
83
10
15
39
18
7
15
64
7
16
49
6
2
49
7
0
49
8
0
7
17
64
83
10
15
39
18
44
43
1
79
49
2
1
13
7
19
7
20
64
7
21
64
35
2
49
5
2
15
49
6
1
49
7
0
49
8
0
7
22
64
83
10
15
39
18
7
15
64
49
6
1
49
7
0
49
8
0
7
23
64
83
10
15
39
24
7
25
64
49
6
1
49
7
0
49
8
0
7
26
64
83
10
15
39
24
44
43
1
79
49
2
1
13
7
27
4
3
49
5
2
15
49
6
1
49
7
0
49
8
0
7
28
64
83
10
15
39
24
7
29
64
4
4
49
6
2
49
7
0
49
8
0
7
30
64
83
10
11
I
7
I
0
I
0
I
0
I
-2
p
31
x
3
@d1
x
4
Hash
x
16
new_from_literal
x
4
size
s
3
big
x
3
[]=
x
5
where
x
10
select_sql
x
6
should
s
63
SELECT * FROM test WHERE ((region = 'Asia') AND (size = 'big'))
x
2
==
s
17
population > 1000
s
68
SELECT * FROM test WHERE ((region = 'Asia') AND (population > 1000))
s
18
(a > 1) OR (b < 2)
s
69
SELECT * FROM test WHERE ((region = 'Asia') AND ((a > 1) OR (b < 2)))
s
7
GDP > ?
I
3e8
s
61
SELECT * FROM test WHERE ((region = 'Asia') AND (GDP > 1000))
x
3
@d2
x
4
name
s
5
Japan
s
5
China
s
77
SELECT * FROM test WHERE ((region = 'Asia') AND (name IN ('Japan', 'China')))
s
58
SELECT * FROM test WHERE ((region = 'Asia') AND (GDP > ?))
x
3
@d3
s
5
b = 2
s
46
SELECT * FROM test WHERE ((a = 1) AND (b = 2))
x
1
c
s
46
SELECT * FROM test WHERE ((a = 1) AND (c = 3))
s
5
d = ?
s
46
SELECT * FROM test WHERE ((a = 1) AND (d = 4))
p
21
I
0
I
1a9
I
22
I
1ac
I
36
I
1ad
I
4a
I
1b0
I
60
I
1b3
I
76
I
1b6
I
9d
I
1b9
I
b1
I
1bc
I
c5
I
1bf
I
e6
I
1c2
I
fc
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
64
should be composable using AND operator (for scoping) with block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
3
@d3
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
5
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
e
x
1
<
p
3
I
0
I
1c6
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
where
x
10
select_sql
x
6
should
s
46
SELECT * FROM test WHERE ((a = 1) AND (e < 5))
x
2
==
p
3
I
0
I
1c6
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
20
should accept ranges
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
166
39
0
44
43
1
79
49
2
1
13
7
3
44
43
4
4
4
4
7
49
5
2
49
6
2
15
49
7
1
49
8
0
49
9
0
7
10
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
3
44
43
4
4
4
4
7
2
49
5
3
49
6
2
15
49
7
1
49
8
0
49
9
0
7
12
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
13
44
43
4
4
4
4
7
49
5
2
49
6
2
15
49
7
1
49
8
0
49
9
0
7
14
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
13
44
43
4
4
4
4
7
2
49
5
3
49
6
2
15
49
7
1
49
8
0
49
9
0
7
15
64
83
11
11
I
9
I
0
I
0
I
0
I
-2
p
16
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
5
Range
x
3
new
x
3
[]=
x
6
filter
x
3
sql
x
6
should
s
50
SELECT * FROM test WHERE ((id >= 4) AND (id <= 7))
x
2
==
s
49
SELECT * FROM test WHERE ((id >= 4) AND (id < 7))
x
9
table__id
s
62
SELECT * FROM test WHERE ((table.id >= 4) AND (table.id <= 7))
s
61
SELECT * FROM test WHERE ((table.id >= 4) AND (table.id < 7))
p
9
I
0
I
1ca
I
29
I
1cb
I
53
I
1cd
I
7c
I
1ce
I
a6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
17
should accept nil
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
44
43
1
79
49
2
1
13
7
3
1
49
4
2
15
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
8
owner_id
x
3
[]=
x
6
filter
x
3
sql
x
6
should
s
43
SELECT * FROM test WHERE (owner_id IS NULL)
x
2
==
p
3
I
0
I
1d2
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
24
should accept a subquery
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
39
0
7
1
64
39
2
45
3
4
7
5
7
6
49
7
2
49
8
1
49
9
2
49
10
0
49
11
0
7
12
64
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
s
7
gdp > ?
x
3
@d1
x
6
Sequel
n
x
3
avg
x
3
gdp
x
8
function
x
6
select
x
6
filter
x
3
sql
x
6
should
s
84
SELECT * FROM test WHERE (gdp > (SELECT avg(gdp) FROM test WHERE (region = 'Asia')))
x
2
==
p
3
I
0
I
1d6
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
62
should handle all types of IN/NOT IN queries with empty arrays
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
140
39
0
44
43
1
79
49
2
1
13
7
3
35
0
49
4
2
15
49
5
1
49
6
0
49
7
0
7
8
64
83
9
15
39
0
44
43
1
79
49
2
1
13
7
10
7
11
35
2
35
0
49
4
2
15
49
5
1
49
6
0
49
7
0
7
12
64
83
9
15
39
0
44
43
1
79
49
2
1
13
7
3
35
0
49
4
2
15
49
13
1
49
6
0
49
7
0
7
14
64
83
9
15
39
0
44
43
1
79
49
2
1
13
7
10
7
11
35
2
35
0
49
4
2
15
49
13
1
49
6
0
49
7
0
7
15
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
16
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
6
filter
x
3
sql
x
6
should
s
35
SELECT * FROM test WHERE (id != id)
x
2
==
x
3
id1
x
3
id2
s
56
SELECT * FROM test WHERE ((id1 != id1) AND (id2 != id2))
x
7
exclude
s
34
SELECT * FROM test WHERE (id = id)
s
54
SELECT * FROM test WHERE ((id1 = id1) AND (id2 = id2))
p
9
I
0
I
1da
I
21
I
1db
I
46
I
1dc
I
67
I
1dd
I
8c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
189
29
161
1
26
93
0
15
45
0
1
3
13
18
2
49
2
1
15
15
39
3
44
43
4
79
49
5
1
13
7
6
35
0
49
7
2
15
49
8
1
49
9
0
49
10
0
7
11
64
83
12
15
39
3
44
43
4
79
49
5
1
13
7
13
7
14
35
2
35
0
49
7
2
15
49
8
1
49
9
0
49
10
0
7
11
64
83
12
15
39
3
44
43
4
79
49
5
1
13
7
6
35
0
49
7
2
15
49
15
1
49
9
0
49
10
0
7
16
64
83
12
15
39
3
44
43
4
79
49
5
1
13
7
13
7
14
35
2
35
0
49
7
2
15
49
15
1
49
9
0
49
10
0
7
16
64
83
12
30
8
176
26
45
0
17
2
13
18
2
49
2
1
15
15
27
34
45
0
18
2
13
18
2
49
2
1
15
15
11
I
7
I
0
I
0
I
0
I
-2
p
19
x
6
Sequel
n
x
25
empty_array_handle_nulls=
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
6
filter
x
3
sql
x
6
should
s
32
SELECT * FROM test WHERE (1 = 0)
x
2
==
x
3
id1
x
3
id2
x
7
exclude
s
32
SELECT * FROM test WHERE (1 = 1)
n
n
p
15
I
0
I
1e2
I
13
I
1e3
I
34
I
1e4
I
59
I
1e5
I
7a
I
1e6
I
a2
I
1e8
I
b0
I
1e8
I
bd
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should handle all types of IN/NOT IN queries
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
434
39
0
44
43
1
79
49
2
1
13
7
3
39
4
7
3
49
5
1
49
6
2
15
49
7
1
49
8
0
49
9
0
7
10
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
3
79
80
35
2
49
6
2
15
49
7
1
49
8
0
49
9
0
7
12
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
13
7
14
35
2
39
4
7
13
7
14
49
5
2
49
6
2
15
49
7
1
49
8
0
49
9
0
7
15
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
13
7
14
35
2
45
16
17
79
80
35
2
4
3
4
4
35
2
35
2
49
18
1
49
6
2
15
49
7
1
49
8
0
49
9
0
7
19
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
13
7
14
35
2
79
80
35
2
4
3
4
4
35
2
35
2
49
6
2
15
49
7
1
49
8
0
49
9
0
7
19
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
3
39
4
7
3
49
5
1
49
6
2
15
49
20
1
49
8
0
49
9
0
7
21
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
3
79
80
35
2
49
6
2
15
49
20
1
49
8
0
49
9
0
7
22
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
13
7
14
35
2
39
4
7
13
7
14
49
5
2
49
6
2
15
49
20
1
49
8
0
49
9
0
7
23
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
13
7
14
35
2
45
16
24
79
80
35
2
4
3
4
4
35
2
35
2
49
18
1
49
6
2
15
49
20
1
49
8
0
49
9
0
7
25
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
13
7
14
35
2
79
80
35
2
4
3
4
4
35
2
35
2
49
6
2
15
49
20
1
49
8
0
49
9
0
7
25
64
83
11
11
I
9
I
0
I
0
I
0
I
-2
p
26
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
@d1
x
6
select
x
3
[]=
x
6
filter
x
3
sql
x
6
should
s
78
SELECT * FROM test WHERE (id IN (SELECT id FROM test WHERE (region = 'Asia')))
x
2
==
s
39
SELECT * FROM test WHERE (id IN (1, 2))
x
3
id1
x
3
id2
s
92
SELECT * FROM test WHERE ((id1, id2) IN (SELECT id1, id2 FROM test WHERE (region = 'Asia')))
x
6
Sequel
n
x
10
value_list
s
57
SELECT * FROM test WHERE ((id1, id2) IN ((1, 2), (3, 4)))
x
7
exclude
s
82
SELECT * FROM test WHERE (id NOT IN (SELECT id FROM test WHERE (region = 'Asia')))
s
43
SELECT * FROM test WHERE (id NOT IN (1, 2))
s
96
SELECT * FROM test WHERE ((id1, id2) NOT IN (SELECT id1, id2 FROM test WHERE (region = 'Asia')))
n
s
61
SELECT * FROM test WHERE ((id1, id2) NOT IN ((1, 2), (3, 4)))
p
21
I
0
I
1ed
I
26
I
1ee
I
49
I
1ef
I
75
I
1f0
I
aa
I
1f1
I
d9
I
1f3
I
ff
I
1f4
I
122
I
1f5
I
14e
I
1f6
I
183
I
1f7
I
1b2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
104
should handle IN/NOT IN queries with multiple columns and an array where the database doesn't support it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
210
39
0
7
1
56
2
50
3
1
15
39
0
44
43
4
79
49
5
1
13
7
6
7
7
35
2
79
80
35
2
4
3
4
4
35
2
35
2
49
8
2
15
49
9
1
49
10
0
49
11
0
7
12
64
83
13
15
39
0
44
43
4
79
49
5
1
13
7
6
7
7
35
2
79
80
35
2
4
3
4
4
35
2
35
2
49
8
2
15
49
14
1
49
10
0
49
11
0
7
15
64
83
13
15
39
0
44
43
4
79
49
5
1
13
7
6
7
7
35
2
45
16
17
79
80
35
2
4
3
4
4
35
2
35
2
49
18
1
49
8
2
15
49
9
1
49
10
0
49
11
0
7
12
64
83
13
15
39
0
44
43
4
79
49
5
1
13
7
6
7
7
35
2
45
16
19
79
80
35
2
4
3
4
4
35
2
35
2
49
18
1
49
8
2
15
49
14
1
49
10
0
49
11
0
7
15
64
83
13
11
I
9
I
0
I
0
I
0
I
-2
p
20
x
8
@dataset
x
28
supports_multiple_column_in?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
1fb
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
4
Hash
x
16
new_from_literal
x
3
id1
x
3
id2
x
3
[]=
x
6
filter
x
3
sql
x
6
should
s
81
SELECT * FROM test WHERE (((id1 = 1) AND (id2 = 2)) OR ((id1 = 3) AND (id2 = 4)))
x
2
==
x
7
exclude
s
84
SELECT * FROM test WHERE (((id1 != 1) OR (id2 != 2)) AND ((id1 != 3) OR (id2 != 4)))
x
6
Sequel
n
x
10
value_list
n
p
11
I
0
I
1fb
I
a
I
1fc
I
39
I
1fd
I
68
I
1fe
I
9d
I
1ff
I
d2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
105
should handle IN/NOT IN queries with multiple columns and a dataset where the database doesn't support it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
233
39
0
7
1
56
2
50
3
1
15
45
4
5
44
43
6
79
49
7
1
13
7
8
44
43
6
80
49
7
1
13
7
9
79
49
10
2
15
13
7
11
80
49
10
2
15
44
43
6
80
49
7
1
13
7
9
4
3
49
10
2
15
13
7
11
4
4
49
10
2
15
35
2
49
10
2
15
49
12
1
19
0
15
20
0
7
13
49
14
1
7
9
7
11
49
15
2
44
43
6
79
49
7
1
13
7
16
7
17
64
49
10
2
15
49
18
1
7
9
7
11
49
19
2
19
1
15
39
0
44
43
6
79
49
7
1
13
7
9
7
11
35
2
20
1
49
10
2
15
49
18
1
49
20
0
49
21
0
7
22
64
83
23
15
20
0
49
24
0
49
21
0
7
25
64
35
1
83
23
15
39
0
44
43
6
79
49
7
1
13
7
9
7
11
35
2
20
1
49
10
2
15
49
26
1
49
20
0
49
21
0
7
27
64
83
23
15
20
0
49
24
0
49
21
0
7
25
64
35
1
83
23
11
I
c
I
2
I
0
I
0
I
-2
p
28
x
8
@dataset
x
28
supports_multiple_column_in?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
203
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
3
id1
x
3
[]=
x
3
id2
x
4
mock
x
4
test
x
2
[]
x
6
select
x
6
region
s
4
Asia
x
6
filter
x
7
columns
x
3
sql
x
6
should
s
81
SELECT * FROM test WHERE (((id1 = 1) AND (id2 = 2)) OR ((id1 = 3) AND (id2 = 4)))
x
2
==
x
4
sqls
s
49
SELECT id1, id2 FROM test WHERE (region = 'Asia')
x
7
exclude
s
84
SELECT * FROM test WHERE (((id1 != 1) OR (id2 != 2)) AND ((id1 != 3) OR (id2 != 4)))
p
15
I
0
I
203
I
a
I
204
I
53
I
205
I
7f
I
206
I
a4
I
207
I
b4
I
208
I
d9
I
209
I
e9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
db
x
2
d1
s
112
should handle IN/NOT IN queries with multiple columns and an empty dataset where the database doesn't support it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
169
39
0
7
1
56
2
50
3
1
15
45
4
5
49
6
0
19
0
15
20
0
7
7
49
8
1
7
9
7
10
49
11
2
44
43
12
79
49
13
1
13
7
14
7
15
64
49
16
2
15
49
17
1
7
9
7
10
49
18
2
19
1
15
39
0
44
43
12
79
49
13
1
13
7
9
7
10
35
2
20
1
49
16
2
15
49
17
1
49
19
0
49
20
0
7
21
64
83
22
15
20
0
49
23
0
49
20
0
7
24
64
35
1
83
22
15
39
0
44
43
12
79
49
13
1
13
7
9
7
10
35
2
20
1
49
16
2
15
49
25
1
49
19
0
49
20
0
7
26
64
83
22
15
20
0
49
23
0
49
20
0
7
24
64
35
1
83
22
11
I
8
I
2
I
0
I
0
I
-2
p
27
x
8
@dataset
x
28
supports_multiple_column_in?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
20d
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
6
Sequel
n
x
4
mock
x
4
test
x
2
[]
x
3
id1
x
3
id2
x
6
select
x
4
Hash
x
16
new_from_literal
x
6
region
s
4
Asia
x
3
[]=
x
6
filter
x
7
columns
x
3
sql
x
6
should
s
56
SELECT * FROM test WHERE ((id1 != id1) AND (id2 != id2))
x
2
==
x
4
sqls
s
49
SELECT id1, id2 FROM test WHERE (region = 'Asia')
x
7
exclude
s
54
SELECT * FROM test WHERE ((id1 = id1) AND (id2 = id2))
p
15
I
0
I
20d
I
a
I
20e
I
13
I
20f
I
3f
I
210
I
64
I
211
I
74
I
212
I
99
I
213
I
a9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
db
x
2
d1
s
139
should handle IN/NOT IN queries with multiple columns and an empty dataset where the database doesn't support it with correct NULL handling
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
218
29
190
1
26
93
0
15
45
0
1
3
13
18
2
49
2
1
15
15
39
3
7
4
56
5
50
6
1
15
45
0
7
49
8
0
19
0
15
20
0
7
9
49
10
1
7
11
7
12
49
13
2
44
43
14
79
49
15
1
13
7
16
7
17
64
49
18
2
15
49
19
1
7
11
7
12
49
20
2
19
1
15
39
3
44
43
14
79
49
15
1
13
7
11
7
12
35
2
20
1
49
18
2
15
49
19
1
49
21
0
49
22
0
7
23
64
83
24
15
20
0
49
25
0
49
22
0
7
26
64
35
1
83
24
15
39
3
44
43
14
79
49
15
1
13
7
11
7
12
35
2
20
1
49
18
2
15
49
27
1
49
21
0
49
22
0
7
28
64
83
24
15
20
0
49
25
0
49
22
0
7
26
64
35
1
83
24
30
8
205
26
45
0
29
2
13
18
2
49
2
1
15
15
27
34
45
0
30
2
13
18
2
49
2
1
15
15
11
I
9
I
2
I
0
I
0
I
-2
p
31
x
6
Sequel
n
x
25
empty_array_handle_nulls=
x
8
@dataset
x
28
supports_multiple_column_in?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
219
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
n
x
4
mock
x
4
test
x
2
[]
x
3
id1
x
3
id2
x
6
select
x
4
Hash
x
16
new_from_literal
x
6
region
s
4
Asia
x
3
[]=
x
6
filter
x
7
columns
x
3
sql
x
6
should
s
32
SELECT * FROM test WHERE (1 = 0)
x
2
==
x
4
sqls
s
49
SELECT id1, id2 FROM test WHERE (region = 'Asia')
x
7
exclude
s
32
SELECT * FROM test WHERE (1 = 1)
n
n
p
21
I
0
I
218
I
13
I
219
I
1d
I
21a
I
26
I
21b
I
52
I
21c
I
77
I
21d
I
87
I
21e
I
ac
I
21f
I
bf
I
221
I
cd
I
221
I
da
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
db
x
2
d1
s
59
should handle IN/NOT IN queries for datasets with row_procs
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
250
39
0
7
1
56
2
50
3
1
15
45
4
5
44
43
6
79
49
7
1
13
7
8
44
43
6
80
49
7
1
13
7
9
79
49
10
2
15
13
7
11
80
49
10
2
15
44
43
6
80
49
7
1
13
7
9
4
3
49
10
2
15
13
7
11
4
4
49
10
2
15
35
2
49
10
2
15
49
12
1
19
0
15
20
0
7
13
49
14
1
7
9
7
11
49
15
2
44
43
6
79
49
7
1
13
7
16
7
17
64
49
10
2
15
49
18
1
7
9
7
11
49
19
2
19
1
15
20
1
5
56
20
47
50
21
0
13
18
2
49
22
1
15
15
39
0
44
43
6
79
49
7
1
13
7
9
7
11
35
2
20
1
49
10
2
15
49
18
1
49
23
0
49
24
0
7
25
64
83
26
15
20
0
49
27
0
49
24
0
7
28
64
35
1
83
26
15
39
0
44
43
6
79
49
7
1
13
7
9
7
11
35
2
20
1
49
10
2
15
49
29
1
49
23
0
49
24
0
7
30
64
83
26
15
20
0
49
27
0
49
24
0
7
28
64
35
1
83
26
11
I
c
I
2
I
0
I
0
I
-2
p
31
x
8
@dataset
x
28
supports_multiple_column_in?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
226
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
3
id1
x
3
[]=
x
3
id2
x
4
mock
x
4
test
x
2
[]
x
6
select
x
6
region
s
4
Asia
x
6
filter
x
7
columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
57
19
0
15
45
0
1
13
71
2
47
9
25
47
49
3
0
13
47
49
4
0
15
8
28
49
2
0
11
I
4
I
1
I
1
I
1
n
p
5
x
6
Object
n
x
3
new
x
8
allocate
x
10
initialize
p
3
I
0
I
229
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
h
x
4
proc
x
9
row_proc=
x
3
sql
x
6
should
s
81
SELECT * FROM test WHERE (((id1 = 1) AND (id2 = 2)) OR ((id1 = 3) AND (id2 = 4)))
x
2
==
x
4
sqls
s
49
SELECT id1, id2 FROM test WHERE (region = 'Asia')
x
7
exclude
s
84
SELECT * FROM test WHERE (((id1 != 1) OR (id2 != 2)) AND ((id1 != 3) OR (id2 != 4)))
p
17
I
0
I
226
I
a
I
227
I
53
I
228
I
7f
I
229
I
90
I
22a
I
b5
I
22b
I
c5
I
22c
I
ea
I
22d
I
fa
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
db
x
2
d1
s
45
should accept a subquery for an EXISTS clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
45
1
2
7
3
49
4
1
4
100
84
5
49
6
1
19
0
15
39
0
20
0
49
7
0
49
6
1
49
8
0
49
9
0
7
10
64
83
11
11
I
5
I
1
I
0
I
0
I
-2
p
12
x
8
@dataset
x
6
Sequel
n
x
5
price
x
4
expr
x
1
<
x
6
filter
x
6
exists
x
3
sql
x
6
should
s
74
SELECT * FROM test WHERE (EXISTS (SELECT * FROM test WHERE (price < 100)))
x
2
==
p
5
I
0
I
231
I
14
I
232
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
a
s
30
should accept proc expressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
113
39
0
45
1
2
7
3
7
4
49
5
2
49
6
1
19
0
15
39
7
56
8
50
9
0
49
10
0
49
11
0
7
12
64
83
13
15
39
7
56
14
50
9
0
49
10
0
49
11
0
7
15
64
83
13
15
39
7
56
16
50
9
0
49
10
0
49
11
0
7
17
64
83
13
15
39
7
56
18
50
9
0
49
10
0
49
11
0
7
19
64
83
13
15
39
7
56
20
50
9
0
49
10
0
49
11
0
7
21
64
83
13
11
I
6
I
1
I
0
I
0
I
-2
p
22
x
3
@d1
x
6
Sequel
n
x
3
avg
x
3
gdp
x
8
function
x
6
select
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
48
0
21
1
0
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
gdp
x
1
>
p
3
I
0
I
237
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
3
sql
x
6
should
s
84
SELECT * FROM test WHERE (gdp > (SELECT avg(gdp) FROM test WHERE (region = 'Asia')))
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
a
x
1
<
p
3
I
0
I
238
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
SELECT * FROM test WHERE (a < 1)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
18
5
48
0
79
49
1
1
5
48
2
80
49
3
1
49
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
5
x
1
a
x
2
>=
x
1
b
x
2
<=
x
1
&
p
3
I
0
I
239
I
12
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
SELECT * FROM test WHERE ((a >= 1) AND (b <= 2))
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
5
48
0
7
1
64
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
1
c
s
4
ABC%
x
4
like
p
3
I
0
I
23a
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
40
SELECT * FROM test WHERE (c LIKE 'ABC%')
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
7
1
64
7
2
64
49
3
2
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
1
c
s
4
ABC%
s
4
%XYZ
x
4
like
p
3
I
0
I
23b
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
61
SELECT * FROM test WHERE ((c LIKE 'ABC%') OR (c LIKE '%XYZ'))
p
13
I
0
I
236
I
12
I
237
I
25
I
238
I
38
I
239
I
4b
I
23a
I
5e
I
23b
I
71
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
d
s
32
should work for grouped datasets
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
79
49
6
2
15
49
7
1
49
8
0
49
9
0
7
10
64
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
x
1
a
x
5
group
x
4
Hash
x
16
new_from_literal
x
1
b
x
3
[]=
x
6
filter
x
3
sql
x
6
should
s
43
SELECT * FROM test WHERE (b = 1) GROUP BY a
x
2
==
p
3
I
0
I
23f
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
should accept true and false as arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
80
39
0
2
49
1
1
49
2
0
49
3
0
7
4
64
83
5
15
39
0
45
6
7
43
8
49
1
1
49
2
0
49
3
0
7
4
64
83
5
15
39
0
3
49
1
1
49
2
0
49
3
0
7
9
64
83
5
15
39
0
45
6
10
43
11
49
1
1
49
2
0
49
3
0
7
9
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
x
6
filter
x
3
sql
x
6
should
s
28
SELECT * FROM test WHERE 't'
x
2
==
x
6
Sequel
n
x
7
SQLTRUE
s
28
SELECT * FROM test WHERE 'f'
n
x
8
SQLFALSE
p
9
I
0
I
243
I
12
I
244
I
28
I
245
I
3a
I
246
I
50
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
74
should use boolean expression if dataset does not support where true/false
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
92
99
7
0
7
1
65
39
2
49
3
4
15
39
2
2
49
4
1
49
5
0
49
6
0
7
7
64
83
8
15
39
2
45
9
10
43
11
49
4
1
49
5
0
49
6
0
7
7
64
83
8
15
39
2
3
49
4
1
49
5
0
49
6
0
7
12
64
83
8
15
39
2
45
9
13
43
14
49
4
1
49
5
0
49
6
0
7
12
64
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
20
supports_where_true?
M
1
n
n
x
20
supports_where_true?
i
2
3
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
24a
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
@dataset
x
13
attach_method
x
6
filter
x
3
sql
x
6
should
s
32
SELECT * FROM test WHERE (1 = 1)
x
2
==
x
6
Sequel
n
x
7
SQLTRUE
s
32
SELECT * FROM test WHERE (1 = 0)
n
x
8
SQLFALSE
p
11
I
0
I
24a
I
c
I
24b
I
1e
I
24c
I
34
I
24d
I
46
I
24e
I
5c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
42
should allow the use of multiple arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
101
39
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
1
44
43
8
79
49
9
1
13
7
2
79
49
10
2
15
49
3
2
49
4
0
49
5
0
7
11
64
83
7
15
39
0
7
1
45
12
13
7
14
49
15
1
4
3
85
16
44
43
8
79
49
9
1
13
7
2
79
49
10
2
15
49
3
3
49
4
0
49
5
0
7
17
64
83
7
11
I
8
I
0
I
0
I
0
I
-2
p
18
x
8
@dataset
x
1
a
x
1
b
x
6
filter
x
3
sql
x
6
should
s
34
SELECT * FROM test WHERE (a AND b)
x
2
==
x
4
Hash
x
16
new_from_literal
x
3
[]=
s
40
SELECT * FROM test WHERE (a AND (b = 1))
x
6
Sequel
n
x
1
c
x
4
expr
x
1
>
s
52
SELECT * FROM test WHERE (a AND (c > 3) AND (b = 1))
p
7
I
0
I
252
I
15
I
253
I
37
I
254
I
65
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should allow the use of blocks and arguments simultaneously
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
45
1
2
7
3
49
4
1
4
3
84
5
56
6
50
7
1
49
8
0
49
9
0
7
10
64
83
11
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
x
6
Sequel
n
x
2
zz
x
4
expr
x
1
<
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
3
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
2
yy
x
1
>
p
3
I
0
I
258
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
3
sql
x
6
should
s
48
SELECT * FROM test WHERE ((zz < 3) AND (yy > 3))
x
2
==
p
3
I
0
I
258
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should yield a VirtualRow to the block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
49
1
19
0
15
39
0
56
1
50
2
0
15
20
0
5
45
3
4
43
5
43
6
47
49
7
1
49
8
1
15
39
0
56
9
50
2
0
49
10
0
49
8
0
7
11
64
83
12
11
I
5
I
1
I
0
I
0
I
-2
p
13
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
57
19
0
15
20
0
22
1
0
15
3
11
I
3
I
1
I
1
I
1
n
p
0
p
3
I
0
I
25d
I
c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
6
filter
x
6
Sequel
n
x
3
SQL
x
10
VirtualRow
x
12
be_a_kind_of
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
59
57
19
0
15
20
0
49
0
0
7
1
64
84
2
44
43
3
79
49
4
1
13
20
0
49
5
0
79
49
6
2
15
49
7
1
20
0
20
0
49
8
0
20
0
49
9
0
20
0
49
10
0
49
11
3
49
12
1
11
I
7
I
1
I
1
I
1
n
p
13
x
4
name
s
1
b
x
1
<
x
4
Hash
x
16
new_from_literal
x
9
table__id
x
3
[]=
x
1
&
x
4
blah
x
2
xx
x
6
x__y_z
x
9
is_active
x
1
|
p
3
I
0
I
25f
I
3b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
3
sql
s
90
SELECT * FROM test WHERE (((name < 'b') AND (table.id = 1)) OR is_active(blah, xx, x.y_z))
x
2
==
p
11
I
0
I
25c
I
4
I
25d
I
c
I
25e
I
1e
I
25f
I
2b
I
260
I
31
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
x
s
102
should instance_eval the block in the context of a VirtualRow if the block doesn't request an argument
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
49
1
19
0
15
39
0
56
1
50
2
0
15
20
0
5
45
3
4
43
5
43
6
47
49
7
1
49
8
1
15
39
0
56
9
50
2
0
49
10
0
49
8
0
7
11
64
83
12
11
I
5
I
1
I
0
I
0
I
-2
p
13
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
22
1
0
15
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
265
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
6
Sequel
n
x
3
SQL
x
10
VirtualRow
x
12
be_a_kind_of
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
45
5
48
0
7
1
64
84
2
44
43
3
79
49
4
1
13
5
48
5
79
49
6
2
15
49
7
1
5
5
48
8
5
48
9
5
48
10
47
49
11
3
49
12
1
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
4
name
s
1
b
x
1
<
x
4
Hash
x
16
new_from_literal
x
9
table__id
x
3
[]=
x
1
&
x
4
blah
x
2
xx
x
6
x__y_z
x
9
is_active
x
1
|
p
3
I
0
I
267
I
2d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
sql
s
90
SELECT * FROM test WHERE (((name < 'b') AND (table.id = 1)) OR is_active(blah, xx, x.y_z))
x
2
==
p
11
I
0
I
264
I
4
I
265
I
c
I
266
I
1e
I
267
I
2b
I
268
I
31
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
x
s
52
should raise an error if an invalid argument is used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
39
0
79
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
6
filter
p
3
I
0
I
26c
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
26c
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
72
should raise an error if a NumericExpression or StringExpression is used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
45
1
2
7
3
49
4
1
79
81
5
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
6
Sequel
n
x
1
x
x
4
expr
x
1
+
x
6
filter
p
3
I
0
I
270
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
45
1
2
7
3
49
4
1
49
5
0
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
6
Sequel
n
x
1
x
x
4
expr
x
10
sql_string
x
6
filter
p
3
I
0
I
271
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
5
I
0
I
270
I
15
I
271
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
71
I
0
I
15e
I
8
I
165
I
13
I
16f
I
1e
I
174
I
29
I
178
I
34
I
17f
I
3f
I
184
I
4a
I
189
I
55
I
190
I
60
I
194
I
6b
I
198
I
76
I
1a7
I
81
I
1c5
I
8c
I
1c9
I
97
I
1d1
I
a2
I
1d5
I
ad
I
1d9
I
b8
I
1e0
I
c3
I
1ec
I
ce
I
1fa
I
d9
I
202
I
e4
I
20c
I
ef
I
216
I
fa
I
225
I
105
I
230
I
110
I
235
I
11b
I
23e
I
126
I
242
I
131
I
249
I
13c
I
251
I
147
I
257
I
152
I
25b
I
15d
I
263
I
168
I
26b
I
173
I
26f
I
17e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
10
Dataset#or
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
15
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
59
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
15
39
8
44
43
9
79
49
10
1
13
7
11
79
49
12
2
15
49
13
1
38
14
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
5
where
x
3
@d1
p
5
I
0
I
277
I
24
I
278
I
3b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
32
should raise if no filter exists
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
11
I
6
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
2
or
p
3
I
0
I
27c
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
27c
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
56
should add an alternative expression to the where clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
44
43
1
79
49
2
1
13
7
3
80
49
4
2
15
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
3
@d1
x
4
Hash
x
16
new_from_literal
x
1
y
x
3
[]=
x
2
or
x
3
sql
x
6
should
s
45
SELECT * FROM test WHERE ((x = 1) OR (y = 2))
x
2
==
p
3
I
0
I
280
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should accept all forms of filters
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
50
39
0
7
1
64
80
49
2
2
49
3
0
49
4
0
7
5
64
83
6
15
39
0
45
7
8
7
9
49
10
1
4
3
85
11
49
2
1
49
3
0
49
4
0
7
12
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
3
@d1
s
5
y > ?
x
2
or
x
3
sql
x
6
should
s
45
SELECT * FROM test WHERE ((x = 1) OR (y > 2))
x
2
==
x
6
Sequel
n
x
2
yy
x
4
expr
x
1
>
s
46
SELECT * FROM test WHERE ((x = 1) OR (yy > 3))
p
5
I
0
I
284
I
15
I
285
I
32
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
should accept blocks passed to filter
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
3
@d1
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
3
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
2
yy
x
1
>
p
3
I
0
I
289
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
2
or
x
3
sql
x
6
should
s
46
SELECT * FROM test WHERE ((x = 1) OR (yy > 3))
x
2
==
p
3
I
0
I
289
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
should correctly add parens to give predictable results
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
44
43
1
79
49
2
1
13
7
3
80
49
4
2
15
49
5
1
44
43
1
79
49
2
1
13
7
6
4
3
49
4
2
15
49
7
1
49
8
0
49
9
0
7
10
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
3
80
49
4
2
15
49
7
1
44
43
1
79
49
2
1
13
7
6
4
3
49
4
2
15
49
5
1
49
8
0
49
9
0
7
12
64
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@d1
x
4
Hash
x
16
new_from_literal
x
1
y
x
3
[]=
x
6
filter
x
1
z
x
2
or
x
3
sql
x
6
should
s
59
SELECT * FROM test WHERE (((x = 1) AND (y = 2)) OR (z = 3))
x
2
==
s
59
SELECT * FROM test WHERE (((x = 1) OR (y = 2)) AND (z = 3))
p
5
I
0
I
28d
I
33
I
28e
I
66
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should allow the use of blocks and arguments simultaneously
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
45
1
2
7
3
49
4
1
4
3
84
5
56
6
50
7
1
49
8
0
49
9
0
7
10
64
83
11
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
3
@d1
x
6
Sequel
n
x
2
zz
x
4
expr
x
1
<
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
3
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
2
yy
x
1
>
p
3
I
0
I
292
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
2
or
x
3
sql
x
6
should
s
61
SELECT * FROM test WHERE ((x = 1) OR ((zz < 3) AND (yy > 3)))
x
2
==
p
3
I
0
I
292
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
15
I
0
I
276
I
8
I
27b
I
13
I
27f
I
1e
I
283
I
29
I
288
I
34
I
28c
I
3f
I
291
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
11
Dataset#and
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
59
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
15
39
8
44
43
9
79
49
10
1
13
7
11
79
49
12
2
15
49
13
1
38
14
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
5
where
x
3
@d1
p
5
I
0
I
298
I
24
I
299
I
3b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
32
should raise if no filter exists
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
97
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
9
1
15
39
10
44
43
11
79
49
12
1
13
7
13
79
49
14
2
15
49
15
1
7
16
49
17
1
44
43
11
79
49
12
1
13
7
18
80
49
14
2
15
49
19
1
49
20
0
49
6
0
7
21
64
83
22
11
I
6
I
0
I
0
I
0
I
-2
p
23
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
11
I
6
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
3
and
p
3
I
0
I
29d
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
7
6
49
7
1
44
43
1
79
49
2
1
13
7
8
80
49
4
2
15
49
9
1
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
5
where
x
1
t
x
5
group
x
1
b
x
3
and
p
3
I
0
I
29e
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
x
10
should_not
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
5
where
x
1
t
x
5
group
x
1
b
x
3
and
x
3
sql
s
57
SELECT * FROM test WHERE ((a = 1) AND (b = 2)) GROUP BY t
x
2
==
p
7
I
0
I
29d
I
15
I
29e
I
2a
I
29f
I
61
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
56
should add an alternative expression to the where clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
44
43
1
79
49
2
1
13
7
3
80
49
4
2
15
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
3
@d1
x
4
Hash
x
16
new_from_literal
x
1
y
x
3
[]=
x
3
and
x
3
sql
x
6
should
s
46
SELECT * FROM test WHERE ((x = 1) AND (y = 2))
x
2
==
p
3
I
0
I
2a3
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
40
should accept different types of filters
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
50
39
0
7
1
64
80
49
2
2
49
3
0
49
4
0
7
5
64
83
6
15
39
0
45
7
8
7
9
49
10
1
4
3
85
11
49
2
1
49
3
0
49
4
0
7
12
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
3
@d1
s
5
y > ?
x
3
and
x
3
sql
x
6
should
s
46
SELECT * FROM test WHERE ((x = 1) AND (y > 2))
x
2
==
x
6
Sequel
n
x
2
yy
x
4
expr
x
1
>
s
47
SELECT * FROM test WHERE ((x = 1) AND (yy > 3))
p
5
I
0
I
2a7
I
15
I
2a8
I
32
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
should accept blocks passed to filter
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
3
@d1
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
3
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
2
yy
x
1
>
p
3
I
0
I
2ac
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
and
x
3
sql
x
6
should
s
47
SELECT * FROM test WHERE ((x = 1) AND (yy > 3))
x
2
==
p
3
I
0
I
2ac
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
should correctly add parens to give predictable results
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
44
43
1
79
49
2
1
13
7
3
80
49
4
2
15
49
5
1
44
43
1
79
49
2
1
13
7
6
4
3
49
4
2
15
49
7
1
49
8
0
49
9
0
7
10
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
3
80
49
4
2
15
49
7
1
44
43
1
79
49
2
1
13
7
6
4
3
49
4
2
15
49
5
1
49
8
0
49
9
0
7
12
64
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@d1
x
4
Hash
x
16
new_from_literal
x
1
y
x
3
[]=
x
2
or
x
1
z
x
3
and
x
3
sql
x
6
should
s
59
SELECT * FROM test WHERE (((x = 1) OR (y = 2)) AND (z = 3))
x
2
==
s
59
SELECT * FROM test WHERE (((x = 1) AND (y = 2)) OR (z = 3))
p
5
I
0
I
2b0
I
33
I
2b1
I
66
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
13
I
0
I
297
I
8
I
29c
I
13
I
2a2
I
1e
I
2a6
I
29
I
2ab
I
34
I
2af
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
15
Dataset#exclude
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
96
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
19
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
2b7
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
66
should correctly negate the expression when one condition is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
49
7
0
49
8
0
7
9
64
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
6
region
s
4
Asia
x
3
[]=
x
7
exclude
x
10
select_sql
x
6
should
s
43
SELECT * FROM test WHERE (region != 'Asia')
x
2
==
p
3
I
0
I
2bb
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
64
should affect the having clause if having clause is already used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
39
0
7
1
49
2
1
56
3
50
4
0
56
5
50
6
0
49
7
0
49
8
0
7
9
64
83
10
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
4
name
x
15
group_and_count
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
80
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
5
count
x
1
>
p
3
I
0
I
2bf
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
having
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
5
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
5
count
x
1
>
p
3
I
0
I
2bf
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
exclude
x
3
sql
x
6
should
s
92
SELECT name, count(*) AS count FROM test GROUP BY name HAVING ((count > 2) AND (count <= 5))
x
2
==
p
3
I
0
I
2bf
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
80
should take multiple conditions as a hash and express the logic correctly in SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
86
39
0
44
43
1
80
49
2
1
13
7
3
7
4
64
49
5
2
15
13
7
6
7
7
64
49
5
2
15
49
8
1
49
9
0
5
45
10
11
7
12
13
70
9
57
15
44
43
10
7
13
78
49
14
2
6
12
7
15
13
70
9
75
15
44
43
10
7
16
78
49
14
2
6
15
49
17
2
47
49
18
1
49
19
1
11
I
8
I
0
I
0
I
0
I
-2
p
20
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
6
region
s
4
Asia
x
3
[]=
x
4
name
s
5
Japan
x
7
exclude
x
10
select_sql
x
6
Regexp
n
n
s
53
WHERE \(\(region != 'Asia'\) OR \(name != 'Japan'\)\)
x
3
new
n
s
53
WHERE \(\(name != 'Japan'\) OR \(region != 'Asia'\)\)
x
5
union
x
5
match
x
6
should
p
15
I
0
I
2c3
I
23
I
2c5
I
24
I
2c4
I
39
I
2c5
I
4b
I
2c4
I
4e
I
2c5
I
52
I
2c3
I
56
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
should parenthesize a single string condition correctly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
7
1
64
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
s
34
region = 'Asia' AND name = 'Japan'
x
7
exclude
x
10
select_sql
x
6
should
s
65
SELECT * FROM test WHERE NOT (region = 'Asia' AND name = 'Japan')
x
2
==
p
3
I
0
I
2c9
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
should parenthesize an array condition correctly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
39
0
7
1
64
7
2
64
7
3
64
49
4
3
49
5
0
49
6
0
7
7
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
s
23
region = ? AND name = ?
s
4
Asia
s
5
Japan
x
7
exclude
x
10
select_sql
x
6
should
s
65
SELECT * FROM test WHERE NOT (region = 'Asia' AND name = 'Japan')
x
2
==
p
3
I
0
I
2cd
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
51
should correctly parenthesize when it is used twice
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
44
43
1
79
49
2
1
13
7
7
7
8
64
49
5
2
15
49
6
1
49
9
0
49
10
0
7
11
64
83
12
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
6
region
s
4
Asia
x
3
[]=
x
7
exclude
x
4
name
s
5
Japan
x
10
select_sql
x
6
should
s
67
SELECT * FROM test WHERE ((region != 'Asia') AND (name != 'Japan'))
x
2
==
p
3
I
0
I
2d1
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should support proc expressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
6
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
2
id
x
1
<
p
3
I
0
I
2d5
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
exclude
x
3
sql
x
6
should
s
34
SELECT * FROM test WHERE (id >= 6)
x
2
==
p
3
I
0
I
2d5
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should allow the use of blocks and arguments simultaneously
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
73
39
0
44
43
1
79
49
2
1
13
7
3
44
43
4
4
7
4
11
49
5
2
49
6
2
15
56
7
50
8
1
49
9
0
49
10
0
7
11
64
83
12
15
39
0
7
3
79
35
2
7
13
4
3
35
2
56
14
50
8
2
49
9
0
49
10
0
7
15
64
83
12
11
I
8
I
0
I
0
I
0
I
-2
p
16
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
5
Range
x
3
new
x
3
[]=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
6
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
2
id
x
1
<
p
3
I
0
I
2d9
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
exclude
x
3
sql
x
6
should
s
61
SELECT * FROM test WHERE ((id < 7) OR (id > 11) OR (id >= 6))
x
2
==
x
1
x
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
6
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
2
id
x
1
<
p
3
I
0
I
2da
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
61
SELECT * FROM test WHERE ((id != 1) OR (x != 3) OR (id >= 6))
p
5
I
0
I
2d9
I
2b
I
2da
I
49
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
19
I
0
I
2b6
I
8
I
2ba
I
13
I
2be
I
1e
I
2c2
I
29
I
2c8
I
34
I
2cc
I
3f
I
2d0
I
4a
I
2d4
I
55
I
2d8
I
60
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
Dataset#exclude_where
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
2e0
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
69
should correctly negate the expression and add it to the where clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
88
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
49
7
0
49
8
0
7
9
64
83
10
15
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
44
43
1
79
49
2
1
13
7
3
7
11
64
49
5
2
15
49
6
1
49
7
0
49
8
0
7
12
64
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
6
region
s
4
Asia
x
3
[]=
x
13
exclude_where
x
3
sql
x
6
should
s
43
SELECT * FROM test WHERE (region != 'Asia')
x
2
==
s
2
NA
s
66
SELECT * FROM test WHERE ((region != 'Asia') AND (region != 'NA'))
p
5
I
0
I
2e4
I
22
I
2e5
I
58
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
68
should affect the where clause even if having clause is already used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
49
2
1
56
3
50
4
0
44
43
5
79
49
6
1
13
7
7
7
8
64
49
9
2
15
49
10
1
49
11
0
49
12
0
7
13
64
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
8
@dataset
x
4
name
x
15
group_and_count
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
80
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
5
count
x
1
>
p
3
I
0
I
2e9
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
having
x
4
Hash
x
16
new_from_literal
x
6
region
s
4
Asia
x
3
[]=
x
13
exclude_where
x
3
sql
x
6
should
s
98
SELECT name, count(*) AS count FROM test WHERE (region != 'Asia') GROUP BY name HAVING (count > 2)
x
2
==
p
5
I
0
I
2e9
I
26
I
2ea
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
2df
I
8
I
2e3
I
13
I
2e8
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
22
Dataset#exclude_having
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
70
should correctly negate the expression and add it to the having clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
55
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
56
8
50
9
0
56
10
50
9
0
49
11
0
49
12
0
7
13
64
83
14
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
80
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
5
count
x
1
>
p
3
I
0
I
2f0
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
14
exclude_having
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
78
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
5
count
x
1
<
p
3
I
0
I
2f0
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
sql
x
6
should
s
57
SELECT * FROM test HAVING ((count <= 2) AND (count >= 0))
x
2
==
p
3
I
0
I
2f0
I
37
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
3
I
0
I
2ef
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
14
Dataset#invert
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
2
@d
p
3
I
0
I
2f6
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
49
should raise error if the dataset is not filtered
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
2
@d
x
6
invert
p
3
I
0
I
2fa
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
2fa
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
51
should invert current filter if dataset is filtered
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
49
2
1
49
3
0
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
2
@d
x
1
x
x
6
filter
x
6
invert
x
3
sql
x
6
should
s
30
SELECT * FROM test WHERE NOT x
x
2
==
p
3
I
0
I
2fe
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should invert both having and where if both are preset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
7
1
49
2
1
7
1
49
3
1
7
1
49
4
1
49
5
0
49
6
0
49
7
0
7
8
64
83
9
11
I
3
I
0
I
0
I
0
I
-2
p
10
x
2
@d
x
1
x
x
6
filter
x
5
group
x
6
having
x
6
invert
x
3
sql
x
6
should
s
54
SELECT * FROM test WHERE NOT x GROUP BY x HAVING NOT x
x
2
==
p
3
I
0
I
302
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
2f5
I
8
I
2f9
I
13
I
2fd
I
1e
I
301
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
14
Dataset#having
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
71
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
15
39
8
7
9
49
10
1
7
9
45
0
11
7
12
7
13
49
14
2
45
0
15
7
16
7
17
49
14
2
49
18
3
38
19
11
I
7
I
0
I
0
I
0
I
-2
p
20
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
x
6
region
x
5
group
n
x
3
sum
x
10
population
x
8
function
n
x
3
avg
x
3
gdp
x
6
select
x
8
@grouped
p
5
I
0
I
308
I
24
I
309
I
47
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
44
should just clone if given an empty argument
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
69
39
0
44
43
1
78
49
2
1
49
3
1
49
4
0
49
5
0
39
0
49
4
0
83
6
15
39
0
35
0
49
3
1
49
4
0
49
5
0
39
0
49
4
0
83
6
15
39
0
7
7
64
49
3
1
49
4
0
49
5
0
39
0
49
4
0
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
6
having
x
3
sql
x
6
should
x
2
==
s
0

p
7
I
0
I
30d
I
1a
I
30e
I
2f
I
30f
I
45
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
31
should affect select statements
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
7
1
64
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@grouped
s
20
sum(population) > 10
x
6
having
x
10
select_sql
x
6
should
s
96
SELECT region, sum(population), avg(gdp) FROM test GROUP BY region HAVING (sum(population) > 10)
x
2
==
p
3
I
0
I
313
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should support proc expressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@grouped
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
45
0
1
7
2
7
3
49
4
2
4
10
85
5
11
I
4
I
0
I
0
I
0
I
-2
p
6
x
6
Sequel
n
x
3
sum
x
10
population
x
8
function
x
1
>
p
3
I
0
I
317
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
having
x
3
sql
x
6
should
s
96
SELECT region, sum(population), avg(gdp) FROM test GROUP BY region HAVING (sum(population) > 10)
x
2
==
p
3
I
0
I
317
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
should work with and on the having clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
45
1
2
7
3
49
4
1
79
85
5
49
6
1
45
1
7
7
8
49
4
1
80
84
9
49
10
1
49
11
0
49
12
0
7
13
64
83
14
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
8
@grouped
x
6
Sequel
n
x
1
a
x
4
expr
x
1
>
x
6
having
n
x
1
b
x
1
<
x
3
and
x
3
sql
x
6
should
s
95
SELECT region, sum(population), avg(gdp) FROM test GROUP BY region HAVING ((a > 1) AND (b < 2))
x
2
==
p
3
I
0
I
31b
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
11
I
0
I
307
I
8
I
30c
I
13
I
312
I
1e
I
316
I
29
I
31a
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
17
a grouped dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
15
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
7
8
49
9
1
38
10
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
7
type_id
x
5
group
x
8
@dataset
p
3
I
0
I
321
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
56
should raise when trying to generate an update statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
56
0
47
50
1
0
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
44
43
1
79
49
2
1
13
7
3
78
49
4
2
15
49
5
1
11
I
6
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
10
update_sql
p
3
I
0
I
325
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
6
should
p
3
I
0
I
325
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
55
should raise when trying to generate a delete statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
56
0
47
50
1
0
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
10
delete_sql
p
3
I
0
I
329
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
6
should
p
3
I
0
I
329
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
57
should raise when trying to generate a truncate statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
56
0
47
50
1
0
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
12
truncate_sql
p
3
I
0
I
32d
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
6
should
p
3
I
0
I
32d
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
should raise when trying to generate an insert statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
56
0
47
50
1
0
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
10
insert_sql
p
3
I
0
I
331
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
6
should
p
3
I
0
I
331
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
57
should specify the grouping in generated select statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
39
0
49
1
0
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
8
@dataset
x
10
select_sql
x
6
should
s
35
SELECT * FROM test GROUP BY type_id
x
2
==
p
5
I
0
I
335
I
8
I
336
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
62
should format the right statement for counting (as a subquery)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
46
45
0
1
49
2
0
19
0
15
20
0
7
3
49
4
1
7
5
49
6
1
7
5
49
7
1
49
8
0
15
20
0
49
9
0
49
10
0
7
11
64
35
1
83
12
11
I
4
I
1
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
4
mock
x
4
test
x
2
[]
x
4
name
x
6
select
x
5
group
x
5
count
x
4
sqls
x
6
should
s
81
SELECT COUNT(*) AS count FROM (SELECT name FROM test GROUP BY name) AS t1 LIMIT 1
x
2
==
p
7
I
0
I
33a
I
9
I
33b
I
1e
I
33c
I
2e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
db
p
15
I
0
I
320
I
8
I
324
I
13
I
328
I
1e
I
32c
I
29
I
330
I
34
I
334
I
3f
I
339
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
16
Dataset#group_by
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
118
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
23
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
45
0
1
49
2
0
7
3
49
4
1
7
5
49
6
1
38
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
6
Sequel
n
x
4
mock
x
4
test
x
2
[]
x
7
type_id
x
8
group_by
x
8
@dataset
p
3
I
0
I
342
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
56
should raise when trying to generate an update statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
56
0
47
50
1
0
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
44
43
1
79
49
2
1
13
7
3
78
49
4
2
15
49
5
1
11
I
6
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
10
update_sql
p
3
I
0
I
346
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
6
should
p
3
I
0
I
346
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
55
should raise when trying to generate a delete statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
56
0
47
50
1
0
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
10
delete_sql
p
3
I
0
I
34a
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
6
should
p
3
I
0
I
34a
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
57
should specify the grouping in generated select statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
67
39
0
49
1
0
49
2
0
7
3
64
83
4
15
39
0
7
5
7
6
49
7
2
49
1
0
49
2
0
7
8
64
83
4
15
39
0
44
43
9
79
49
10
1
13
7
11
1
49
12
2
15
49
7
1
49
1
0
49
2
0
7
13
64
83
4
11
I
6
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
10
select_sql
x
6
should
s
35
SELECT * FROM test GROUP BY type_id
x
2
==
x
1
a
x
1
b
x
8
group_by
s
32
SELECT * FROM test GROUP BY a, b
x
4
Hash
x
16
new_from_literal
x
7
type_id
x
3
[]=
s
45
SELECT * FROM test GROUP BY (type_id IS NULL)
p
7
I
0
I
34e
I
e
I
34f
I
23
I
350
I
43
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
46
should ungroup when passed nil or no arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
15
39
0
1
49
1
1
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
8
group_by
x
10
select_sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
5
I
0
I
354
I
11
I
355
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should undo previous grouping
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
39
0
7
1
49
2
1
7
3
49
2
1
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
1
7
3
49
2
2
49
2
0
49
4
0
49
5
0
7
8
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
1
a
x
8
group_by
x
1
b
x
10
select_sql
x
6
should
s
29
SELECT * FROM test GROUP BY b
x
2
==
s
18
SELECT * FROM test
p
5
I
0
I
359
I
18
I
35a
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
should be aliased as #group
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
44
43
1
79
49
2
1
13
7
3
1
49
4
2
15
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
7
type_id
x
3
[]=
x
5
group
x
10
select_sql
x
6
should
s
45
SELECT * FROM test GROUP BY (type_id IS NULL)
x
2
==
p
3
I
0
I
35e
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should take a virtual row block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
78
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
15
39
0
56
7
50
8
0
49
3
0
49
4
0
7
5
64
83
6
15
39
0
56
9
50
2
0
49
3
0
49
4
0
7
10
64
83
6
15
39
0
7
11
56
12
50
2
1
49
3
0
49
4
0
7
13
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
7
type_id
x
1
>
p
3
I
0
I
362
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
group
x
3
sql
x
6
should
s
41
SELECT * FROM test GROUP BY (type_id > 1)
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
7
type_id
x
1
>
p
3
I
0
I
363
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
group_by
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
5
48
0
79
85
1
5
48
0
80
84
2
35
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
x
7
type_id
x
1
>
x
1
<
p
3
I
0
I
364
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
SELECT * FROM test GROUP BY (type_id > 1), (type_id < 2)
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
7
type_id
x
1
>
p
3
I
0
I
365
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
46
SELECT * FROM test GROUP BY foo, (type_id > 1)
p
9
I
0
I
362
I
13
I
363
I
26
I
364
I
39
I
365
I
4e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
65
should support a #group_rollup method if the database supports it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
112
39
0
7
1
56
2
50
3
1
15
39
0
7
4
49
5
1
49
6
0
49
7
0
49
8
0
7
9
64
83
10
15
39
0
7
4
7
11
49
5
2
49
6
0
49
7
0
49
8
0
7
12
64
83
10
15
39
0
7
13
56
14
50
3
1
15
39
0
7
4
49
5
1
49
6
0
49
7
0
49
8
0
7
15
64
83
10
15
39
0
7
4
7
11
49
5
2
49
6
0
49
7
0
49
8
0
7
16
64
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
17
x
8
@dataset
x
22
supports_group_rollup?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
369
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
7
type_id
x
5
group
x
12
group_rollup
x
10
select_sql
x
6
should
s
43
SELECT * FROM test GROUP BY ROLLUP(type_id)
x
2
==
x
1
b
s
46
SELECT * FROM test GROUP BY ROLLUP(type_id, b)
x
17
uses_with_rollup?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
36c
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
SELECT * FROM test GROUP BY type_id WITH ROLLUP
s
50
SELECT * FROM test GROUP BY type_id, b WITH ROLLUP
p
13
I
0
I
369
I
a
I
36a
I
20
I
36b
I
38
I
36c
I
42
I
36d
I
58
I
36e
I
70
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
63
should support a #group_cube method if the database supports it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
112
39
0
7
1
56
2
50
3
1
15
39
0
7
4
49
5
1
49
6
0
49
7
0
49
8
0
7
9
64
83
10
15
39
0
7
4
7
11
49
5
2
49
6
0
49
7
0
49
8
0
7
12
64
83
10
15
39
0
7
13
56
14
50
3
1
15
39
0
7
4
49
5
1
49
6
0
49
7
0
49
8
0
7
15
64
83
10
15
39
0
7
4
7
11
49
5
2
49
6
0
49
7
0
49
8
0
7
16
64
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
17
x
8
@dataset
x
20
supports_group_cube?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
372
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
7
type_id
x
5
group
x
10
group_cube
x
10
select_sql
x
6
should
s
41
SELECT * FROM test GROUP BY CUBE(type_id)
x
2
==
x
1
b
s
44
SELECT * FROM test GROUP BY CUBE(type_id, b)
x
17
uses_with_rollup?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
375
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
45
SELECT * FROM test GROUP BY type_id WITH CUBE
s
48
SELECT * FROM test GROUP BY type_id, b WITH CUBE
p
13
I
0
I
372
I
a
I
373
I
20
I
374
I
38
I
375
I
42
I
376
I
58
I
377
I
70
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
84
should have #group_cube and #group_rollup methods raise an Error if not supported it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
39
0
7
1
49
2
1
49
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
8
@dataset
x
7
type_id
x
5
group
x
12
group_rollup
p
3
I
0
I
37b
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
39
0
7
1
49
2
1
49
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
8
@dataset
x
7
type_id
x
5
group
x
10
group_cube
p
3
I
0
I
37c
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
5
I
0
I
37b
I
15
I
37c
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
23
I
0
I
341
I
8
I
345
I
13
I
349
I
1e
I
34d
I
29
I
353
I
34
I
358
I
3f
I
35d
I
4a
I
361
I
55
I
368
I
60
I
371
I
6b
I
37a
I
76
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
10
Dataset#as
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
22
should set up an alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
69
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
19
0
15
20
0
20
0
79
49
8
1
7
9
49
10
1
7
11
49
12
1
49
10
1
49
13
0
49
14
0
7
15
64
83
16
11
I
5
I
1
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
5
limit
x
4
name
x
6
select
x
1
n
x
2
as
x
3
sql
x
6
should
s
53
SELECT (SELECT name FROM test LIMIT 1) AS n FROM test
x
2
==
p
5
I
0
I
382
I
24
I
383
I
45
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
7
dataset
x
7
specify
p
3
I
0
I
381
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
15
Dataset#literal
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
0
38
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
7
dataset
x
3
@ds
p
3
I
0
I
389
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
58
should convert qualified symbol notation into dot notation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@ds
x
8
abc__def
x
7
literal
x
6
should
s
7
abc.def
x
2
==
p
3
I
0
I
38d
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
54
should convert AS symbol notation into SQL AS notation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
15
39
0
7
6
49
2
1
49
3
0
7
7
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
7
xyz___x
x
7
literal
x
6
should
s
8
xyz AS x
x
2
==
x
12
abc__def___x
s
12
abc.def AS x
p
5
I
0
I
391
I
10
I
392
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should support names with digits
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
80
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
15
39
0
7
6
49
2
1
49
3
0
7
7
64
83
5
15
39
0
7
8
49
2
1
49
3
0
7
9
64
83
5
15
39
0
7
10
49
2
1
49
3
0
7
11
64
83
5
15
39
0
7
12
49
2
1
49
3
0
7
13
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
4
abc2
x
7
literal
x
6
should
s
4
abc2
x
2
==
x
7
xx__yy3
s
6
xx.yy3
x
15
ab34__temp3_4ax
s
14
ab34.temp3_4ax
x
7
x1___y2
s
8
x1 AS y2
x
17
abc2__def3___ggg4
s
17
abc2.def3 AS ggg4
p
11
I
0
I
396
I
10
I
397
I
20
I
398
I
30
I
399
I
40
I
39a
I
50
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
40
should support upper case and lower case
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
15
39
0
7
6
49
2
1
49
3
0
7
7
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
3
ABC
x
7
literal
x
6
should
s
3
ABC
x
2
==
x
14
Zvashtoy__aBcD
s
13
Zvashtoy.aBcD
p
5
I
0
I
39e
I
10
I
39f
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
should support spaces inside column names
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
75
39
0
2
13
18
2
49
1
1
15
15
39
0
7
2
49
3
1
49
4
0
7
5
64
83
6
15
39
0
7
7
49
3
1
49
4
0
7
8
64
83
6
15
39
0
7
9
49
3
1
49
4
0
7
10
64
83
6
15
39
0
7
11
49
3
1
49
4
0
7
12
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
18
quote_identifiers=
x
4
AB C
x
7
literal
x
6
should
s
6
"AB C"
x
2
==
x
16
Zvas htoy__aB cD
s
19
"Zvas htoy"."aB cD"
x
13
aB cD___XX XX
s
18
"aB cD" AS "XX XX"
x
24
Zva shtoy__aB cD___XX XX
s
30
"Zva shtoy"."aB cD" AS "XX XX"
p
11
I
0
I
3a3
I
b
I
3a4
I
1b
I
3a5
I
2b
I
3a6
I
3b
I
3a7
I
4b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
13
I
0
I
388
I
8
I
38c
I
13
I
390
I
1e
I
395
I
29
I
39d
I
34
I
3a2
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
250
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
15
5
7
29
64
56
30
47
50
4
1
15
5
7
31
64
56
32
47
50
4
1
15
5
7
33
64
56
34
47
50
4
1
15
5
7
35
64
56
36
47
50
4
1
15
5
7
37
64
56
38
47
50
4
1
15
5
7
39
64
56
40
47
50
4
1
15
5
7
41
64
56
42
47
50
4
1
15
5
7
43
64
56
44
47
50
4
1
15
5
7
45
64
56
46
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
47
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
7
6
49
7
1
38
8
11
I
3
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
3ad
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
30
should escape strings properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
119
39
0
7
1
64
49
2
1
49
3
0
7
4
64
83
5
15
39
0
7
6
64
49
2
1
49
3
0
7
7
64
83
5
15
39
0
7
8
64
49
2
1
49
3
0
7
9
64
83
5
15
39
0
7
10
64
49
2
1
49
3
0
7
11
64
83
5
15
39
0
7
12
64
49
2
1
49
3
0
7
13
64
83
5
15
39
0
7
14
64
49
2
1
49
3
0
7
15
64
83
5
15
39
0
7
16
64
49
2
1
49
3
0
7
17
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
18
x
8
@dataset
s
3
abc
x
7
literal
x
6
should
s
5
'abc'
x
2
==
s
6
a"x"bc
s
8
'a"x"bc'
s
4
a'bc
s
7
'a''bc'
s
5
a''bc
s
9
'a''''bc'
s
4
a\bc
s
6
'a\bc'
s
5
a\\bc
s
7
'a\\bc'
s
5
a\'bc
s
8
'a\''bc'
p
15
I
0
I
3b1
I
11
I
3b2
I
22
I
3b3
I
33
I
3b4
I
44
I
3b5
I
55
I
3b6
I
66
I
3b7
I
77
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
41
should escape blobs as strings by default
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
39
0
45
1
2
7
3
64
49
4
1
49
5
1
49
6
0
7
7
64
83
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
6
Sequel
n
s
3
abc
x
4
blob
x
7
literal
x
6
should
s
5
'abc'
x
2
==
p
3
I
0
I
3bb
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should literalize numbers properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
79
49
1
1
49
2
0
7
3
64
83
4
15
39
0
7
5
49
1
1
49
2
0
7
6
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
7
literal
x
6
should
s
1
1
x
2
==
d
 +0.750000000000000000000000000000000000000000000000000000     1
s
3
1.5
p
5
I
0
I
3bf
I
f
I
3c0
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should literalize nil as NULL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
39
0
1
49
1
1
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
8
@dataset
x
7
literal
x
6
should
s
4
NULL
x
2
==
p
3
I
0
I
3c4
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should literalize an array properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
39
0
35
0
49
1
1
49
2
0
7
3
64
83
4
15
39
0
79
7
5
64
4
3
35
3
49
1
1
49
2
0
7
6
64
83
4
15
39
0
79
7
7
64
4
3
35
3
49
1
1
49
2
0
7
8
64
83
4
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
7
literal
x
6
should
s
6
(NULL)
x
2
==
s
3
abc
s
13
(1, 'abc', 3)
s
6
a'b''c
s
19
(1, 'a''b''''c', 3)
p
7
I
0
I
3c8
I
10
I
3c9
I
26
I
3ca
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
46
should literalize symbols as column references
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
15
39
0
7
6
49
2
1
49
3
0
7
7
64
83
5
15
39
0
7
8
49
2
1
49
3
0
7
9
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
name
x
7
literal
x
6
should
s
4
name
x
2
==
x
11
items__name
s
10
items.name
x
13
items__na#m$e
s
12
items.na#m$e
p
7
I
0
I
3ce
I
10
I
3cf
I
20
I
3d0
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
115
should call sql_literal_append with dataset and sql on type if not natively supported and the object responds to it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
45
0
1
56
2
50
3
0
38
4
15
99
7
5
7
6
65
39
7
49
8
4
15
39
7
39
4
13
71
3
47
9
45
47
49
9
0
13
47
49
10
0
15
8
48
49
3
0
49
11
1
49
12
0
7
13
64
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
5
Class
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
6
x
18
sql_literal_append
M
1
n
n
x
18
sql_literal_append
i
18
20
1
7
0
20
0
49
1
0
47
101
2
63
2
49
3
1
11
I
5
I
2
I
2
I
2
n
p
4
s
7
called 
x
4
blah
x
4
to_s
x
2
<<
p
5
I
-1
I
3d5
I
0
I
3d6
I
12
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
ds
x
3
sql
x
17
method_visibility
x
15
add_defn_method
x
11
sql_literal
M
1
n
n
x
11
sql_literal
i
13
7
0
20
0
49
1
0
47
101
2
63
2
11
I
3
I
1
I
1
I
1
n
p
3
s
11
not called 
x
4
blah
x
4
to_s
p
5
I
-1
I
3d8
I
0
I
3d9
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
p
5
I
0
I
3d5
I
e
I
3d8
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
2
@a
x
4
blah
M
1
n
n
x
4
blah
i
4
7
0
64
11
I
1
I
0
I
0
I
0
n
p
1
s
2
ds
p
5
I
-1
I
3dc
I
0
I
3dd
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
@dataset
x
13
attach_method
x
8
allocate
x
10
initialize
x
7
literal
x
6
should
s
9
called ds
x
2
==
p
7
I
0
I
3d4
I
b
I
3dc
I
17
I
3df
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
100
should call sql_literal with dataset on type if not natively supported and the object responds to it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
45
0
1
56
2
50
3
0
38
4
15
99
7
5
7
6
65
39
7
49
8
4
15
39
7
39
4
13
71
3
47
9
45
47
49
9
0
13
47
49
10
0
15
8
48
49
3
0
49
11
1
49
12
0
7
13
64
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
5
Class
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
11
sql_literal
M
1
n
n
x
11
sql_literal
i
13
7
0
20
0
49
1
0
47
101
2
63
2
11
I
3
I
1
I
1
I
1
n
p
3
s
7
called 
x
4
blah
x
4
to_s
p
5
I
-1
I
3e4
I
0
I
3e5
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
3e4
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
2
@a
x
4
blah
M
1
n
n
x
4
blah
i
4
7
0
64
11
I
1
I
0
I
0
I
0
n
p
1
s
2
ds
p
5
I
-1
I
3e8
I
0
I
3e9
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
@dataset
x
13
attach_method
x
8
allocate
x
10
initialize
x
7
literal
x
6
should
s
9
called ds
x
2
==
p
7
I
0
I
3e3
I
b
I
3e8
I
17
I
3eb
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
70
should raise an error for unsupported types with no sql_literal method
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
56
0
47
50
1
0
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
45
1
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
6
Object
n
x
3
new
x
8
allocate
x
10
initialize
x
7
literal
p
3
I
0
I
3ef
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
6
should
p
3
I
0
I
3ef
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
40
should literalize datasets as subqueries
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
39
0
7
1
49
2
1
19
0
15
20
0
20
0
49
3
1
49
4
0
7
5
20
0
49
6
0
47
101
7
7
8
63
3
83
9
11
I
6
I
1
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
test
x
4
from
x
7
literal
x
6
should
s
1
(
x
3
sql
x
4
to_s
s
1
)
x
2
==
p
5
I
0
I
3f3
I
a
I
3f4
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
d
s
42
should literalize Sequel::SQLTime properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
62
45
0
1
43
2
49
3
0
19
0
15
20
0
7
4
64
49
5
1
19
1
15
39
6
20
0
49
7
1
49
8
0
20
1
47
101
9
7
10
5
7
11
64
20
0
49
12
0
47
49
13
2
47
101
9
7
14
63
4
83
15
11
I
9
I
2
I
0
I
0
I
-2
p
16
x
6
Sequel
n
x
7
SQLTime
x
3
now
s
9
'%H:%M:%S
x
8
strftime
x
8
@dataset
x
7
literal
x
6
should
x
4
to_s
s
1
.
s
4
%06i
x
4
usec
x
7
sprintf
s
1
'
x
2
==
p
7
I
0
I
3f8
I
b
I
3f9
I
16
I
3fa
I
3e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
1
s
s
31
should literalize Time properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
45
0
1
49
2
0
19
0
15
20
0
7
3
64
49
4
1
19
1
15
39
5
20
0
49
6
1
49
7
0
20
1
47
101
8
7
9
5
7
10
64
20
0
49
11
0
47
49
12
2
47
101
8
7
13
63
4
83
14
11
I
9
I
2
I
0
I
0
I
-2
p
15
x
4
Time
n
x
3
now
s
18
'%Y-%m-%d %H:%M:%S
x
8
strftime
x
8
@dataset
x
7
literal
x
6
should
x
4
to_s
s
1
.
s
4
%06i
x
4
usec
x
7
sprintf
s
1
'
x
2
==
p
7
I
0
I
3fe
I
9
I
3ff
I
14
I
400
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
1
s
s
35
should literalize DateTime properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
79
45
0
1
49
2
0
19
0
15
20
0
7
3
64
49
4
1
19
1
15
39
5
20
0
49
6
1
49
7
0
20
1
47
101
8
7
9
5
7
10
64
20
0
49
11
0
45
12
13
7
14
64
84
15
9
60
7
16
8
62
7
17
49
18
1
47
49
19
2
47
101
8
7
20
63
4
83
21
11
I
b
I
2
I
0
I
0
I
-2
p
22
x
8
DateTime
n
x
3
now
s
18
'%Y-%m-%d %H:%M:%S
x
8
strftime
x
8
@dataset
x
7
literal
x
6
should
x
4
to_s
s
1
.
s
4
%06i
x
12
sec_fraction
x
12
RUBY_VERSION
n
s
5
1.9.0
x
1
<
I
141dd76000
I
f4240
x
1
*
x
7
sprintf
s
1
'
x
2
==
p
9
I
0
I
404
I
9
I
405
I
14
I
406
I
3e
I
406
I
4f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
1
s
s
31
should literalize Date properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
45
0
1
49
2
0
19
0
15
20
0
7
3
64
49
4
1
19
1
15
39
5
20
0
49
6
1
49
7
0
20
1
83
8
11
I
5
I
2
I
0
I
0
I
-2
p
9
x
4
Date
n
x
5
today
s
10
'%Y-%m-%d'
x
8
strftime
x
8
@dataset
x
7
literal
x
6
should
x
2
==
p
7
I
0
I
40a
I
9
I
40b
I
14
I
40c
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
d
x
1
s
s
59
should literalize Date properly, even if to_s is overridden
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
45
0
1
49
2
0
19
0
15
99
7
3
7
4
65
20
0
49
5
4
15
20
0
7
6
64
49
7
1
19
1
15
39
8
20
0
49
9
1
49
10
0
20
1
83
11
11
I
8
I
2
I
0
I
0
I
-2
p
12
x
4
Date
n
x
5
today
x
4
to_s
M
1
n
n
x
4
to_s
i
4
7
0
64
11
I
1
I
0
I
0
I
0
n
p
1
s
4
adsf
p
3
I
-1
I
411
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
13
attach_method
s
10
'%Y-%m-%d'
x
8
strftime
x
8
@dataset
x
7
literal
x
6
should
x
2
==
p
9
I
0
I
410
I
9
I
411
I
15
I
412
I
20
I
413
I
2f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
d
x
1
s
s
82
should literalize Time, DateTime, Date properly if SQL standard format is required
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
184
39
0
7
1
56
2
50
3
1
15
45
4
5
49
6
0
19
0
15
20
0
7
7
64
49
8
1
19
1
15
39
0
20
0
49
9
1
49
10
0
20
1
47
101
11
7
12
5
7
13
64
20
0
49
14
0
47
49
15
2
47
101
11
7
16
63
4
83
17
15
45
18
19
49
6
0
19
0
15
20
0
7
7
64
49
8
1
19
1
15
39
0
20
0
49
9
1
49
10
0
20
1
47
101
11
7
12
5
7
13
64
20
0
49
20
0
45
21
22
7
23
64
84
24
9
130
7
25
8
132
7
26
49
27
1
47
49
15
2
47
101
11
7
16
63
4
83
17
15
45
28
29
49
30
0
19
2
15
20
2
7
31
64
49
8
1
19
1
15
39
0
20
2
49
9
1
49
10
0
20
1
83
17
11
I
c
I
3
I
0
I
0
I
-2
p
32
x
8
@dataset
x
32
requires_sql_standard_datetimes?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
417
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
4
Time
n
x
3
now
s
28
TIMESTAMP '%Y-%m-%d %H:%M:%S
x
8
strftime
x
7
literal
x
6
should
x
4
to_s
s
1
.
s
4
%06i
x
4
usec
x
7
sprintf
s
1
'
x
2
==
x
8
DateTime
n
x
12
sec_fraction
x
12
RUBY_VERSION
n
s
5
1.9.0
x
1
<
I
141dd76000
I
f4240
x
1
*
x
4
Date
n
x
5
today
s
15
DATE '%Y-%m-%d'
p
23
I
0
I
417
I
a
I
419
I
13
I
41a
I
1e
I
41b
I
46
I
41d
I
4f
I
41e
I
5a
I
41f
I
84
I
41f
I
95
I
421
I
9e
I
422
I
a9
I
423
I
b8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
t
x
1
s
x
1
d
s
92
should literalize Time and DateTime properly if the database support timezones in timestamps
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
156
39
0
7
1
56
2
50
3
1
15
45
4
5
49
6
0
49
7
0
19
0
15
20
0
7
8
64
49
9
1
19
1
15
39
0
20
0
49
10
1
49
11
0
20
1
47
101
12
7
13
5
7
14
64
20
0
49
15
0
47
49
16
2
47
101
12
7
17
63
4
83
18
15
45
19
20
49
6
0
78
49
21
1
19
0
15
20
0
7
8
64
49
9
1
19
1
15
39
0
20
0
49
10
1
49
11
0
20
1
47
101
12
7
13
5
7
14
64
20
0
49
22
0
45
23
24
7
25
64
84
26
9
137
7
27
8
139
7
28
49
29
1
47
49
16
2
47
101
12
7
17
63
4
83
18
11
I
b
I
2
I
0
I
0
I
-2
p
30
x
8
@dataset
x
29
supports_timestamp_timezones?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
427
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
4
Time
n
x
3
now
x
3
utc
s
18
'%Y-%m-%d %H:%M:%S
x
8
strftime
x
7
literal
x
6
should
x
4
to_s
s
1
.
s
4
%06i
x
4
usec
x
7
sprintf
s
6
+0000'
x
2
==
x
8
DateTime
n
x
10
new_offset
x
12
sec_fraction
x
12
RUBY_VERSION
n
s
5
1.9.0
x
1
<
I
141dd76000
I
f4240
x
1
*
p
17
I
0
I
427
I
a
I
429
I
16
I
42a
I
21
I
42b
I
49
I
42d
I
56
I
42e
I
61
I
42f
I
8b
I
42f
I
9c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
1
s
s
96
should literalize Time and DateTime properly if the database doesn't support usecs in timestamps
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
202
39
0
7
1
56
2
50
3
1
15
45
4
5
49
6
0
49
7
0
19
0
15
20
0
7
8
64
49
9
1
19
1
15
39
0
20
0
49
10
1
49
11
0
20
1
47
101
12
7
13
63
2
83
14
15
45
15
16
49
6
0
78
49
17
1
19
0
15
20
0
7
8
64
49
9
1
19
1
15
39
0
20
0
49
10
1
49
11
0
20
1
47
101
12
7
13
63
2
83
14
15
39
0
7
18
56
19
50
3
1
15
45
4
20
49
6
0
49
7
0
19
0
15
20
0
7
8
64
49
9
1
19
1
15
39
0
20
0
49
10
1
49
11
0
20
1
47
101
12
7
21
63
2
83
14
15
45
15
22
49
6
0
78
49
17
1
19
0
15
20
0
7
8
64
49
9
1
19
1
15
39
0
20
0
49
10
1
49
11
0
20
1
47
101
12
7
21
63
2
83
14
11
I
6
I
2
I
0
I
0
I
-2
p
23
x
8
@dataset
x
25
supports_timestamp_usecs?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
433
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
4
Time
n
x
3
now
x
3
utc
s
18
'%Y-%m-%d %H:%M:%S
x
8
strftime
x
7
literal
x
6
should
x
4
to_s
s
1
'
x
2
==
x
8
DateTime
n
x
10
new_offset
x
29
supports_timestamp_timezones?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
43d
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
s
6
+0000'
n
p
29
I
0
I
433
I
a
I
435
I
16
I
436
I
21
I
437
I
37
I
439
I
44
I
43a
I
4f
I
43b
I
65
I
43d
I
6f
I
43f
I
7b
I
440
I
86
I
441
I
9c
I
443
I
a9
I
444
I
b4
I
445
I
ca
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
1
s
s
33
should not modify literal strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
115
39
0
2
13
18
2
49
1
1
15
15
39
0
45
2
3
7
4
64
49
5
1
49
6
1
49
7
0
7
4
64
83
8
15
39
0
44
43
9
79
49
10
1
13
45
2
11
43
12
43
13
13
71
14
47
9
78
47
49
15
0
13
45
2
16
7
17
64
49
5
1
47
49
18
1
15
8
90
45
2
19
7
17
64
49
5
1
49
14
1
45
2
20
7
21
64
49
5
1
49
22
2
15
49
23
1
49
7
0
7
24
64
83
8
11
I
8
I
0
I
0
I
0
I
-2
p
25
x
8
@dataset
x
18
quote_identifiers=
x
6
Sequel
n
s
8
col1 + 2
x
3
lit
x
7
literal
x
6
should
x
2
==
x
4
Hash
x
16
new_from_literal
n
x
3
SQL
x
10
Identifier
x
3
new
x
8
allocate
n
s
1
a
x
10
initialize
n
n
s
5
a + 2
x
3
[]=
x
10
update_sql
s
27
UPDATE "test" SET a = a + 2
p
7
I
0
I
449
I
b
I
44a
I
22
I
44b
I
73
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
should literalize BigDecimal instances correctly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
176
39
0
45
1
2
13
71
3
47
9
26
47
49
4
0
13
7
5
64
47
49
6
1
15
8
32
7
5
64
49
3
1
49
7
1
49
8
0
7
9
64
83
10
15
39
0
45
1
11
13
71
3
47
9
70
47
49
4
0
13
7
12
64
47
49
6
1
15
8
76
7
12
64
49
3
1
49
7
1
49
8
0
7
13
64
83
10
15
39
0
45
1
14
13
71
3
47
9
114
47
49
4
0
13
7
15
64
47
49
6
1
15
8
120
7
15
64
49
3
1
49
7
1
49
8
0
7
16
64
83
10
15
39
0
45
1
17
13
71
3
47
9
158
47
49
4
0
13
7
18
64
47
49
6
1
15
8
164
7
18
64
49
3
1
49
7
1
49
8
0
7
19
64
83
10
11
I
5
I
0
I
0
I
0
I
-2
p
20
x
8
@dataset
x
10
BigDecimal
n
x
3
new
x
8
allocate
s
2
80
x
10
initialize
x
7
literal
x
6
should
s
4
80.0
x
2
==
n
s
3
NaN
s
5
'NaN'
n
s
8
Infinity
s
10
'Infinity'
n
s
9
-Infinity
s
11
'-Infinity'
p
9
I
0
I
44f
I
2c
I
450
I
58
I
451
I
84
I
452
I
b0
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should literalize PlaceholderLiteralStrings correctly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
584
39
0
45
1
2
43
3
43
4
13
71
5
47
9
34
47
49
6
0
13
7
7
64
79
80
35
2
47
49
8
2
15
8
44
7
7
64
79
80
35
2
49
5
2
49
9
1
49
10
0
7
11
64
83
12
15
39
0
45
1
13
43
3
43
4
13
71
5
47
9
91
47
49
6
0
13
7
7
64
79
80
35
2
2
47
49
8
3
15
8
102
7
7
64
79
80
35
2
2
49
5
3
49
9
1
49
10
0
7
14
64
83
12
15
39
0
45
1
15
43
3
43
4
13
71
5
47
9
167
47
49
6
0
13
7
16
64
44
43
17
80
49
18
1
13
7
19
79
49
20
2
15
13
7
21
80
49
20
2
15
47
49
8
2
15
8
196
7
16
64
44
43
17
80
49
18
1
13
7
19
79
49
20
2
15
13
7
21
80
49
20
2
15
49
5
2
49
9
1
49
10
0
7
11
64
83
12
15
39
0
45
1
22
43
3
43
4
13
71
5
47
9
262
47
49
6
0
13
7
16
64
44
43
17
80
49
18
1
13
7
19
79
49
20
2
15
13
7
21
80
49
20
2
15
2
47
49
8
3
15
8
292
7
16
64
44
43
17
80
49
18
1
13
7
19
79
49
20
2
15
13
7
21
80
49
20
2
15
2
49
5
3
49
9
1
49
10
0
7
14
64
83
12
15
39
0
45
1
23
43
3
43
4
13
71
5
47
9
346
47
49
6
0
13
7
24
64
7
25
64
7
24
64
35
3
79
80
35
2
47
49
8
2
15
8
364
7
24
64
7
25
64
7
24
64
35
3
79
80
35
2
49
5
2
49
9
1
49
10
0
7
11
64
83
12
15
39
0
45
1
26
43
3
43
4
13
71
5
47
9
419
47
49
6
0
13
7
24
64
7
25
64
7
24
64
35
3
79
80
35
2
2
47
49
8
3
15
8
438
7
24
64
7
25
64
7
24
64
35
3
79
80
35
2
2
49
5
3
49
9
1
49
10
0
7
14
64
83
12
15
39
0
45
1
27
43
3
43
4
13
71
5
47
9
489
47
49
6
0
13
7
24
64
7
25
64
35
2
79
80
35
2
47
49
8
2
15
8
504
7
24
64
7
25
64
35
2
79
80
35
2
49
5
2
49
9
1
49
10
0
7
11
64
83
12
15
39
0
45
1
28
43
3
43
4
13
71
5
47
9
556
47
49
6
0
13
7
24
64
7
25
64
35
2
79
80
35
2
2
47
49
8
3
15
8
572
7
24
64
7
25
64
35
2
79
80
35
2
2
49
5
3
49
9
1
49
10
0
7
14
64
83
12
11
I
9
I
0
I
0
I
0
I
-2
p
29
x
8
@dataset
x
6
Sequel
n
x
3
SQL
x
24
PlaceholderLiteralString
x
3
new
x
8
allocate
s
5
? = ?
x
10
initialize
x
7
literal
x
6
should
s
5
1 = 2
x
2
==
n
s
7
(1 = 2)
n
s
7
:a = :b
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
1
b
n
n
s
0

s
3
 = 
n
n
n
p
17
I
0
I
456
I
38
I
457
I
72
I
458
I
d0
I
459
I
130
I
45a
I
178
I
45b
I
1c2
I
45c
I
204
I
45d
I
248
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
should raise an Error if the object can't be literalized
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
45
1
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
6
Object
n
x
3
new
x
8
allocate
x
10
initialize
x
7
literal
p
3
I
0
I
461
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
461
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
47
I
0
I
3ac
I
8
I
3b0
I
13
I
3ba
I
1e
I
3be
I
29
I
3c3
I
34
I
3c7
I
3f
I
3cd
I
4a
I
3d3
I
55
I
3e2
I
60
I
3ee
I
6b
I
3f2
I
76
I
3f7
I
81
I
3fd
I
8c
I
403
I
97
I
409
I
a2
I
40f
I
ad
I
416
I
b8
I
426
I
c3
I
432
I
ce
I
448
I
d9
I
44e
I
e4
I
455
I
ef
I
460
I
fa
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
12
Dataset#from
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
140
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
27
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
38
6
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
8
@dataset
p
3
I
0
I
467
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
23
should accept a Dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
5
56
0
47
50
1
0
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
39
0
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
4
from
p
3
I
0
I
46b
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
10
should_not
p
3
I
0
I
46b
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
63
should format a Dataset as a subquery if it has had options set
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
1
79
49
5
2
15
49
6
1
49
2
1
49
7
0
49
8
0
7
9
64
83
10
11
I
7
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
1
a
x
4
from
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
5
where
x
10
select_sql
x
6
should
s
51
SELECT * FROM (SELECT * FROM a WHERE (a = 1)) AS t1
x
2
==
p
3
I
0
I
46f
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should automatically alias sub-queries
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
80
39
0
39
0
7
1
49
2
1
7
3
49
4
1
49
2
1
49
5
0
49
6
0
7
7
64
83
8
15
39
0
7
1
49
2
1
7
3
49
4
1
19
0
15
39
0
7
9
49
2
1
7
10
49
4
1
19
1
15
39
0
20
0
20
1
49
2
2
49
11
0
49
6
0
7
12
64
83
8
11
I
6
I
2
I
0
I
0
I
-2
p
13
x
8
@dataset
x
1
a
x
4
from
x
1
b
x
5
group
x
10
select_sql
x
6
should
s
48
SELECT * FROM (SELECT * FROM a GROUP BY b) AS t1
x
2
==
x
1
c
x
1
d
x
3
sql
s
84
SELECT * FROM (SELECT * FROM a GROUP BY b) AS t1, (SELECT * FROM c GROUP BY d) AS t2
p
9
I
0
I
473
I
1d
I
475
I
2c
I
476
I
3b
I
477
I
50
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
d1
x
2
d2
s
33
should accept a hash for aliasing
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
110
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
49
7
0
49
8
0
7
9
64
83
10
15
39
0
44
43
1
79
49
2
1
13
7
3
7
11
64
49
5
2
15
49
6
1
49
7
0
49
8
0
7
9
64
83
10
15
39
0
44
43
1
79
49
2
1
13
39
0
7
3
49
6
1
7
4
49
12
1
7
13
49
5
2
15
49
6
1
49
7
0
49
8
0
7
14
64
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
b
x
3
[]=
x
4
from
x
3
sql
x
6
should
s
20
SELECT * FROM a AS b
x
2
==
s
1
b
x
5
group
x
1
c
s
47
SELECT * FROM (SELECT * FROM a GROUP BY b) AS c
p
7
I
0
I
47b
I
21
I
47c
I
43
I
47d
I
6e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should always use a subquery if given a dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
39
0
7
1
49
2
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
1
a
x
4
from
x
10
select_sql
x
6
should
s
37
SELECT * FROM (SELECT * FROM a) AS t1
x
2
==
p
3
I
0
I
481
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should treat string arguments as identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
2
13
18
2
49
1
1
15
15
39
0
7
2
64
49
3
1
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
18
quote_identifiers=
s
1
a
x
4
from
x
10
select_sql
x
6
should
s
17
SELECT * FROM "a"
x
2
==
p
5
I
0
I
485
I
b
I
486
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
should not treat literal strings or blobs as identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
39
0
2
13
18
2
49
1
1
15
15
39
0
45
2
3
7
4
64
49
5
1
49
6
1
49
7
0
49
8
0
7
9
64
83
10
15
39
0
45
2
11
7
4
64
49
12
1
49
6
1
49
7
0
49
8
0
7
13
64
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
18
quote_identifiers=
x
6
Sequel
n
s
1
a
x
3
lit
x
4
from
x
10
select_sql
x
6
should
s
15
SELECT * FROM a
x
2
==
n
x
4
blob
s
17
SELECT * FROM 'a'
p
7
I
0
I
48a
I
b
I
48b
I
25
I
48c
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
57
should remove all FROM tables if called with no arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
4
from
x
3
sql
x
6
should
s
8
SELECT *
x
2
==
p
3
I
0
I
490
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
should accept sql functions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
39
0
45
1
2
7
3
7
4
49
5
2
49
6
1
49
7
0
49
8
0
7
9
64
83
10
15
39
0
45
1
11
7
12
7
13
49
5
2
49
6
1
49
7
0
49
8
0
7
14
64
83
10
11
I
5
I
0
I
0
I
0
I
-2
p
15
x
8
@dataset
x
6
Sequel
n
x
3
abc
x
3
def
x
8
function
x
4
from
x
10
select_sql
x
6
should
s
22
SELECT * FROM abc(def)
x
2
==
n
x
1
a
x
1
i
s
18
SELECT * FROM a(i)
p
5
I
0
I
494
I
1b
I
495
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should accept :schema__table___alias symbol format
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
171
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
0
7
7
49
2
1
49
3
0
49
4
0
7
8
64
83
6
15
39
0
7
9
49
2
1
49
3
0
49
4
0
7
10
64
83
6
15
39
0
7
11
49
2
1
49
3
0
49
4
0
7
12
64
83
6
15
39
0
7
13
49
2
1
49
3
0
49
4
0
7
14
64
83
6
15
39
0
7
15
49
2
1
49
3
0
49
4
0
7
16
64
83
6
15
39
0
7
17
49
2
1
49
3
0
49
4
0
7
18
64
83
6
15
39
0
7
19
49
2
1
49
3
0
49
4
0
7
20
64
83
6
15
39
0
7
21
49
2
1
49
3
0
49
4
0
7
22
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
23
x
8
@dataset
x
8
abc__def
x
4
from
x
10
select_sql
x
6
should
s
21
SELECT * FROM abc.def
x
2
==
x
6
a_b__c
s
19
SELECT * FROM a_b.c
x
4
#__#
s
17
SELECT * FROM #.#
x
12
abc__def___d
s
26
SELECT * FROM abc.def AS d
x
14
a_b__d_e___f_g
s
28
SELECT * FROM a_b.d_e AS f_g
x
8
#__#___#
s
22
SELECT * FROM #.# AS #
x
9
abc___def
s
24
SELECT * FROM abc AS def
x
9
a_b___c_d
s
24
SELECT * FROM a_b AS c_d
x
5
#___#
s
20
SELECT * FROM # AS #
p
19
I
0
I
499
I
13
I
49a
I
26
I
49b
I
39
I
49c
I
4c
I
49d
I
5f
I
49e
I
72
I
49f
I
85
I
4a0
I
98
I
4a1
I
ab
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
should not handle :foo__schema__table___alias specially
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
26
foo__schema__table___alias
x
4
from
x
10
select_sql
x
6
should
s
40
SELECT * FROM foo.schema__table AS alias
x
2
==
p
3
I
0
I
4a5
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
91
should hoist WITH clauses from subqueries if the dataset doesn't support CTEs in subselects
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
111
39
0
7
1
56
2
50
3
1
15
39
0
7
4
56
5
50
3
1
15
39
0
39
0
7
6
49
7
1
7
6
39
0
7
8
49
7
1
49
9
2
49
7
1
49
10
0
49
11
0
7
12
64
83
13
15
39
0
39
0
7
6
49
7
1
7
6
39
0
7
8
49
7
1
49
9
2
39
0
7
14
49
7
1
7
14
39
0
7
15
49
7
1
49
9
2
49
7
2
49
10
0
49
11
0
7
16
64
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
17
x
8
@dataset
x
13
supports_cte?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
4a9
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
26
supports_cte_in_subselect?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
4aa
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
1
a
x
4
from
x
1
b
x
4
with
x
3
sql
x
6
should
s
65
WITH a AS (SELECT * FROM b) SELECT * FROM (SELECT * FROM a) AS t1
x
2
==
x
1
c
x
1
d
s
114
WITH a AS (SELECT * FROM b), c AS (SELECT * FROM d) SELECT * FROM (SELECT * FROM a) AS t1, (SELECT * FROM c) AS t2
p
9
I
0
I
4a9
I
a
I
4aa
I
14
I
4ab
I
38
I
4ac
I
6f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
27
I
0
I
466
I
8
I
46a
I
13
I
46e
I
1e
I
472
I
29
I
47a
I
34
I
480
I
3f
I
484
I
4a
I
489
I
55
I
48f
I
60
I
493
I
6b
I
498
I
76
I
4a4
I
81
I
4a8
I
8c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
14
Dataset#select
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
129
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
25
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
2
@d
p
3
I
0
I
4b2
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
28
should accept variable arity
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
0
7
7
7
8
7
9
49
2
3
49
3
0
49
4
0
7
10
64
83
6
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
4
name
x
6
select
x
3
sql
x
6
should
s
21
SELECT name FROM test
x
2
==
x
1
a
x
1
b
x
7
test__c
s
29
SELECT a, b, test.c FROM test
p
5
I
0
I
4b6
I
13
I
4b7
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
41
should accept symbols and literal strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
129
39
0
45
1
2
7
3
64
49
4
1
49
5
1
49
6
0
49
7
0
7
8
64
83
9
15
39
0
7
10
45
1
11
7
12
64
49
4
1
49
5
2
49
6
0
49
7
0
7
13
64
83
9
15
39
0
7
14
45
1
15
7
16
64
49
4
1
49
5
2
49
6
0
49
7
0
7
17
64
83
9
15
39
0
45
1
18
7
16
64
49
4
1
7
14
49
5
2
49
6
0
49
7
0
7
19
64
83
9
15
39
0
7
20
49
5
1
49
6
0
49
7
0
7
21
64
83
9
11
I
5
I
0
I
0
I
0
I
-2
p
22
x
2
@d
x
6
Sequel
n
s
3
aaa
x
3
lit
x
6
select
x
3
sql
x
6
should
s
20
SELECT aaa FROM test
x
2
==
x
1
a
n
s
1
b
s
21
SELECT a, b FROM test
x
8
test__cc
n
s
11
test.d AS e
s
37
SELECT test.cc, test.d AS e FROM test
n
s
37
SELECT test.d AS e, test.cc FROM test
x
14
test__name___n
s
31
SELECT test.name AS n FROM test
p
11
I
0
I
4bb
I
1a
I
4bc
I
36
I
4bd
I
52
I
4be
I
6e
I
4bf
I
81
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
24
should accept ColumnAlls
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
49
39
0
45
1
2
43
3
43
4
13
71
5
47
9
29
47
49
6
0
13
7
7
47
49
8
1
15
8
34
7
7
49
5
1
49
9
1
49
10
0
49
11
0
7
12
64
83
13
11
I
5
I
0
I
0
I
0
I
-2
p
14
x
2
@d
x
6
Sequel
n
x
3
SQL
x
9
ColumnAll
x
3
new
x
8
allocate
x
4
test
x
10
initialize
x
6
select
x
3
sql
x
6
should
s
23
SELECT test.* FROM test
x
2
==
p
3
I
0
I
4c3
I
31
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should accept QualifiedIdentifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
49
7
1
49
8
0
49
9
0
7
10
64
83
11
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
2
@d
x
6
Sequel
n
x
10
test__name
x
4
expr
x
1
n
x
2
as
x
6
select
x
3
sql
x
6
should
s
31
SELECT test.name AS n FROM test
x
2
==
p
3
I
0
I
4c7
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
49
should use the wildcard if no arguments are given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
6
select
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
4cb
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
57
should handle array condition specifiers that are aliased
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
45
1
2
7
3
7
4
35
2
35
1
7
5
49
6
2
49
7
1
49
8
0
49
9
0
7
10
64
83
11
11
I
5
I
0
I
0
I
0
I
-2
p
12
x
2
@d
x
6
Sequel
n
x
1
b
x
1
c
x
1
n
x
2
as
x
6
select
x
3
sql
x
6
should
s
29
SELECT (b = c) AS n FROM test
x
2
==
p
3
I
0
I
4cf
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should accept a hash for AS values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
39
0
44
43
1
80
49
2
1
13
7
3
7
4
64
49
5
2
15
13
7
6
7
7
64
49
5
2
15
49
8
1
49
9
0
49
10
0
7
11
13
70
9
56
15
44
43
12
7
13
78
49
14
2
6
11
49
15
1
11
I
6
I
0
I
0
I
0
I
-2
p
16
x
2
@d
x
4
Hash
x
16
new_from_literal
x
4
name
s
1
n
x
3
[]=
x
5
__ggh
s
3
age
x
6
select
x
3
sql
x
6
should
n
x
6
Regexp
s
70
SELECT ((name AS n, __ggh AS age)|(__ggh AS age, name AS n)) FROM test
x
3
new
x
2
=~
p
3
I
0
I
4d3
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
42
should override the previous select option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
50
39
0
7
1
7
2
7
3
49
4
3
49
5
0
49
6
0
49
7
0
7
8
64
83
9
15
39
0
7
10
49
4
1
7
11
49
5
1
49
6
0
49
7
0
7
12
64
83
9
11
I
5
I
0
I
0
I
0
I
-2
p
13
x
2
@d
x
1
a
x
1
b
x
1
c
x
7
select!
x
6
select
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
x
5
price
x
4
name
s
21
SELECT name FROM test
p
5
I
0
I
4d7
I
1a
I
4d8
I
32
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
61
should accept arbitrary objects and literalize them correctly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
88
39
0
79
7
1
7
2
64
49
3
3
49
4
0
49
5
0
7
6
64
83
7
15
39
0
1
45
8
9
7
10
7
11
49
12
2
7
13
49
3
3
49
4
0
49
5
0
7
14
64
83
7
15
39
0
1
79
44
43
15
79
49
16
1
13
7
17
7
18
49
19
2
15
49
3
3
49
4
0
49
5
0
7
20
64
83
7
11
I
8
I
0
I
0
I
0
I
-2
p
21
x
2
@d
x
1
a
s
1
t
x
6
select
x
3
sql
x
6
should
s
26
SELECT 1, a, 't' FROM test
x
2
==
x
6
Sequel
n
x
3
sum
x
1
t
x
8
function
x
5
x___y
s
37
SELECT NULL, sum(t), x AS y FROM test
x
4
Hash
x
16
new_from_literal
x
1
x
x
1
y
x
3
[]=
s
32
SELECT NULL, 1, x AS y FROM test
p
7
I
0
I
4dc
I
17
I
4dd
I
35
I
4de
I
58
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should accept a block that yields a virtual row
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
76
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
15
39
0
56
7
50
2
0
49
3
0
49
4
0
7
8
64
83
6
15
39
0
56
9
50
2
0
49
3
0
49
4
0
7
10
64
83
6
15
39
0
56
11
50
2
0
49
3
0
49
4
0
7
12
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
13
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
1
a
p
3
I
0
I
4e2
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
6
select
x
3
sql
x
6
should
s
18
SELECT a FROM test
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
79
47
49
0
1
11
I
3
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
4e3
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
SELECT a(1) FROM test
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
57
19
0
15
20
0
79
80
49
0
2
11
I
5
I
1
I
1
I
1
n
p
1
x
1
a
p
3
I
0
I
4e4
I
c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
s
24
SELECT a(1, 2) FROM test
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
5
79
80
47
49
0
2
35
2
11
I
5
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
4e5
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
SELECT a, a(1, 2) FROM test
p
9
I
0
I
4e2
I
13
I
4e3
I
26
I
4e4
I
39
I
4e5
I
4c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
64
should merge regular arguments with argument returned from block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
88
39
0
7
1
56
2
50
3
1
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
1
7
8
56
9
50
3
2
49
4
0
49
5
0
7
10
64
83
7
15
39
0
7
1
56
11
50
3
1
49
4
0
49
5
0
7
12
64
83
7
15
39
0
7
1
7
8
56
13
50
3
2
49
4
0
49
5
0
7
14
64
83
7
11
I
5
I
0
I
0
I
0
I
-2
p
15
x
2
@d
x
1
b
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
4
5
48
0
11
I
2
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
4e9
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
select
x
3
sql
x
6
should
s
21
SELECT b, a FROM test
x
2
==
x
1
c
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
57
19
0
15
20
0
79
49
0
1
11
I
4
I
1
I
1
I
1
n
p
1
x
1
a
p
3
I
0
I
4ea
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
s
27
SELECT b, c, a(1) FROM test
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
5
79
80
47
49
0
2
35
2
11
I
5
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
4eb
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
30
SELECT b, a, a(1, 2) FROM test
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
57
19
0
15
20
0
49
0
0
20
0
79
80
49
0
2
35
2
11
I
6
I
1
I
1
I
1
n
p
1
x
1
a
p
3
I
0
I
4ec
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
s
33
SELECT b, c, a, a(1, 2) FROM test
p
9
I
0
I
4e9
I
15
I
4ea
I
2c
I
4eb
I
41
I
4ec
I
58
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
25
I
0
I
4b1
I
8
I
4b5
I
13
I
4ba
I
1e
I
4c2
I
29
I
4c6
I
34
I
4ca
I
3f
I
4ce
I
4a
I
4d2
I
55
I
4d6
I
60
I
4db
I
6b
I
4e1
I
76
I
4e8
I
81
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
20
Dataset#select_group
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
2
@d
p
3
I
0
I
4f2
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
32
should set both SELECT and GROUP
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
0
7
7
7
8
7
9
49
2
3
49
3
0
49
4
0
7
10
64
83
6
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
4
name
x
12
select_group
x
3
sql
x
6
should
s
35
SELECT name FROM test GROUP BY name
x
2
==
x
1
a
x
4
b__c
x
5
d___e
s
50
SELECT a, b.c, d AS e FROM test GROUP BY a, b.c, d
p
5
I
0
I
4f6
I
13
I
4f7
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
56
should remove from both SELECT and GROUP if no arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
49
2
1
49
2
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
4
name
x
12
select_group
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
4fb
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should accept virtual row blocks
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
59
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
15
39
0
56
7
50
2
0
49
3
0
49
4
0
7
8
64
83
6
15
39
0
7
9
56
10
50
2
1
49
3
0
49
4
0
7
8
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
4
5
48
0
11
I
2
I
0
I
0
I
0
I
-2
p
1
x
4
name
p
3
I
0
I
4ff
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
12
select_group
x
3
sql
x
6
should
s
35
SELECT name FROM test GROUP BY name
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
5
48
0
5
5
48
1
47
49
2
1
5
48
3
49
4
1
35
2
11
I
4
I
0
I
0
I
0
I
-2
p
5
x
4
name
x
1
v
x
1
f
x
1
a
x
2
as
p
3
I
0
I
500
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
SELECT name, f(v) AS a FROM test GROUP BY name, f(v)
x
4
name
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
5
5
48
0
47
49
1
1
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
1
v
x
1
f
x
1
a
x
2
as
p
3
I
0
I
501
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
4ff
I
13
I
500
I
26
I
501
I
3b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
4f1
I
8
I
4f5
I
13
I
4fa
I
1e
I
4fe
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
18
Dataset#select_all
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
118
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
23
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
2
@d
p
3
I
0
I
507
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
26
should select the wildcard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
10
select_all
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
50b
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
42
should override the previous select option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
39
0
7
1
7
2
7
3
49
4
3
49
5
0
49
6
0
49
7
0
7
8
64
83
9
11
I
5
I
0
I
0
I
0
I
-2
p
10
x
2
@d
x
1
a
x
1
b
x
1
c
x
7
select!
x
10
select_all
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
50f
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
57
should select all columns in a table if given an argument
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
4
test
x
10
select_all
x
3
sql
x
6
should
s
23
SELECT test.* FROM test
x
2
==
p
3
I
0
I
513
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
66
should select all columns all tables if given a multiple arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
2
@d
x
4
test
x
3
foo
x
10
select_all
x
3
sql
x
6
should
s
30
SELECT test.*, foo.* FROM test
x
2
==
p
3
I
0
I
517
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should work correctly with qualified symbols
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
9
sch__test
x
10
select_all
x
3
sql
x
6
should
s
27
SELECT sch.test.* FROM test
x
2
==
p
3
I
0
I
51b
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
42
should work correctly with aliased symbols
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
0
7
7
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
2
@d
x
9
test___al
x
10
select_all
x
3
sql
x
6
should
s
21
SELECT al.* FROM test
x
2
==
x
14
sch__test___al
p
5
I
0
I
51f
I
13
I
520
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should work correctly with SQL::Identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
39
0
45
1
2
7
3
49
4
1
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
2
@d
x
6
Sequel
n
x
4
test
x
10
identifier
x
10
select_all
x
3
sql
x
6
should
s
23
SELECT test.* FROM test
x
2
==
p
3
I
0
I
524
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
51
should work correctly with SQL::QualifiedIdentifier
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
45
1
2
7
3
7
4
49
5
2
49
6
1
49
7
0
49
8
0
7
9
64
83
10
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
6
Sequel
n
x
3
sch
x
4
test
x
7
qualify
x
10
select_all
x
3
sql
x
6
should
s
27
SELECT sch.test.* FROM test
x
2
==
p
3
I
0
I
528
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should work correctly with SQL::AliasedExpressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
49
7
1
49
8
0
49
9
0
7
10
64
83
11
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
2
@d
x
6
Sequel
n
x
4
test
x
4
expr
x
2
al
x
2
as
x
10
select_all
x
3
sql
x
6
should
s
21
SELECT al.* FROM test
x
2
==
p
3
I
0
I
52c
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should work correctly with SQL::JoinClauses
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
49
2
1
7
3
49
2
1
19
0
15
39
0
20
0
49
4
0
7
5
49
6
1
36
1
51
7
0
49
8
0
49
9
0
7
10
64
83
11
11
I
5
I
1
I
0
I
0
I
-2
p
12
x
2
@d
x
3
foo
x
10
cross_join
x
9
test___al
x
4
opts
x
4
join
x
2
[]
x
10
select_all
x
3
sql
x
6
should
s
28
SELECT foo.*, al.* FROM test
x
2
==
p
5
I
0
I
530
I
f
I
531
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
d
p
23
I
0
I
506
I
8
I
50a
I
13
I
50e
I
1e
I
512
I
29
I
516
I
34
I
51a
I
3f
I
51e
I
4a
I
523
I
55
I
527
I
60
I
52b
I
6b
I
52f
I
76
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
19
Dataset#select_more
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
2
@d
p
3
I
0
I
537
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
54
should act like #select for datasets with no selection
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
39
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
15
39
0
49
8
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
9
49
10
1
49
8
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
1
a
x
1
b
x
11
select_more
x
3
sql
x
6
should
s
21
SELECT a, b FROM test
x
2
==
x
10
select_all
x
4
blah
x
6
select
p
7
I
0
I
53b
I
15
I
53c
I
2d
I
53d
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
44
should add to the currently selected columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
39
0
7
1
49
2
1
7
3
49
4
1
49
5
0
49
6
0
7
7
64
83
8
15
39
0
45
9
10
43
11
43
12
13
71
13
47
9
53
47
49
14
0
13
7
1
47
49
15
1
15
8
58
7
1
49
13
1
49
2
1
45
9
16
43
11
43
12
13
71
13
47
9
88
47
49
14
0
13
7
3
47
49
15
1
15
8
93
7
3
49
13
1
49
4
1
49
5
0
49
6
0
7
17
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
18
x
2
@d
x
1
a
x
6
select
x
1
b
x
11
select_more
x
3
sql
x
6
should
s
21
SELECT a, b FROM test
x
2
==
x
6
Sequel
n
x
3
SQL
x
9
ColumnAll
x
3
new
x
8
allocate
x
10
initialize
n
s
25
SELECT a.*, b.* FROM test
p
5
I
0
I
541
I
18
I
542
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should accept a block that yields a virtual row
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
110
39
0
7
1
49
2
1
56
3
50
4
0
49
5
0
49
6
0
7
7
64
83
8
15
39
0
45
9
10
43
11
43
12
13
71
13
47
9
53
47
49
14
0
13
7
1
47
49
15
1
15
8
58
7
1
49
13
1
49
2
1
45
9
16
43
11
43
12
13
71
13
47
9
88
47
49
14
0
13
7
17
47
49
15
1
15
8
93
7
17
49
13
1
56
18
50
4
1
49
5
0
49
6
0
7
19
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
20
x
2
@d
x
1
a
x
6
select
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
1
b
p
3
I
0
I
546
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
11
select_more
x
3
sql
x
6
should
s
21
SELECT a, b FROM test
x
2
==
x
6
Sequel
n
x
3
SQL
x
9
ColumnAll
x
3
new
x
8
allocate
x
10
initialize
n
x
1
b
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
79
47
49
0
1
11
I
3
I
0
I
0
I
0
I
-2
p
1
x
1
b
p
3
I
0
I
547
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
SELECT a.*, b.*, b(1) FROM test
p
5
I
0
I
546
I
18
I
547
I
6e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
536
I
8
I
53a
I
13
I
540
I
1e
I
545
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
Dataset#select_append
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
2
@d
p
3
I
0
I
54d
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
61
should select * in addition to columns if no columns selected
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
39
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
15
39
0
49
8
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
9
49
10
1
49
8
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
1
a
x
1
b
x
13
select_append
x
3
sql
x
6
should
s
24
SELECT *, a, b FROM test
x
2
==
x
10
select_all
x
4
blah
x
6
select
p
7
I
0
I
551
I
15
I
552
I
2d
I
553
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
44
should add to the currently selected columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
39
0
7
1
49
2
1
7
3
49
4
1
49
5
0
49
6
0
7
7
64
83
8
15
39
0
45
9
10
43
11
43
12
13
71
13
47
9
53
47
49
14
0
13
7
1
47
49
15
1
15
8
58
7
1
49
13
1
49
2
1
45
9
16
43
11
43
12
13
71
13
47
9
88
47
49
14
0
13
7
3
47
49
15
1
15
8
93
7
3
49
13
1
49
4
1
49
5
0
49
6
0
7
17
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
18
x
2
@d
x
1
a
x
6
select
x
1
b
x
13
select_append
x
3
sql
x
6
should
s
21
SELECT a, b FROM test
x
2
==
x
6
Sequel
n
x
3
SQL
x
9
ColumnAll
x
3
new
x
8
allocate
x
10
initialize
n
s
25
SELECT a.*, b.* FROM test
p
5
I
0
I
557
I
18
I
558
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should accept a block that yields a virtual row
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
110
39
0
7
1
49
2
1
56
3
50
4
0
49
5
0
49
6
0
7
7
64
83
8
15
39
0
45
9
10
43
11
43
12
13
71
13
47
9
53
47
49
14
0
13
7
1
47
49
15
1
15
8
58
7
1
49
13
1
49
2
1
45
9
16
43
11
43
12
13
71
13
47
9
88
47
49
14
0
13
7
17
47
49
15
1
15
8
93
7
17
49
13
1
56
18
50
4
1
49
5
0
49
6
0
7
19
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
20
x
2
@d
x
1
a
x
6
select
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
1
b
p
3
I
0
I
55c
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
13
select_append
x
3
sql
x
6
should
s
21
SELECT a, b FROM test
x
2
==
x
6
Sequel
n
x
3
SQL
x
9
ColumnAll
x
3
new
x
8
allocate
x
10
initialize
n
x
1
b
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
79
47
49
0
1
11
I
3
I
0
I
0
I
0
I
-2
p
1
x
1
b
p
3
I
0
I
55d
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
SELECT a.*, b.*, b(1) FROM test
p
5
I
0
I
55c
I
18
I
55d
I
6e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
77
should select from all from and join tables if SELECT *, column not supported
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
39
0
7
1
56
2
50
3
1
15
39
0
7
4
49
5
1
49
6
0
49
7
0
7
8
64
83
9
15
39
0
7
10
7
11
49
12
2
7
4
49
5
1
49
6
0
49
7
0
7
13
64
83
9
15
39
0
7
11
49
14
1
7
4
49
5
1
49
6
0
49
7
0
7
15
64
83
9
15
39
0
7
11
49
14
1
7
16
49
14
1
7
4
49
5
1
49
6
0
49
7
0
7
17
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
18
x
2
@d
x
31
supports_select_all_and_column?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
561
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
1
b
x
13
select_append
x
3
sql
x
6
should
s
26
SELECT test.*, b FROM test
x
2
==
x
4
test
x
1
c
x
4
from
s
34
SELECT test.*, c.*, b FROM test, c
x
10
cross_join
s
44
SELECT test.*, c.*, b FROM test CROSS JOIN c
x
1
d
s
62
SELECT test.*, c.*, d.*, b FROM test CROSS JOIN c CROSS JOIN d
p
11
I
0
I
561
I
a
I
562
I
1d
I
563
I
37
I
564
I
4f
I
565
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
11
I
0
I
54c
I
8
I
550
I
13
I
556
I
1e
I
55b
I
29
I
560
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
13
Dataset#order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
107
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
21
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
56b
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
57
should include an ORDER BY clause in the select statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
4
name
x
5
order
x
3
sql
x
6
should
s
32
SELECT * FROM test ORDER BY name
x
2
==
p
3
I
0
I
56f
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
32
should accept multiple arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
7
1
45
2
3
7
4
49
5
1
49
6
2
49
7
0
49
8
0
7
9
64
83
10
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
4
name
x
6
Sequel
n
x
5
price
x
4
desc
x
5
order
x
3
sql
x
6
should
s
44
SELECT * FROM test ORDER BY name, price DESC
x
2
==
p
3
I
0
I
573
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
45
should accept :nulls options for asc and desc
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
65
39
0
45
1
2
7
3
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
49
9
2
45
1
10
7
11
44
43
4
79
49
5
1
13
7
6
7
12
49
8
2
15
49
13
2
49
14
2
49
15
0
49
16
0
7
17
64
83
18
11
I
9
I
0
I
0
I
0
I
-2
p
19
x
8
@dataset
x
6
Sequel
n
x
4
name
x
4
Hash
x
16
new_from_literal
x
5
nulls
x
4
last
x
3
[]=
x
3
asc
n
x
5
price
x
5
first
x
4
desc
x
5
order
x
3
sql
x
6
should
s
71
SELECT * FROM test ORDER BY name ASC NULLS LAST, price DESC NULLS FIRST
x
2
==
p
3
I
0
I
577
I
41
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should override a previous ordering
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
49
2
1
7
3
49
2
1
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
4
name
x
5
order
x
5
stamp
x
3
sql
x
6
should
s
33
SELECT * FROM test ORDER BY stamp
x
2
==
p
3
I
0
I
57b
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
30
should accept a literal string
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
39
0
45
1
2
7
3
64
49
4
1
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
6
Sequel
n
s
8
dada ASC
x
3
lit
x
5
order
x
3
sql
x
6
should
s
36
SELECT * FROM test ORDER BY dada ASC
x
2
==
p
3
I
0
I
57f
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
should accept a hash as an expression
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
44
43
1
79
49
2
1
13
7
3
1
49
4
2
15
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
4
name
x
3
[]=
x
5
order
x
3
sql
x
6
should
s
42
SELECT * FROM test ORDER BY (name IS NULL)
x
2
==
p
3
I
0
I
583
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should accept a nil to remove ordering
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
39
0
7
1
49
2
1
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
3
bah
x
5
order
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
587
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should accept a block that yields a virtual row
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
76
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
15
39
0
56
7
50
2
0
49
3
0
49
4
0
7
8
64
83
6
15
39
0
56
9
50
2
0
49
3
0
49
4
0
7
10
64
83
6
15
39
0
56
11
50
2
0
49
3
0
49
4
0
7
12
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
13
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
1
a
p
3
I
0
I
58b
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
5
order
x
3
sql
x
6
should
s
29
SELECT * FROM test ORDER BY a
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
79
47
49
0
1
11
I
3
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
58c
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
SELECT * FROM test ORDER BY a(1)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
57
19
0
15
20
0
79
80
49
0
2
11
I
5
I
1
I
1
I
1
n
p
1
x
1
a
p
3
I
0
I
58d
I
c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
s
35
SELECT * FROM test ORDER BY a(1, 2)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
5
79
80
47
49
0
2
35
2
11
I
5
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
58e
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
SELECT * FROM test ORDER BY a, a(1, 2)
p
9
I
0
I
58b
I
13
I
58c
I
26
I
58d
I
39
I
58e
I
4c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
64
should merge regular arguments with argument returned from block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
88
39
0
7
1
56
2
50
3
1
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
1
7
8
56
9
50
3
2
49
4
0
49
5
0
7
10
64
83
7
15
39
0
7
1
56
11
50
3
1
49
4
0
49
5
0
7
12
64
83
7
15
39
0
7
1
7
8
56
13
50
3
2
49
4
0
49
5
0
7
14
64
83
7
11
I
5
I
0
I
0
I
0
I
-2
p
15
x
8
@dataset
x
1
b
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
4
5
48
0
11
I
2
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
592
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
order
x
3
sql
x
6
should
s
32
SELECT * FROM test ORDER BY b, a
x
2
==
x
1
c
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
57
19
0
15
20
0
79
49
0
1
11
I
4
I
1
I
1
I
1
n
p
1
x
1
a
p
3
I
0
I
593
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
s
38
SELECT * FROM test ORDER BY b, c, a(1)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
5
79
80
47
49
0
2
35
2
11
I
5
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
594
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
SELECT * FROM test ORDER BY b, a, a(1, 2)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
57
19
0
15
20
0
49
0
0
20
0
79
80
49
0
2
35
2
11
I
6
I
1
I
1
I
1
n
p
1
x
1
a
p
3
I
0
I
595
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
s
44
SELECT * FROM test ORDER BY b, c, a, a(1, 2)
p
9
I
0
I
592
I
15
I
593
I
2c
I
594
I
41
I
595
I
58
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
21
I
0
I
56a
I
8
I
56e
I
13
I
572
I
1e
I
576
I
29
I
57a
I
34
I
57e
I
3f
I
582
I
4a
I
586
I
55
I
58a
I
60
I
591
I
6b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
18
Dataset#unfiltered
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
40
should remove filtering from the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
66
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
44
43
8
79
49
9
1
13
7
10
79
49
11
2
15
49
12
1
49
13
0
49
14
0
49
15
0
7
16
64
83
17
11
I
6
I
0
I
0
I
0
I
-2
p
18
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
4
Hash
x
16
new_from_literal
x
5
score
x
3
[]=
x
6
filter
x
10
unfiltered
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
59b
I
42
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
3
I
0
I
59a
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
17
Dataset#unlimited
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
47
should remove limit and offset from the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
53
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
79
80
49
8
2
49
9
0
49
10
0
49
11
0
7
12
64
83
13
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
5
limit
x
9
unlimited
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
5a1
I
35
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
3
I
0
I
5a0
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
17
Dataset#ungrouped
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
55
should remove group and having clauses from the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
58
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
7
8
49
9
1
7
10
49
11
1
49
12
0
49
13
0
49
14
0
7
15
64
83
16
11
I
4
I
0
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
1
a
x
5
group
x
1
b
x
6
having
x
9
ungrouped
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
5a7
I
3a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
3
I
0
I
5a6
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
17
Dataset#unordered
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
39
should remove ordering from the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
53
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
7
8
49
9
1
49
10
0
49
11
0
49
12
0
7
13
64
83
14
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
4
name
x
5
order
x
9
unordered
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
5ad
I
35
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
3
I
0
I
5ac
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
16
Dataset#with_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
5b3
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
21
should use static sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
7
1
64
49
2
1
49
3
0
49
4
0
7
1
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
s
18
SELECT 1 FROM test
x
8
with_sql
x
3
sql
x
6
should
x
2
==
p
3
I
0
I
5b7
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
29
should work with placeholders
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
7
1
64
79
49
2
2
49
3
0
49
4
0
7
5
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
s
18
SELECT ? FROM test
x
8
with_sql
x
3
sql
x
6
should
s
18
SELECT 1 FROM test
x
2
==
p
3
I
0
I
5bb
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should work with named placeholders
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
39
0
7
1
64
44
43
2
79
49
3
1
13
7
4
79
49
5
2
15
49
6
2
49
7
0
49
8
0
7
9
64
83
10
11
I
7
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
s
19
SELECT :x FROM test
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
8
with_sql
x
3
sql
x
6
should
s
18
SELECT 1 FROM test
x
2
==
p
3
I
0
I
5bf
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
20
should keep row_proc
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
64
49
2
1
49
3
0
49
4
0
39
0
49
3
0
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
s
18
SELECT 1 FROM test
x
8
with_sql
x
8
row_proc
x
6
should
x
2
==
p
3
I
0
I
5c3
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
45
should work with method symbols and arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
87
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
0
7
7
44
43
8
79
49
9
1
13
7
10
79
49
11
2
15
49
2
2
49
3
0
49
4
0
7
12
64
83
6
15
39
0
7
13
44
43
8
79
49
9
1
13
7
10
79
49
11
2
15
49
2
2
49
3
0
49
4
0
7
14
64
83
6
11
I
7
I
0
I
0
I
0
I
-2
p
15
x
8
@dataset
x
10
delete_sql
x
8
with_sql
x
3
sql
x
6
should
s
16
DELETE FROM test
x
2
==
x
10
insert_sql
x
4
Hash
x
16
new_from_literal
x
1
b
x
3
[]=
s
31
INSERT INTO test (b) VALUES (1)
x
10
update_sql
s
21
UPDATE test SET b = 1
p
7
I
0
I
5c7
I
13
I
5c8
I
35
I
5c9
I
57
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
13
I
0
I
5b2
I
8
I
5b6
I
13
I
5ba
I
1e
I
5be
I
29
I
5c2
I
34
I
5c6
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
16
Dataset#order_by
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
5d0
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
57
should include an ORDER BY clause in the select statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
4
name
x
8
order_by
x
3
sql
x
6
should
s
32
SELECT * FROM test ORDER BY name
x
2
==
p
3
I
0
I
5d4
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
32
should accept multiple arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
7
1
45
2
3
7
4
49
5
1
49
6
2
49
7
0
49
8
0
7
9
64
83
10
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
4
name
x
6
Sequel
n
x
5
price
x
4
desc
x
8
order_by
x
3
sql
x
6
should
s
44
SELECT * FROM test ORDER BY name, price DESC
x
2
==
p
3
I
0
I
5d8
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should override a previous ordering
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
49
2
1
7
3
49
4
1
49
5
0
49
6
0
7
7
64
83
8
11
I
3
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
4
name
x
8
order_by
x
5
stamp
x
5
order
x
3
sql
x
6
should
s
33
SELECT * FROM test ORDER BY stamp
x
2
==
p
3
I
0
I
5dc
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
22
should accept a string
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
39
0
45
1
2
7
3
64
49
4
1
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
6
Sequel
n
s
8
dada ASC
x
3
lit
x
8
order_by
x
3
sql
x
6
should
s
36
SELECT * FROM test ORDER BY dada ASC
x
2
==
p
3
I
0
I
5e0
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should accept a nil to remove ordering
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
39
0
7
1
49
2
1
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
3
bah
x
8
order_by
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
5e4
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
13
I
0
I
5cf
I
8
I
5d3
I
13
I
5d7
I
1e
I
5db
I
29
I
5df
I
34
I
5e3
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
Dataset#order_more and order_append
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
5ea
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
57
should include an ORDER BY clause in the select statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
0
7
1
49
7
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
4
name
x
10
order_more
x
3
sql
x
6
should
s
32
SELECT * FROM test ORDER BY name
x
2
==
x
12
order_append
p
5
I
0
I
5ee
I
13
I
5ef
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
44
should add to the end of a previous ordering
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
39
0
7
1
49
2
1
45
3
4
7
5
49
6
1
49
7
1
49
8
0
49
9
0
7
10
64
83
11
15
39
0
7
1
49
2
1
45
3
12
7
5
49
6
1
49
13
1
49
8
0
49
9
0
7
10
64
83
11
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
4
name
x
5
order
x
6
Sequel
n
x
5
stamp
x
4
desc
x
10
order_more
x
3
sql
x
6
should
s
44
SELECT * FROM test ORDER BY name, stamp DESC
x
2
==
n
x
12
order_append
p
5
I
0
I
5f3
I
1e
I
5f4
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should accept a block that yields a virtual row
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
39
0
7
1
49
2
1
56
3
50
4
0
49
5
0
49
6
0
7
7
64
83
8
15
39
0
7
1
7
9
49
2
2
7
10
7
11
56
12
50
4
2
49
5
0
49
6
0
7
13
64
83
8
15
39
0
7
1
49
2
1
56
14
50
15
0
49
5
0
49
6
0
7
7
64
83
8
15
39
0
7
1
7
9
49
2
2
7
10
7
11
56
16
50
15
2
49
5
0
49
6
0
7
13
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
17
x
8
@dataset
x
1
a
x
5
order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
1
b
p
3
I
0
I
5f8
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
10
order_more
x
3
sql
x
6
should
s
32
SELECT * FROM test ORDER BY a, b
x
2
==
x
1
b
x
1
c
x
1
d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
5
79
80
47
49
1
2
35
2
11
I
5
I
0
I
0
I
0
I
-2
p
2
x
1
e
x
1
f
p
3
I
0
I
5f9
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
SELECT * FROM test ORDER BY a, b, c, d, e, f(1, 2)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
1
b
p
3
I
0
I
5fa
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
12
order_append
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
5
79
80
47
49
1
2
35
2
11
I
5
I
0
I
0
I
0
I
-2
p
2
x
1
e
x
1
f
p
3
I
0
I
5fb
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
5f8
I
18
I
5f9
I
36
I
5fa
I
4e
I
5fb
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
5e9
I
8
I
5ed
I
13
I
5f2
I
1e
I
5f7
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
Dataset#order_prepend
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
601
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
57
should include an ORDER BY clause in the select statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
4
name
x
13
order_prepend
x
3
sql
x
6
should
s
32
SELECT * FROM test ORDER BY name
x
2
==
p
3
I
0
I
605
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
50
should add to the beginning of a previous ordering
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
7
1
49
2
1
45
3
4
7
5
49
6
1
49
7
1
49
8
0
49
9
0
7
10
64
83
11
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
x
4
name
x
5
order
x
6
Sequel
n
x
5
stamp
x
4
desc
x
13
order_prepend
x
3
sql
x
6
should
s
44
SELECT * FROM test ORDER BY stamp DESC, name
x
2
==
p
3
I
0
I
609
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should accept a block that yields a virtual row
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
39
0
7
1
49
2
1
56
3
50
4
0
49
5
0
49
6
0
7
7
64
83
8
15
39
0
7
1
7
9
49
2
2
7
10
7
11
56
12
50
4
2
49
5
0
49
6
0
7
13
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
1
a
x
5
order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
1
b
p
3
I
0
I
60d
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
13
order_prepend
x
3
sql
x
6
should
s
32
SELECT * FROM test ORDER BY b, a
x
2
==
x
1
b
x
1
c
x
1
d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
5
79
80
47
49
1
2
35
2
11
I
5
I
0
I
0
I
0
I
-2
p
2
x
1
e
x
1
f
p
3
I
0
I
60e
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
SELECT * FROM test ORDER BY c, d, e, f(1, 2), a, b
p
5
I
0
I
60d
I
18
I
60e
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
600
I
8
I
604
I
13
I
608
I
1e
I
60c
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
Dataset#reverse_order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
96
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
19
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
614
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
32
should use DESC as default order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
4
name
x
13
reverse_order
x
3
sql
x
6
should
s
37
SELECT * FROM test ORDER BY name DESC
x
2
==
p
3
I
0
I
618
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
29
should invert the order given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
39
0
45
1
2
7
3
49
4
1
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
6
Sequel
n
x
4
name
x
4
desc
x
13
reverse_order
x
3
sql
x
6
should
s
36
SELECT * FROM test ORDER BY name ASC
x
2
==
p
3
I
0
I
61c
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should invert the order for ASC expressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
39
0
45
1
2
7
3
49
4
1
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
6
Sequel
n
x
4
name
x
3
asc
x
13
reverse_order
x
3
sql
x
6
should
s
37
SELECT * FROM test ORDER BY name DESC
x
2
==
p
3
I
0
I
620
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should accept multiple arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
7
1
45
2
3
7
4
49
5
1
49
6
2
49
7
0
49
8
0
7
9
64
83
10
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
4
name
x
6
Sequel
n
x
5
price
x
4
desc
x
13
reverse_order
x
3
sql
x
6
should
s
48
SELECT * FROM test ORDER BY name DESC, price ASC
x
2
==
p
3
I
0
I
624
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should handles NULLS ordering correctly when reversing
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
65
39
0
45
1
2
7
3
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
49
9
2
45
1
10
7
11
44
43
4
79
49
5
1
13
7
6
7
12
49
8
2
15
49
13
2
49
14
2
49
15
0
49
16
0
7
17
64
83
18
11
I
9
I
0
I
0
I
0
I
-2
p
19
x
8
@dataset
x
6
Sequel
n
x
4
name
x
4
Hash
x
16
new_from_literal
x
5
nulls
x
5
first
x
3
[]=
x
3
asc
n
x
5
price
x
4
last
x
4
desc
x
13
reverse_order
x
3
sql
x
6
should
s
71
SELECT * FROM test ORDER BY name DESC NULLS LAST, price ASC NULLS FIRST
x
2
==
p
3
I
0
I
628
I
41
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
60
should reverse a previous ordering if no arguments are given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
7
1
49
2
1
49
3
0
49
4
0
49
5
0
7
6
64
83
7
15
39
0
45
8
9
7
10
49
11
1
7
12
49
2
2
49
3
0
49
4
0
49
5
0
7
13
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
4
name
x
5
order
x
13
reverse_order
x
3
sql
x
6
should
s
37
SELECT * FROM test ORDER BY name DESC
x
2
==
x
6
Sequel
n
x
6
clumsy
x
4
desc
x
4
fool
s
49
SELECT * FROM test ORDER BY clumsy ASC, fool DESC
p
5
I
0
I
62c
I
16
I
62d
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
62
should return an unordered dataset for a dataset with no order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
49
1
0
49
2
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
9
unordered
x
13
reverse_order
x
3
sql
x
6
should
s
18
SELECT * FROM test
x
2
==
p
3
I
0
I
631
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
26
should have #reverse alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
49
2
1
49
3
0
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
4
name
x
5
order
x
7
reverse
x
3
sql
x
6
should
s
37
SELECT * FROM test ORDER BY name DESC
x
2
==
p
3
I
0
I
635
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
19
I
0
I
613
I
8
I
617
I
13
I
61b
I
1e
I
61f
I
29
I
623
I
34
I
627
I
3f
I
62b
I
4a
I
630
I
55
I
634
I
60
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
13
Dataset#limit
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
96
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
19
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
63b
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
53
should include a LIMIT clause in the select statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
4
10
49
1
1
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
5
limit
x
3
sql
x
6
should
s
27
SELECT * FROM test LIMIT 10
x
2
==
p
3
I
0
I
63f
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
20
should accept ranges
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
55
39
0
44
43
1
4
3
4
7
49
2
2
49
3
1
49
4
0
49
5
0
7
6
64
83
7
15
39
0
44
43
1
4
3
4
7
2
49
2
3
49
3
1
49
4
0
49
5
0
7
8
64
83
7
11
I
6
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
5
Range
x
3
new
x
5
limit
x
3
sql
x
6
should
s
35
SELECT * FROM test LIMIT 5 OFFSET 3
x
2
==
s
35
SELECT * FROM test LIMIT 4 OFFSET 3
p
5
I
0
I
643
I
1b
I
644
I
37
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should include an offset if a second argument is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
4
6
4
10
49
1
2
49
2
0
49
3
0
7
4
64
83
5
11
I
4
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
5
limit
x
3
sql
x
6
should
s
36
SELECT * FROM test LIMIT 6 OFFSET 10
x
2
==
p
3
I
0
I
648
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
42
should convert regular strings to integers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
39
0
7
1
64
7
2
64
49
3
2
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
s
1
6
s
7
a() - 1
x
5
limit
x
3
sql
x
6
should
s
35
SELECT * FROM test LIMIT 6 OFFSET 0
x
2
==
p
3
I
0
I
64c
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
46
should not convert literal strings to integers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
39
0
45
1
2
7
3
64
49
4
1
45
1
5
7
6
64
49
4
1
49
7
2
49
8
0
49
9
0
7
10
64
83
11
11
I
5
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
x
6
Sequel
n
s
1
6
x
3
lit
n
s
7
a() - 1
x
5
limit
x
3
sql
x
6
should
s
41
SELECT * FROM test LIMIT 6 OFFSET a() - 1
x
2
==
p
3
I
0
I
650
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should not convert other objects
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
4
6
45
1
2
7
3
49
4
1
79
82
5
49
6
2
49
7
0
49
8
0
7
9
64
83
10
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
6
Sequel
n
x
1
a
x
8
function
x
1
-
x
5
limit
x
3
sql
x
6
should
s
43
SELECT * FROM test LIMIT 6 OFFSET (a() - 1)
x
2
==
p
3
I
0
I
654
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should work with fixed sql datasets
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
39
0
49
1
0
7
2
7
3
64
13
18
3
49
4
2
15
15
39
0
4
6
4
10
49
5
2
49
2
0
49
6
0
7
7
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
4
opts
x
3
sql
s
18
select * from cccc
x
3
[]=
x
5
limit
x
6
should
s
58
SELECT * FROM (select * from cccc) AS t1 LIMIT 6 OFFSET 10
x
2
==
p
5
I
0
I
658
I
12
I
659
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should raise an error if an invalid limit or offset is used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
126
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
15
5
56
9
47
50
1
0
5
45
2
10
43
4
47
49
5
1
49
11
1
15
5
56
12
47
50
1
0
5
45
2
13
43
4
47
49
5
1
49
6
1
15
5
56
14
47
50
1
0
5
45
2
15
43
4
47
49
5
1
49
11
1
15
5
56
16
47
50
1
0
5
45
2
17
43
4
47
49
5
1
49
11
1
11
I
4
I
0
I
0
I
0
I
-2
p
18
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
39
0
77
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
5
limit
p
3
I
0
I
65d
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
39
0
78
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
5
limit
p
3
I
0
I
65e
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
39
0
79
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
5
limit
p
3
I
0
I
65f
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
x
10
should_not
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
79
77
49
1
2
11
I
4
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
5
limit
p
3
I
0
I
660
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
79
78
49
1
2
11
I
4
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
5
limit
p
3
I
0
I
661
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
79
79
49
1
2
11
I
4
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
5
limit
p
3
I
0
I
662
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
13
I
0
I
65d
I
15
I
65e
I
2a
I
65f
I
3f
I
660
I
54
I
661
I
69
I
662
I
7e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
19
I
0
I
63a
I
8
I
63e
I
13
I
642
I
1e
I
647
I
29
I
64b
I
34
I
64f
I
3f
I
653
I
4a
I
657
I
55
I
65c
I
60
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
13
Dataset#naked
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
46
should returned clone dataset without row_proc
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
76
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
19
0
15
20
0
45
6
7
56
8
50
3
0
13
18
2
49
9
1
15
15
20
0
49
10
0
49
11
0
5
48
12
49
13
1
15
20
0
49
11
0
5
48
12
49
14
1
11
I
5
I
1
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
Proc
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
57
19
0
15
20
0
11
I
3
I
1
I
1
I
1
n
p
0
p
3
I
0
I
669
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
9
row_proc=
x
5
naked
x
8
row_proc
x
6
be_nil
x
6
should
x
10
should_not
p
9
I
0
I
668
I
1f
I
669
I
31
I
66a
I
40
I
66b
I
4c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
d
x
7
specify
p
3
I
0
I
667
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
14
Dataset#naked!
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
35
should remove any existing row_proc
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
76
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
19
0
15
20
0
45
6
7
56
8
50
3
0
13
18
2
49
9
1
15
15
20
0
49
10
0
49
11
0
5
48
12
49
13
1
15
20
0
49
11
0
5
48
12
49
13
1
11
I
5
I
1
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
Proc
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
57
19
0
15
20
0
11
I
3
I
1
I
1
I
1
n
p
0
p
3
I
0
I
672
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
9
row_proc=
x
6
naked!
x
8
row_proc
x
6
be_nil
x
6
should
p
9
I
0
I
671
I
1f
I
672
I
31
I
673
I
40
I
674
I
4c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
d
x
7
specify
p
3
I
0
I
670
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
Dataset#qualified_column_name
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
p
3
I
0
I
67a
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
53
should return the literal value if not given a symbol
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
83
39
0
39
0
7
1
7
2
64
7
3
49
4
3
49
5
1
49
6
0
7
7
64
83
8
15
39
0
39
0
7
1
4
3
7
3
49
4
3
49
5
1
49
6
0
7
9
64
83
8
15
39
0
39
0
7
1
45
10
11
7
12
64
49
13
1
7
3
49
4
3
49
5
1
49
6
0
7
12
64
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
21
qualified_column_name
s
6
ccc__b
x
5
items
x
4
send
x
7
literal
x
6
should
s
8
'ccc__b'
x
2
==
s
1
3
x
6
Sequel
n
s
1
a
x
3
lit
p
7
I
0
I
67e
I
1a
I
67f
I
33
I
680
I
53
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
85
should qualify the column with the supplied table name if given an unqualified symbol
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
39
0
39
0
7
1
7
2
7
3
49
4
3
49
5
1
49
6
0
7
7
64
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
21
qualified_column_name
x
2
b1
x
5
items
x
4
send
x
7
literal
x
6
should
s
8
items.b1
x
2
==
p
3
I
0
I
684
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
74
should not changed the qualifed column's table if given a qualified symbol
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
39
0
39
0
7
1
7
2
7
3
49
4
3
49
5
1
49
6
0
7
7
64
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
21
qualified_column_name
x
6
ccc__b
x
5
items
x
4
send
x
7
literal
x
6
should
s
5
ccc.b
x
2
==
p
3
I
0
I
688
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should handle an aliased identifier
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
39
0
7
1
7
2
45
3
4
7
5
49
6
1
7
7
49
8
1
49
9
3
49
10
1
49
11
0
7
12
64
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
8
@dataset
x
21
qualified_column_name
x
3
ccc
x
6
Sequel
n
x
5
items
x
4
expr
x
1
i
x
2
as
x
4
send
x
7
literal
x
6
should
s
5
i.ccc
x
2
==
p
3
I
0
I
68c
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
11
I
0
I
679
I
8
I
67d
I
13
I
683
I
1e
I
687
I
29
I
68b
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
11
Dataset#map
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
15
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
103
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
7
5
79
49
6
2
15
13
7
7
80
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
5
49
6
2
15
13
7
7
4
6
49
6
2
15
35
3
49
6
2
15
49
8
1
7
9
49
10
1
38
11
11
I
b
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
a
x
3
[]=
x
1
b
x
4
mock
x
5
items
x
2
[]
x
2
@d
p
3
I
0
I
692
I
67
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
62
should provide the usual functionality if no argument is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
56
1
50
2
0
49
3
0
4
3
4
7
4
11
35
3
83
4
11
I
5
I
0
I
0
I
0
I
-2
p
5
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
57
19
0
15
20
0
7
0
49
1
1
20
0
7
2
49
1
1
81
3
11
I
5
I
1
I
1
I
1
n
p
4
x
1
a
x
2
[]
x
1
b
x
1
+
p
3
I
0
I
696
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
n
x
3
map
x
6
should
x
2
==
p
3
I
0
I
696
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
55
should map using #[column name] if column name is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
7
1
49
2
1
49
3
0
79
4
3
4
5
35
3
83
4
11
I
5
I
0
I
0
I
0
I
-2
p
5
x
2
@d
x
1
a
x
3
map
x
6
should
x
2
==
p
3
I
0
I
69a
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
73
should support multiple column names if an array of column names is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
39
0
7
1
7
2
35
2
49
3
1
49
4
0
79
80
35
2
4
3
4
4
35
2
4
5
4
6
35
2
35
3
83
5
11
I
6
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
1
a
x
1
b
x
3
map
x
6
should
x
2
==
p
3
I
0
I
69e
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
should not call the row_proc if an argument is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
72
39
0
5
56
1
47
50
2
0
13
18
2
49
3
1
15
15
39
0
7
4
49
5
1
49
6
0
79
4
3
4
5
35
3
83
7
15
39
0
7
4
7
8
35
2
49
5
1
49
6
0
79
80
35
2
4
3
4
4
35
2
4
5
4
6
35
2
35
3
83
7
11
I
6
I
0
I
0
I
0
I
-2
p
9
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
57
19
0
15
44
43
0
78
49
1
1
19
1
15
20
0
49
2
0
56
3
50
4
0
15
20
1
11
I
5
I
2
I
1
I
1
n
p
5
x
4
Hash
x
16
new_from_literal
x
4
keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
57
19
0
15
21
1
1
20
0
21
1
0
20
0
49
0
1
80
49
1
1
13
18
3
49
2
2
15
11
I
6
I
1
I
1
I
1
n
p
3
x
2
[]
x
1
*
x
3
[]=
p
3
I
0
I
6a2
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
k
x
4
each
p
3
I
0
I
6a2
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
r
x
1
h
x
4
proc
x
9
row_proc=
x
1
a
x
3
map
x
6
should
x
2
==
x
1
b
p
7
I
0
I
6a2
I
11
I
6a3
I
25
I
6a4
I
48
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
should call the row_proc if no argument is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
5
56
1
47
50
2
0
13
18
2
49
3
1
15
15
39
0
56
4
50
5
0
49
6
0
4
6
4
14
4
22
35
3
83
7
11
I
5
I
0
I
0
I
0
I
-2
p
8
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
57
19
0
15
44
43
0
78
49
1
1
19
1
15
20
0
49
2
0
56
3
50
4
0
15
20
1
11
I
5
I
2
I
1
I
1
n
p
5
x
4
Hash
x
16
new_from_literal
x
4
keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
57
19
0
15
21
1
1
20
0
21
1
0
20
0
49
0
1
80
49
1
1
13
18
3
49
2
2
15
11
I
6
I
1
I
1
I
1
n
p
3
x
2
[]
x
1
*
x
3
[]=
p
3
I
0
I
6a8
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
k
x
4
each
p
3
I
0
I
6a8
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
r
x
1
h
x
4
proc
x
9
row_proc=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
57
19
0
15
20
0
7
0
49
1
1
20
0
7
2
49
1
1
81
3
11
I
5
I
1
I
1
I
1
n
p
4
x
1
a
x
2
[]
x
1
b
x
1
+
p
3
I
0
I
6a9
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
n
x
3
map
x
6
should
x
2
==
p
5
I
0
I
6a8
I
11
I
6a9
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
61
should return the complete dataset values if nothing is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
89
39
0
49
1
0
49
2
0
49
3
0
44
43
4
80
49
5
1
13
7
6
79
49
7
2
15
13
7
8
80
49
7
2
15
44
43
4
80
49
5
1
13
7
6
4
3
49
7
2
15
13
7
8
4
4
49
7
2
15
44
43
4
80
49
5
1
13
7
6
4
5
49
7
2
15
13
7
8
4
6
49
7
2
15
35
3
83
9
11
I
8
I
0
I
0
I
0
I
-2
p
10
x
2
@d
x
3
map
x
4
to_a
x
6
should
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
1
b
x
2
==
p
3
I
0
I
6ad
I
59
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
15
I
0
I
691
I
8
I
695
I
13
I
699
I
1e
I
69d
I
29
I
6a1
I
34
I
6a7
I
3f
I
6ac
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
15
Dataset#to_hash
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
103
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
7
5
79
49
6
2
15
13
7
7
80
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
5
49
6
2
15
13
7
7
4
6
49
6
2
15
35
3
49
6
2
15
49
8
1
7
9
49
10
1
38
11
11
I
b
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
a
x
3
[]=
x
1
b
x
4
mock
x
5
items
x
2
[]
x
2
@d
p
3
I
0
I
6b3
I
67
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
74
should provide a hash with the first column as key and the second as value
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
96
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
4
3
49
6
1
13
79
80
49
7
2
15
13
4
3
4
4
49
7
2
15
13
4
5
4
6
49
7
2
15
83
8
15
39
0
7
2
7
1
49
3
2
49
4
0
44
43
5
4
3
49
6
1
13
80
79
49
7
2
15
13
4
4
4
3
49
7
2
15
13
4
6
4
5
49
7
2
15
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
1
a
x
1
b
x
7
to_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
p
5
I
0
I
6b7
I
30
I
6b8
I
60
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
115
should provide a hash with the first column as key and the entire hash as value if the value column is blank or nil
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
228
39
0
7
1
49
2
1
49
3
0
44
43
4
4
3
49
5
1
13
79
44
43
4
80
49
5
1
13
7
1
79
49
6
2
15
13
7
7
80
49
6
2
15
49
6
2
15
13
4
3
44
43
4
80
49
5
1
13
7
1
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
49
6
2
15
13
4
5
44
43
4
80
49
5
1
13
7
1
4
5
49
6
2
15
13
7
7
4
6
49
6
2
15
49
6
2
15
83
8
15
39
0
7
7
49
2
1
49
3
0
44
43
4
4
3
49
5
1
13
80
44
43
4
80
49
5
1
13
7
1
79
49
6
2
15
13
7
7
80
49
6
2
15
49
6
2
15
13
4
4
44
43
4
80
49
5
1
13
7
1
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
49
6
2
15
13
4
6
44
43
4
80
49
5
1
13
7
1
4
5
49
6
2
15
13
7
7
4
6
49
6
2
15
49
6
2
15
83
8
11
I
9
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
1
a
x
7
to_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
1
b
x
2
==
p
5
I
0
I
6bc
I
72
I
6bd
I
e4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
71
should support using an array of columns as either the key or the value
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
333
39
0
7
1
7
2
35
2
7
2
49
3
2
49
4
0
44
43
5
4
3
49
6
1
13
79
80
35
2
80
49
7
2
15
13
4
3
4
4
35
2
4
4
49
7
2
15
13
4
5
4
6
35
2
4
6
49
7
2
15
83
8
15
39
0
7
2
7
1
7
2
35
2
49
3
2
49
4
0
44
43
5
4
3
49
6
1
13
80
79
80
35
2
49
7
2
15
13
4
4
4
3
4
4
35
2
49
7
2
15
13
4
6
4
5
4
6
35
2
49
7
2
15
83
8
15
39
0
7
2
7
1
35
2
7
1
7
2
35
2
49
3
2
49
4
0
44
43
5
4
3
49
6
1
13
80
79
35
2
79
80
35
2
49
7
2
15
13
4
4
4
3
35
2
4
3
4
4
35
2
49
7
2
15
13
4
6
4
5
35
2
4
5
4
6
35
2
49
7
2
15
83
8
15
39
0
7
1
7
2
35
2
49
3
1
49
4
0
44
43
5
4
3
49
6
1
13
79
80
35
2
44
43
5
80
49
6
1
13
7
1
79
49
7
2
15
13
7
2
80
49
7
2
15
49
7
2
15
13
4
3
4
4
35
2
44
43
5
80
49
6
1
13
7
1
4
3
49
7
2
15
13
7
2
4
4
49
7
2
15
49
7
2
15
13
4
5
4
6
35
2
44
43
5
80
49
6
1
13
7
1
4
5
49
7
2
15
13
7
2
4
6
49
7
2
15
49
7
2
15
83
8
11
I
9
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
1
a
x
1
b
x
7
to_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
p
9
I
0
I
6c1
I
3f
I
6c2
I
7e
I
6c3
I
cc
I
6c4
I
14d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
should not call the row_proc if two arguments are given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
317
39
0
5
56
1
47
50
2
0
13
18
2
49
3
1
15
15
39
0
7
4
7
5
49
6
2
49
7
0
44
43
8
4
3
49
9
1
13
79
80
49
10
2
15
13
4
3
4
4
49
10
2
15
13
4
5
4
6
49
10
2
15
83
11
15
39
0
7
5
7
4
49
6
2
49
7
0
44
43
8
4
3
49
9
1
13
80
79
49
10
2
15
13
4
4
4
3
49
10
2
15
13
4
6
4
5
49
10
2
15
83
11
15
39
0
7
4
7
5
35
2
7
5
49
6
2
49
7
0
44
43
8
4
3
49
9
1
13
79
80
35
2
80
49
10
2
15
13
4
3
4
4
35
2
4
4
49
10
2
15
13
4
5
4
6
35
2
4
6
49
10
2
15
83
11
15
39
0
7
5
7
4
7
5
35
2
49
6
2
49
7
0
44
43
8
4
3
49
9
1
13
80
79
80
35
2
49
10
2
15
13
4
4
4
3
4
4
35
2
49
10
2
15
13
4
6
4
5
4
6
35
2
49
10
2
15
83
11
15
39
0
7
5
7
4
35
2
7
4
7
5
35
2
49
6
2
49
7
0
44
43
8
4
3
49
9
1
13
80
79
35
2
79
80
35
2
49
10
2
15
13
4
4
4
3
35
2
4
3
4
4
35
2
49
10
2
15
13
4
6
4
5
35
2
4
5
4
6
35
2
49
10
2
15
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
57
19
0
15
44
43
0
78
49
1
1
19
1
15
20
0
49
2
0
56
3
50
4
0
15
20
1
11
I
5
I
2
I
1
I
1
n
p
5
x
4
Hash
x
16
new_from_literal
x
4
keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
57
19
0
15
21
1
1
20
0
21
1
0
20
0
49
0
1
80
49
1
1
13
18
3
49
2
2
15
11
I
6
I
1
I
1
I
1
n
p
3
x
2
[]
x
1
*
x
3
[]=
p
3
I
0
I
6c8
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
k
x
4
each
p
3
I
0
I
6c8
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
r
x
1
h
x
4
proc
x
9
row_proc=
x
1
a
x
1
b
x
7
to_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
p
13
I
0
I
6c8
I
11
I
6c9
I
41
I
6ca
I
71
I
6cb
I
b0
I
6cc
I
ef
I
6cd
I
13d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should call the row_proc if only a single argument is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
379
39
0
5
56
1
47
50
2
0
13
18
2
49
3
1
15
15
39
0
7
4
49
5
1
49
6
0
44
43
7
4
3
49
8
1
13
80
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
4
49
9
2
15
49
9
2
15
13
4
6
44
43
7
80
49
8
1
13
7
4
4
6
49
9
2
15
13
7
10
4
8
49
9
2
15
49
9
2
15
13
4
10
44
43
7
80
49
8
1
13
7
4
4
10
49
9
2
15
13
7
10
4
12
49
9
2
15
49
9
2
15
83
11
15
39
0
7
10
49
5
1
49
6
0
44
43
7
4
3
49
8
1
13
4
4
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
4
49
9
2
15
49
9
2
15
13
4
8
44
43
7
80
49
8
1
13
7
4
4
6
49
9
2
15
13
7
10
4
8
49
9
2
15
49
9
2
15
13
4
12
44
43
7
80
49
8
1
13
7
4
4
10
49
9
2
15
13
7
10
4
12
49
9
2
15
49
9
2
15
83
11
15
39
0
7
4
7
10
35
2
49
5
1
49
6
0
44
43
7
4
3
49
8
1
13
80
4
4
35
2
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
4
49
9
2
15
49
9
2
15
13
4
6
4
8
35
2
44
43
7
80
49
8
1
13
7
4
4
6
49
9
2
15
13
7
10
4
8
49
9
2
15
49
9
2
15
13
4
10
4
12
35
2
44
43
7
80
49
8
1
13
7
4
4
10
49
9
2
15
13
7
10
4
12
49
9
2
15
49
9
2
15
83
11
11
I
9
I
0
I
0
I
0
I
-2
p
12
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
57
19
0
15
44
43
0
78
49
1
1
19
1
15
20
0
49
2
0
56
3
50
4
0
15
20
1
11
I
5
I
2
I
1
I
1
n
p
5
x
4
Hash
x
16
new_from_literal
x
4
keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
57
19
0
15
21
1
1
20
0
21
1
0
20
0
49
0
1
80
49
1
1
13
18
3
49
2
2
15
11
I
6
I
1
I
1
I
1
n
p
3
x
2
[]
x
1
*
x
3
[]=
p
3
I
0
I
6d1
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
k
x
4
each
p
3
I
0
I
6d1
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
r
x
1
h
x
4
proc
x
9
row_proc=
x
1
a
x
7
to_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
1
b
x
2
==
p
9
I
0
I
6d1
I
11
I
6d2
I
84
I
6d3
I
f8
I
6d4
I
17b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
13
I
0
I
6b2
I
8
I
6b6
I
13
I
6bb
I
1e
I
6c0
I
29
I
6c7
I
34
I
6d0
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
22
Dataset#to_hash_groups
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
127
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
7
5
79
49
6
2
15
13
7
7
80
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
44
43
2
80
49
3
1
13
7
5
79
49
6
2
15
13
7
7
4
6
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
7
49
6
2
15
13
7
7
4
4
49
6
2
15
35
4
49
6
2
15
49
8
1
7
9
49
10
1
38
11
11
I
c
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
a
x
3
[]=
x
1
b
x
4
mock
x
5
items
x
2
[]
x
2
@d
p
3
I
0
I
6da
I
7f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
74
should provide a hash with the first column as key and the second as value
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
111
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
4
3
49
6
1
13
79
80
4
6
35
2
49
7
2
15
13
4
3
4
4
35
1
49
7
2
15
13
4
7
4
4
35
1
49
7
2
15
83
8
15
39
0
7
2
7
1
49
3
2
49
4
0
44
43
5
4
3
49
6
1
13
80
79
35
1
49
7
2
15
13
4
4
4
3
4
7
35
2
49
7
2
15
13
4
6
79
35
1
49
7
2
15
83
8
11
I
7
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
1
a
x
1
b
x
14
to_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
p
5
I
0
I
6de
I
38
I
6df
I
6f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
115
should provide a hash with the first column as key and the entire hash as value if the value column is blank or nil
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
288
39
0
7
1
49
2
1
49
3
0
44
43
4
4
3
49
5
1
13
79
44
43
4
80
49
5
1
13
7
1
79
49
6
2
15
13
7
7
80
49
6
2
15
44
43
4
80
49
5
1
13
7
1
79
49
6
2
15
13
7
7
4
6
49
6
2
15
35
2
49
6
2
15
13
4
3
44
43
4
80
49
5
1
13
7
1
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
35
1
49
6
2
15
13
4
7
44
43
4
80
49
5
1
13
7
1
4
7
49
6
2
15
13
7
7
4
4
49
6
2
15
35
1
49
6
2
15
83
8
15
39
0
7
7
49
2
1
49
3
0
44
43
4
4
3
49
5
1
13
80
44
43
4
80
49
5
1
13
7
1
79
49
6
2
15
13
7
7
80
49
6
2
15
35
1
49
6
2
15
13
4
4
44
43
4
80
49
5
1
13
7
1
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
44
43
4
80
49
5
1
13
7
1
4
7
49
6
2
15
13
7
7
4
4
49
6
2
15
35
2
49
6
2
15
13
4
6
44
43
4
80
49
5
1
13
7
1
79
49
6
2
15
13
7
7
4
6
49
6
2
15
35
1
49
6
2
15
83
8
11
I
a
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
1
a
x
14
to_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
1
b
x
2
==
p
5
I
0
I
6e3
I
90
I
6e4
I
120
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
71
should support using an array of columns as either the key or the value
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
429
39
0
7
1
7
2
35
2
7
2
49
3
2
49
4
0
44
43
5
4
4
49
6
1
13
79
80
35
2
80
35
1
49
7
2
15
13
4
3
4
4
35
2
4
4
35
1
49
7
2
15
13
79
4
6
35
2
4
6
35
1
49
7
2
15
13
4
7
4
4
35
2
4
4
35
1
49
7
2
15
83
8
15
39
0
7
2
7
1
7
2
35
2
49
3
2
49
4
0
44
43
5
4
3
49
6
1
13
80
79
80
35
2
35
1
49
7
2
15
13
4
4
4
3
4
4
35
2
4
7
4
4
35
2
35
2
49
7
2
15
13
4
6
79
4
6
35
2
35
1
49
7
2
15
83
8
15
39
0
7
2
7
1
35
2
7
1
7
2
35
2
49
3
2
49
4
0
44
43
5
4
4
49
6
1
13
80
79
35
2
79
80
35
2
35
1
49
7
2
15
13
4
4
4
3
35
2
4
3
4
4
35
2
35
1
49
7
2
15
13
4
6
79
35
2
79
4
6
35
2
35
1
49
7
2
15
13
4
4
4
7
35
2
4
7
4
4
35
2
35
1
49
7
2
15
83
8
15
39
0
7
1
7
2
35
2
49
3
1
49
4
0
44
43
5
4
4
49
6
1
13
79
80
35
2
44
43
5
80
49
6
1
13
7
1
79
49
7
2
15
13
7
2
80
49
7
2
15
35
1
49
7
2
15
13
4
3
4
4
35
2
44
43
5
80
49
6
1
13
7
1
4
3
49
7
2
15
13
7
2
4
4
49
7
2
15
35
1
49
7
2
15
13
79
4
6
35
2
44
43
5
80
49
6
1
13
7
1
79
49
7
2
15
13
7
2
4
6
49
7
2
15
35
1
49
7
2
15
13
4
7
4
4
35
2
44
43
5
80
49
6
1
13
7
1
4
7
49
7
2
15
13
7
2
4
4
49
7
2
15
35
1
49
7
2
15
83
8
11
I
9
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
1
a
x
1
b
x
14
to_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
p
9
I
0
I
6e8
I
53
I
6e9
I
9d
I
6ea
I
102
I
6eb
I
1ad
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
should not call the row_proc if two arguments are given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
386
39
0
5
56
1
47
50
2
0
13
18
2
49
3
1
15
15
39
0
7
4
7
5
49
6
2
49
7
0
44
43
8
4
3
49
9
1
13
79
80
4
6
35
2
49
10
2
15
13
4
3
4
4
35
1
49
10
2
15
13
4
7
4
4
35
1
49
10
2
15
83
11
15
39
0
7
5
7
4
49
6
2
49
7
0
44
43
8
4
3
49
9
1
13
80
79
35
1
49
10
2
15
13
4
4
4
3
4
7
35
2
49
10
2
15
13
4
6
79
35
1
49
10
2
15
83
11
15
39
0
7
4
7
5
35
2
7
5
49
6
2
49
7
0
44
43
8
4
4
49
9
1
13
79
80
35
2
80
35
1
49
10
2
15
13
4
3
4
4
35
2
4
4
35
1
49
10
2
15
13
79
4
6
35
2
4
6
35
1
49
10
2
15
13
4
7
4
4
35
2
4
4
35
1
49
10
2
15
83
11
15
39
0
7
5
7
4
7
5
35
2
49
6
2
49
7
0
44
43
8
4
3
49
9
1
13
80
79
80
35
2
35
1
49
10
2
15
13
4
4
4
3
4
4
35
2
4
7
4
4
35
2
35
2
49
10
2
15
13
4
6
79
4
6
35
2
35
1
49
10
2
15
83
11
15
39
0
7
5
7
4
35
2
7
4
7
5
35
2
49
6
2
49
7
0
44
43
8
4
4
49
9
1
13
80
79
35
2
79
80
35
2
35
1
49
10
2
15
13
4
4
4
3
35
2
4
3
4
4
35
2
35
1
49
10
2
15
13
4
6
79
35
2
79
4
6
35
2
35
1
49
10
2
15
13
4
4
4
7
35
2
4
7
4
4
35
2
35
1
49
10
2
15
83
11
11
I
8
I
0
I
0
I
0
I
-2
p
12
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
57
19
0
15
44
43
0
78
49
1
1
19
1
15
20
0
49
2
0
56
3
50
4
0
15
20
1
11
I
5
I
2
I
1
I
1
n
p
5
x
4
Hash
x
16
new_from_literal
x
4
keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
57
19
0
15
21
1
1
20
0
21
1
0
20
0
49
0
1
80
49
1
1
13
18
3
49
2
2
15
11
I
6
I
1
I
1
I
1
n
p
3
x
2
[]
x
1
*
x
3
[]=
p
3
I
0
I
6ef
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
k
x
4
each
p
3
I
0
I
6ef
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
r
x
1
h
x
4
proc
x
9
row_proc=
x
1
a
x
1
b
x
14
to_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
p
13
I
0
I
6ef
I
11
I
6f0
I
49
I
6f1
I
80
I
6f2
I
d3
I
6f3
I
11d
I
6f4
I
182
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should call the row_proc if only a single argument is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
481
39
0
5
56
1
47
50
2
0
13
18
2
49
3
1
15
15
39
0
7
4
49
5
1
49
6
0
44
43
7
4
3
49
8
1
13
80
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
4
49
9
2
15
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
12
49
9
2
15
35
2
49
9
2
15
13
4
6
44
43
7
80
49
8
1
13
7
4
4
6
49
9
2
15
13
7
10
4
8
49
9
2
15
35
1
49
9
2
15
13
4
14
44
43
7
80
49
8
1
13
7
4
4
14
49
9
2
15
13
7
10
4
8
49
9
2
15
35
1
49
9
2
15
83
11
15
39
0
7
10
49
5
1
49
6
0
44
43
7
4
3
49
8
1
13
4
4
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
4
49
9
2
15
35
1
49
9
2
15
13
4
8
44
43
7
80
49
8
1
13
7
4
4
6
49
9
2
15
13
7
10
4
8
49
9
2
15
44
43
7
80
49
8
1
13
7
4
4
14
49
9
2
15
13
7
10
4
8
49
9
2
15
35
2
49
9
2
15
13
4
12
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
12
49
9
2
15
35
1
49
9
2
15
83
11
15
39
0
7
4
7
10
35
2
49
5
1
49
6
0
44
43
7
4
4
49
8
1
13
80
4
4
35
2
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
4
49
9
2
15
35
1
49
9
2
15
13
4
6
4
8
35
2
44
43
7
80
49
8
1
13
7
4
4
6
49
9
2
15
13
7
10
4
8
49
9
2
15
35
1
49
9
2
15
13
80
4
12
35
2
44
43
7
80
49
8
1
13
7
4
80
49
9
2
15
13
7
10
4
12
49
9
2
15
35
1
49
9
2
15
13
4
14
4
8
35
2
44
43
7
80
49
8
1
13
7
4
4
14
49
9
2
15
13
7
10
4
8
49
9
2
15
35
1
49
9
2
15
83
11
11
I
a
I
0
I
0
I
0
I
-2
p
12
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
57
19
0
15
44
43
0
78
49
1
1
19
1
15
20
0
49
2
0
56
3
50
4
0
15
20
1
11
I
5
I
2
I
1
I
1
n
p
5
x
4
Hash
x
16
new_from_literal
x
4
keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
57
19
0
15
21
1
1
20
0
21
1
0
20
0
49
0
1
80
49
1
1
13
18
3
49
2
2
15
11
I
6
I
1
I
1
I
1
n
p
3
x
2
[]
x
1
*
x
3
[]=
p
3
I
0
I
6f8
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
k
x
4
each
p
3
I
0
I
6f8
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
r
x
1
h
x
4
proc
x
9
row_proc=
x
1
a
x
14
to_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
1
b
x
2
==
p
9
I
0
I
6f8
I
11
I
6f9
I
a2
I
6fa
I
134
I
6fb
I
1e1
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
13
I
0
I
6d9
I
8
I
6dd
I
13
I
6e2
I
1e
I
6e7
I
29
I
6ee
I
34
I
6f7
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
16
Dataset#distinct
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
45
0
1
49
2
0
38
3
15
39
3
7
4
49
5
1
7
6
49
7
1
38
8
11
I
3
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
4
mock
x
3
@db
x
4
test
x
2
[]
x
4
name
x
6
select
x
8
@dataset
p
5
I
0
I
701
I
9
I
702
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
43
should include DISTINCT clause in statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
8
@dataset
x
8
distinct
x
3
sql
x
6
should
s
30
SELECT DISTINCT name FROM test
x
2
==
p
3
I
0
I
706
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
71
should raise an error if columns given and DISTINCT ON is not supported
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
5
56
0
47
50
1
0
5
48
2
49
3
1
15
5
56
4
47
50
1
0
5
45
5
6
43
7
47
49
2
1
49
8
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
8
@dataset
x
8
distinct
p
3
I
0
I
70a
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
10
should_not
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
7
1
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
8
@dataset
x
1
a
x
8
distinct
p
3
I
0
I
70b
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
Sequel
n
x
16
InvalidOperation
x
6
should
p
5
I
0
I
70a
I
e
I
70b
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
72
should use DISTINCT ON if columns are given and DISTINCT ON is supported
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
73
39
0
7
1
56
2
50
3
1
15
39
0
7
4
7
5
49
6
2
49
7
0
49
8
0
7
9
64
83
10
15
39
0
45
11
12
7
13
7
14
49
15
2
44
43
16
79
49
17
1
13
7
18
1
49
19
2
15
49
6
2
49
7
0
49
8
0
7
20
64
83
10
11
I
7
I
0
I
0
I
0
I
-2
p
21
x
8
@dataset
x
21
supports_distinct_on?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
70f
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
1
a
x
1
b
x
8
distinct
x
3
sql
x
6
should
s
40
SELECT DISTINCT ON (a, b) name FROM test
x
2
==
x
6
Sequel
n
x
5
stamp
x
7
integer
x
4
cast
x
4
Hash
x
16
new_from_literal
x
7
node_id
x
3
[]=
s
77
SELECT DISTINCT ON (CAST(stamp AS integer), (node_id IS NULL)) name FROM test
p
7
I
0
I
70f
I
a
I
710
I
1f
I
711
I
49
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should do a subselect for count
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
39
0
49
1
0
49
2
0
15
39
3
49
4
0
49
5
0
7
6
64
35
1
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
8
distinct
x
5
count
x
3
@db
x
4
sqls
x
6
should
s
76
SELECT COUNT(*) AS count FROM (SELECT DISTINCT name FROM test) AS t1 LIMIT 1
x
2
==
p
5
I
0
I
715
I
9
I
716
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
11
I
0
I
700
I
8
I
705
I
13
I
709
I
1e
I
70e
I
29
I
714
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
13
Dataset#count
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
129
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
23
1
15
5
7
24
64
56
25
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
26
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
53
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
79
49
3
1
13
7
5
79
49
6
2
15
49
6
2
15
49
7
1
38
8
15
39
8
7
9
49
10
1
7
5
49
11
1
38
12
11
I
9
I
0
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
5
count
x
3
[]=
x
4
mock
x
3
@db
x
4
test
x
4
from
x
7
columns
x
8
@dataset
p
5
I
0
I
71c
I
26
I
71d
I
35
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
26
should format SQL properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
39
0
49
1
0
49
2
0
79
83
3
15
39
4
49
5
0
49
2
0
7
6
64
35
1
83
3
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
42
SELECT COUNT(*) AS count FROM test LIMIT 1
p
5
I
0
I
721
I
c
I
722
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
25
should accept an argument
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
7
1
49
2
1
49
3
0
79
83
4
15
39
5
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
3
foo
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
44
SELECT COUNT(foo) AS count FROM test LIMIT 1
p
5
I
0
I
726
I
e
I
727
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should work with a nil argument
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
39
0
1
49
1
1
49
2
0
79
83
3
15
39
4
49
5
0
49
2
0
7
6
64
35
1
83
3
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
8
@dataset
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
45
SELECT COUNT(NULL) AS count FROM test LIMIT 1
p
5
I
0
I
72b
I
d
I
72c
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
should accept a virtual row block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
56
1
50
2
0
49
3
0
79
83
4
15
39
5
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
5
48
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
bar
x
3
foo
p
3
I
0
I
730
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
49
SELECT COUNT(foo(bar)) AS count FROM test LIMIT 1
p
5
I
0
I
730
I
e
I
731
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should raise an Error if given an argument and a block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
8
@dataset
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
5
48
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
bar
x
3
foo
p
3
I
0
I
735
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
count
p
3
I
0
I
735
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
735
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
45
should include the where clause if it's there
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
43
39
0
45
1
2
7
3
49
4
1
4
30
84
5
49
6
1
49
7
0
49
8
0
79
83
9
15
39
10
49
11
0
49
8
0
7
12
64
35
1
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
8
@dataset
x
6
Sequel
n
x
3
abc
x
4
expr
x
1
<
x
6
filter
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
59
SELECT COUNT(*) AS count FROM test WHERE (abc < 30) LIMIT 1
p
5
I
0
I
739
I
1b
I
73a
I
2b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
49
should count properly for datasets with fixed sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
46
39
0
49
1
0
7
2
7
3
64
13
18
3
49
4
2
15
15
39
0
49
5
0
49
6
0
79
83
7
15
39
8
49
9
0
49
6
0
7
10
64
35
1
83
7
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
8
@dataset
x
4
opts
x
3
sql
s
19
select abc from xyz
x
3
[]=
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
65
SELECT COUNT(*) AS count FROM (select abc from xyz) AS t1 LIMIT 1
p
7
I
0
I
73e
I
12
I
73f
I
1e
I
740
I
2e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
60
should count properly when using UNION, INTERSECT, or EXCEPT
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
99
39
0
39
0
49
1
1
49
2
0
49
3
0
79
83
4
15
39
5
49
6
0
49
3
0
7
7
64
35
1
83
4
15
39
0
39
0
49
8
1
49
2
0
49
3
0
79
83
4
15
39
5
49
6
0
49
3
0
7
9
64
35
1
83
4
15
39
0
39
0
49
10
1
49
2
0
49
3
0
79
83
4
15
39
5
49
6
0
49
3
0
7
11
64
35
1
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
x
5
union
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
89
SELECT COUNT(*) AS count FROM (SELECT * FROM test UNION SELECT * FROM test) AS t1 LIMIT 1
x
9
intersect
s
93
SELECT COUNT(*) AS count FROM (SELECT * FROM test INTERSECT SELECT * FROM test) AS t1 LIMIT 1
x
6
except
s
90
SELECT COUNT(*) AS count FROM (SELECT * FROM test EXCEPT SELECT * FROM test) AS t1 LIMIT 1
p
13
I
0
I
744
I
11
I
745
I
21
I
746
I
32
I
747
I
42
I
748
I
53
I
749
I
63
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should return limit if count is greater than it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
4
5
49
1
1
49
2
0
49
3
0
79
83
4
15
39
5
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
8
@dataset
x
5
limit
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
72
SELECT COUNT(*) AS count FROM (SELECT * FROM test LIMIT 5) AS t1 LIMIT 1
p
5
I
0
I
74d
I
11
I
74e
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should work on a graphed_dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
71
39
0
7
1
49
2
1
49
3
0
7
4
35
1
49
5
1
15
39
0
39
0
7
4
35
1
44
43
6
79
49
7
1
13
7
8
7
9
49
10
2
15
49
11
3
49
12
0
49
13
0
79
83
14
15
39
15
49
16
0
49
13
0
7
17
64
35
1
83
14
11
I
8
I
0
I
0
I
0
I
-2
p
18
x
8
@dataset
x
7
columns
x
14
should_receive
x
5
twice
x
1
a
x
10
and_return
x
4
Hash
x
16
new_from_literal
x
11
table_alias
x
5
test2
x
3
[]=
x
5
graph
x
5
count
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
82
SELECT COUNT(*) AS count FROM test LEFT OUTER JOIN test AS test2 USING (a) LIMIT 1
p
7
I
0
I
752
I
12
I
753
I
37
I
754
I
47
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
2
it
s
34
should not cache the columns value
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
73
39
0
7
1
49
2
1
7
3
49
4
1
19
0
15
20
0
49
4
0
49
5
0
7
3
35
1
83
6
15
20
0
49
7
0
49
5
0
79
83
6
15
39
8
49
9
0
49
5
0
7
10
64
35
1
83
6
15
20
0
49
4
0
49
5
0
7
3
35
1
83
6
11
I
4
I
1
I
0
I
0
I
-2
p
11
x
8
@dataset
x
4
blah
x
4
from
x
1
a
x
7
columns
x
6
should
x
2
==
x
5
count
x
3
@db
x
4
sqls
s
42
SELECT COUNT(*) AS count FROM blah LIMIT 1
p
11
I
0
I
758
I
f
I
759
I
1e
I
75a
I
2a
I
75b
I
3a
I
75c
I
49
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
p
25
I
0
I
71b
I
8
I
720
I
13
I
725
I
1e
I
72a
I
29
I
72f
I
34
I
734
I
3f
I
738
I
4a
I
73d
I
55
I
743
I
60
I
74c
I
6b
I
751
I
76
I
757
I
81
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
23
Dataset#group_and_count
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
85
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
17
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
3
@ds
p
3
I
0
I
762
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
26
should format SQL properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
4
name
x
15
group_and_count
x
3
sql
x
6
should
s
54
SELECT name, count(*) AS count FROM test GROUP BY name
x
2
==
p
3
I
0
I
766
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
43
should accept multiple columns for grouping
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
1
a
x
1
b
x
15
group_and_count
x
3
sql
x
6
should
s
54
SELECT a, b, count(*) AS count FROM test GROUP BY a, b
x
2
==
p
3
I
0
I
76a
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
77
should format column aliases in the select clause but not in the group clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
0
7
7
49
2
1
49
3
0
49
4
0
7
8
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
8
name___n
x
15
group_and_count
x
3
sql
x
6
should
s
59
SELECT name AS n, count(*) AS count FROM test GROUP BY name
x
2
==
x
7
name__n
s
58
SELECT name.n, count(*) AS count FROM test GROUP BY name.n
p
5
I
0
I
76e
I
13
I
76f
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
25
should handle identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
39
0
45
1
2
7
3
49
4
1
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
6
Sequel
n
x
8
name___n
x
10
identifier
x
15
group_and_count
x
3
sql
x
6
should
s
62
SELECT name___n, count(*) AS count FROM test GROUP BY name___n
x
2
==
p
3
I
0
I
773
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should handle literal strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
39
0
45
1
2
7
3
64
49
4
1
49
5
1
49
6
0
49
7
0
7
8
64
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
6
Sequel
n
s
4
name
x
3
lit
x
15
group_and_count
x
3
sql
x
6
should
s
54
SELECT name, count(*) AS count FROM test GROUP BY name
x
2
==
p
3
I
0
I
777
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
should handle aliased expressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
49
7
1
49
8
0
49
9
0
7
10
64
83
11
15
39
0
45
1
12
7
3
49
13
1
7
5
49
6
1
49
7
1
49
8
0
49
9
0
7
10
64
83
11
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
6
Sequel
n
x
4
name
x
4
expr
x
1
n
x
2
as
x
15
group_and_count
x
3
sql
x
6
should
s
59
SELECT name AS n, count(*) AS count FROM test GROUP BY name
x
2
==
n
x
10
identifier
p
5
I
0
I
77b
I
1e
I
77c
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should take a virtual row block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
59
39
0
56
1
50
2
0
49
3
0
49
4
0
7
5
64
83
6
15
39
0
56
7
50
2
0
49
3
0
49
4
0
7
8
64
83
6
15
39
0
7
9
56
10
50
2
1
49
3
0
49
4
0
7
11
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
48
0
79
85
1
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
7
type_id
x
1
>
x
1
t
x
2
as
p
3
I
0
I
780
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
15
group_and_count
x
3
sql
x
6
should
s
77
SELECT (type_id > 1) AS t, count(*) AS count FROM test GROUP BY (type_id > 1)
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
48
0
79
85
1
5
48
2
49
3
1
5
48
0
80
84
4
35
2
11
I
4
I
0
I
0
I
0
I
-2
p
5
x
7
type_id
x
1
>
x
1
t
x
2
as
x
1
<
p
3
I
0
I
781
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
107
SELECT (type_id > 1) AS t, (type_id < 2), count(*) AS count FROM test GROUP BY (type_id > 1), (type_id < 2)
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
7
type_id
x
1
>
p
3
I
0
I
782
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
82
SELECT foo, (type_id > 1), count(*) AS count FROM test GROUP BY foo, (type_id > 1)
p
7
I
0
I
780
I
13
I
781
I
26
I
782
I
3b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
17
I
0
I
761
I
8
I
765
I
13
I
769
I
1e
I
76d
I
29
I
772
I
34
I
776
I
3f
I
77a
I
4a
I
77f
I
55
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
14
Dataset#empty?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
50
should return true if records exist in the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
94
45
0
1
44
43
2
79
49
3
1
13
7
4
5
56
5
47
50
6
0
49
7
2
15
49
8
1
19
0
15
20
0
7
9
49
10
1
5
48
11
49
12
1
15
20
0
49
13
0
49
14
0
7
15
64
35
1
83
16
15
20
0
7
9
49
10
1
3
49
17
1
5
48
11
49
14
1
15
20
0
49
13
0
49
14
0
7
18
64
35
1
83
16
11
I
8
I
1
I
0
I
0
I
-2
p
19
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
57
19
0
15
20
0
7
0
13
70
9
24
15
44
43
1
7
2
78
49
3
2
6
0
49
4
1
9
32
1
8
46
44
43
5
79
49
6
1
13
79
79
49
7
2
15
11
I
6
I
1
I
1
I
1
n
p
8
n
x
6
Regexp
s
9
WHERE 'f'
x
3
new
x
2
=~
x
4
Hash
x
16
new_from_literal
x
3
[]=
p
5
I
0
I
788
I
2e
I
0
I
2f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
3
sql
x
4
proc
x
3
[]=
x
4
mock
x
4
test
x
4
from
x
8
be_empty
x
10
should_not
x
4
sqls
x
6
should
s
33
SELECT 1 AS one FROM test LIMIT 1
x
2
==
x
6
filter
s
43
SELECT 1 AS one FROM test WHERE 'f' LIMIT 1
p
11
I
0
I
788
I
1e
I
789
I
2c
I
78a
I
3c
I
78b
I
4e
I
78c
I
5e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
db
x
7
specify
p
3
I
0
I
787
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
26
Dataset#first_source_alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
38
6
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
3
@ds
p
3
I
0
I
792
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
48
should be the entire first source if not aliased
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
100
39
0
7
1
49
2
1
49
3
0
49
4
0
7
1
83
5
15
39
0
45
6
7
7
8
49
9
1
49
2
1
49
3
0
49
4
0
45
6
10
7
8
49
9
1
83
5
15
39
0
7
11
49
2
1
49
3
0
49
4
0
7
11
83
5
15
39
0
45
6
12
7
13
7
1
49
14
2
49
2
1
49
3
0
49
4
0
45
6
15
7
13
7
1
49
14
2
83
5
11
I
5
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
1
t
x
4
from
x
18
first_source_alias
x
6
should
x
2
==
x
6
Sequel
n
x
4
t__a
x
10
identifier
n
x
4
s__t
n
x
1
s
x
7
qualify
n
p
9
I
0
I
796
I
12
I
797
I
30
I
798
I
42
I
799
I
64
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
30
should be the alias if aliased
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
65
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
83
6
15
39
0
7
7
49
2
1
49
3
0
49
4
0
7
5
83
6
15
39
0
45
8
9
7
10
49
11
1
7
5
49
12
1
49
2
1
49
3
0
49
4
0
7
5
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
5
t___a
x
4
from
x
18
first_source_alias
x
6
should
x
1
a
x
2
==
x
8
s__t___a
x
6
Sequel
n
x
1
t
x
4
expr
x
2
as
p
7
I
0
I
79d
I
12
I
79e
I
24
I
79f
I
41
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
should be aliased as first_source
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
95
39
0
7
1
49
2
1
49
3
0
49
4
0
7
1
83
5
15
39
0
45
6
7
7
8
49
9
1
49
2
1
49
3
0
49
4
0
45
6
10
7
8
49
9
1
83
5
15
39
0
7
11
49
2
1
49
3
0
49
4
0
7
12
83
5
15
39
0
45
6
13
7
1
49
14
1
7
12
49
15
1
49
2
1
49
3
0
49
4
0
7
12
83
5
11
I
4
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
1
t
x
4
from
x
12
first_source
x
6
should
x
2
==
x
6
Sequel
n
x
4
t__a
x
10
identifier
n
x
8
s__t___a
x
1
a
n
x
4
expr
x
2
as
p
9
I
0
I
7a3
I
12
I
7a4
I
30
I
7a5
I
42
I
7a6
I
5f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should raise exception if table doesn't have a source
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
39
0
49
1
0
49
2
0
7
3
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
3
@ds
x
18
first_source_alias
x
6
should
x
1
t
x
2
==
p
3
I
0
I
7aa
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
7aa
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
11
I
0
I
791
I
8
I
795
I
13
I
79c
I
1e
I
7a2
I
29
I
7a9
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
26
Dataset#first_source_table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
38
6
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
3
@ds
p
3
I
0
I
7b0
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
48
should be the entire first source if not aliased
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
100
39
0
7
1
49
2
1
49
3
0
49
4
0
7
1
83
5
15
39
0
45
6
7
7
8
49
9
1
49
2
1
49
3
0
49
4
0
45
6
10
7
8
49
9
1
83
5
15
39
0
7
11
49
2
1
49
3
0
49
4
0
7
11
83
5
15
39
0
45
6
12
7
13
7
1
49
14
2
49
2
1
49
3
0
49
4
0
45
6
15
7
13
7
1
49
14
2
83
5
11
I
5
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
1
t
x
4
from
x
18
first_source_table
x
6
should
x
2
==
x
6
Sequel
n
x
4
t__a
x
10
identifier
n
x
4
s__t
n
x
1
s
x
7
qualify
n
p
9
I
0
I
7b4
I
12
I
7b5
I
30
I
7b6
I
42
I
7b7
I
64
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
39
should be the unaliased part if aliased
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
83
39
0
39
0
7
1
49
2
1
49
3
0
49
4
1
49
5
0
7
6
64
83
7
15
39
0
39
0
7
8
49
2
1
49
3
0
49
4
1
49
5
0
7
9
64
83
7
15
39
0
39
0
45
10
11
7
12
49
13
1
7
14
49
15
1
49
2
1
49
3
0
49
4
1
49
5
0
7
6
64
83
7
11
I
5
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
5
t___a
x
4
from
x
18
first_source_table
x
7
literal
x
6
should
s
1
t
x
2
==
x
8
s__t___a
s
3
s.t
x
6
Sequel
n
x
1
t
x
4
expr
x
1
a
x
2
as
p
7
I
0
I
7bb
I
18
I
7bc
I
30
I
7bd
I
53
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should raise exception if table doesn't have a source
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
39
0
49
1
0
49
2
0
7
3
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
3
@ds
x
18
first_source_table
x
6
should
x
1
t
x
2
==
p
3
I
0
I
7c1
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
7c1
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
7af
I
8
I
7b3
I
13
I
7ba
I
1e
I
7c0
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
17
Dataset#from_self
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
15
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
45
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
7
8
49
9
1
79
49
10
1
38
11
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
4
name
x
6
select
x
5
limit
x
3
@ds
p
3
I
0
I
7c7
I
2d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
29
should set up a default alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@ds
x
9
from_self
x
3
sql
x
6
should
s
51
SELECT * FROM (SELECT name FROM test LIMIT 1) AS t1
x
2
==
p
3
I
0
I
7cb
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
34
should modify only the new dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
49
1
0
7
2
49
3
1
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
9
from_self
x
5
bogus
x
6
select
x
3
sql
x
6
should
s
55
SELECT bogus FROM (SELECT name FROM test LIMIT 1) AS t1
x
2
==
p
3
I
0
I
7cf
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should use the user-specified alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
49
7
0
49
8
0
7
9
64
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
5
alias
x
9
some_name
x
3
[]=
x
9
from_self
x
3
sql
x
6
should
s
58
SELECT * FROM (SELECT name FROM test LIMIT 1) AS some_name
x
2
==
p
3
I
0
I
7d3
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
45
should use the user-specified alias for joins
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
7
44
43
1
79
49
2
1
13
7
3
7
8
49
5
2
15
49
9
2
49
10
0
49
11
0
7
12
64
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
5
alias
x
9
some_name
x
3
[]=
x
9
from_self
x
5
posts
x
4
name
x
10
inner_join
x
3
sql
x
6
should
s
109
SELECT * FROM (SELECT name FROM test LIMIT 1) AS some_name INNER JOIN posts ON (posts.alias = some_name.name)
x
2
==
p
5
I
0
I
7d7
I
30
I
7d8
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
49
should not remove non-SQL options such as :server
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
7
6
49
7
2
15
49
8
1
49
9
0
7
2
49
10
1
49
11
0
7
1
83
12
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
4
blah
x
6
server
x
4
Hash
x
16
new_from_literal
x
5
alias
x
9
some_name
x
3
[]=
x
9
from_self
x
4
opts
x
2
[]
x
6
should
x
2
==
p
3
I
0
I
7dc
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
89
should hoist WITH clauses in current dataset if dataset doesn't support WITH in subselect
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
133
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
19
0
15
20
0
7
6
56
7
50
8
1
15
20
0
7
9
56
10
50
8
1
15
20
0
7
11
49
12
1
7
11
20
0
7
13
49
12
1
49
14
2
49
15
0
49
16
0
49
17
0
7
18
64
83
19
15
20
0
7
11
7
20
49
12
2
7
11
20
0
7
13
49
12
1
49
14
2
7
20
20
0
7
21
49
12
1
49
14
2
49
15
0
49
16
0
49
17
0
7
22
64
83
19
11
I
6
I
1
I
0
I
0
I
-2
p
23
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
13
supports_cte?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
7e1
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
26
supports_cte_in_subselect?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
7e2
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
1
a
x
4
from
x
1
b
x
4
with
x
9
from_self
x
3
sql
x
6
should
s
65
WITH a AS (SELECT * FROM b) SELECT * FROM (SELECT * FROM a) AS t1
x
2
==
x
1
c
x
1
d
s
92
WITH a AS (SELECT * FROM b), c AS (SELECT * FROM d) SELECT * FROM (SELECT * FROM a, c) AS t1
p
11
I
0
I
7e0
I
1f
I
7e1
I
29
I
7e2
I
33
I
7e3
I
55
I
7e4
I
85
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
p
15
I
0
I
7c6
I
8
I
7ca
I
13
I
7ce
I
1e
I
7d2
I
29
I
7d6
I
34
I
7db
I
3f
I
7df
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
18
Dataset#join_table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
448
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
15
5
7
29
64
56
30
47
50
4
1
15
5
7
31
64
56
32
47
50
4
1
15
5
7
33
64
56
34
47
50
4
1
15
5
7
35
64
56
36
47
50
4
1
15
5
7
37
64
56
38
47
50
4
1
15
5
7
39
64
56
40
47
50
4
1
15
5
7
41
64
56
42
47
50
4
1
15
5
7
43
64
56
44
47
50
4
1
15
5
7
45
64
56
46
47
50
4
1
15
5
7
47
64
56
48
47
50
4
1
15
5
7
49
64
56
50
47
50
4
1
15
5
7
51
64
56
52
47
50
4
1
15
5
7
53
64
56
54
47
50
4
1
15
5
7
55
64
56
56
47
50
4
1
15
5
7
57
64
56
58
47
50
4
1
15
5
7
59
64
56
60
47
50
4
1
15
5
7
61
64
56
62
47
50
4
1
15
5
7
63
64
56
64
47
50
4
1
15
5
7
65
64
56
66
47
50
4
1
15
5
7
67
64
56
68
47
50
4
1
15
5
7
69
64
56
70
47
50
4
1
15
5
7
71
64
56
72
47
50
4
1
15
5
7
73
64
56
74
47
50
4
1
15
5
7
75
64
56
76
47
50
4
1
15
5
7
77
64
56
78
47
50
4
1
15
5
7
79
64
56
80
47
50
4
1
15
5
7
81
64
56
82
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
83
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
15
39
8
2
13
18
2
49
9
1
15
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
5
items
x
4
from
x
2
@d
x
18
quote_identifiers=
p
5
I
0
I
7ea
I
24
I
7eb
I
2f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
38
should format the JOIN clause properly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
39
0
7
1
7
2
44
43
3
79
49
4
1
13
7
5
7
6
49
7
2
15
49
8
3
49
9
0
49
10
0
7
11
64
83
12
11
I
8
I
0
I
0
I
0
I
-2
p
13
x
2
@d
x
10
left_outer
x
10
categories
x
4
Hash
x
16
new_from_literal
x
11
category_id
x
2
id
x
3
[]=
x
10
join_table
x
3
sql
x
6
should
s
97
SELECT * FROM "items" LEFT OUTER JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
2
==
p
3
I
0
I
7ef
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
63
should handle multiple conditions on the same join table column
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
7
2
7
3
7
4
35
2
7
3
44
43
5
78
4
100
49
6
2
35
2
35
2
49
7
3
49
8
0
49
9
0
7
10
64
83
11
11
I
9
I
0
I
0
I
0
I
-2
p
12
x
2
@d
x
10
left_outer
x
10
categories
x
11
category_id
x
2
id
x
5
Range
x
3
new
x
10
join_table
x
3
sql
x
6
should
s
177
SELECT * FROM "items" LEFT OUTER JOIN "categories" ON (("categories"."category_id" = "items"."id") AND ("categories"."category_id" >= 0) AND ("categories"."category_id" <= 100))
x
2
==
p
5
I
0
I
7f3
I
24
I
7f4
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
should include WHERE clause if applicable
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
45
1
2
7
3
49
4
1
4
100
84
5
49
6
1
7
7
7
8
44
43
9
79
49
10
1
13
7
11
7
12
49
13
2
15
49
14
3
49
15
0
49
16
0
7
17
64
83
18
11
I
8
I
0
I
0
I
0
I
-2
p
19
x
2
@d
x
6
Sequel
n
x
5
price
x
4
expr
x
1
<
x
6
filter
x
11
right_outer
x
10
categories
x
4
Hash
x
16
new_from_literal
x
11
category_id
x
2
id
x
3
[]=
x
10
join_table
x
3
sql
x
6
should
s
120
SELECT * FROM "items" RIGHT OUTER JOIN "categories" ON ("categories"."category_id" = "items"."id") WHERE ("price" < 100)
x
2
==
p
5
I
0
I
7f8
I
2e
I
7f9
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should include ORDER BY clause if applicable
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
49
2
1
7
3
7
4
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
3
49
11
0
49
12
0
7
13
64
83
14
11
I
8
I
0
I
0
I
0
I
-2
p
15
x
2
@d
x
5
stamp
x
5
order
x
10
full_outer
x
10
categories
x
4
Hash
x
16
new_from_literal
x
11
category_id
x
2
id
x
3
[]=
x
10
join_table
x
3
sql
x
6
should
s
114
SELECT * FROM "items" FULL OUTER JOIN "categories" ON ("categories"."category_id" = "items"."id") ORDER BY "stamp"
x
2
==
p
3
I
0
I
7fd
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should support multiple joins
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
39
0
7
1
7
2
44
43
3
79
49
4
1
13
7
5
7
6
49
7
2
15
49
8
3
7
9
7
10
44
43
3
79
49
4
1
13
7
11
7
12
49
7
2
15
49
8
3
49
13
0
49
14
0
7
15
64
83
16
11
I
8
I
0
I
0
I
0
I
-2
p
17
x
2
@d
x
5
inner
x
1
b
x
4
Hash
x
16
new_from_literal
x
8
items_id
x
2
id
x
3
[]=
x
10
join_table
x
10
left_outer
x
1
c
x
4
b_id
x
5
b__id
x
3
sql
x
6
should
s
118
SELECT * FROM "items" INNER JOIN "b" ON ("b"."items_id" = "items"."id") LEFT OUTER JOIN "c" ON ("c"."b_id" = "b"."id")
x
2
==
p
3
I
0
I
801
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should support arbitrary join types
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
39
0
7
1
7
2
44
43
3
79
49
4
1
13
7
5
7
6
49
7
2
15
49
8
3
49
9
0
49
10
0
7
11
64
83
12
11
I
8
I
0
I
0
I
0
I
-2
p
13
x
2
@d
x
5
magic
x
10
categories
x
4
Hash
x
16
new_from_literal
x
11
category_id
x
2
id
x
3
[]=
x
10
join_table
x
3
sql
x
6
should
s
92
SELECT * FROM "items" MAGIC JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
2
==
p
3
I
0
I
805
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should support many join methods
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
340
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
2
49
8
0
49
9
0
7
10
64
83
11
15
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
12
2
49
8
0
49
9
0
7
13
64
83
11
15
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
14
2
49
8
0
49
9
0
7
15
64
83
11
15
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
16
2
49
8
0
49
9
0
7
17
64
83
11
15
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
18
2
49
8
0
49
9
0
7
19
64
83
11
15
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
20
2
49
8
0
49
9
0
7
21
64
83
11
15
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
22
2
49
8
0
49
9
0
7
23
64
83
11
15
39
0
7
1
49
24
1
49
8
0
49
9
0
7
25
64
83
11
15
39
0
7
1
49
26
1
49
8
0
49
9
0
7
27
64
83
11
15
39
0
7
1
49
28
1
49
8
0
49
9
0
7
29
64
83
11
15
39
0
7
1
49
30
1
49
8
0
49
9
0
7
31
64
83
11
15
39
0
7
1
49
32
1
49
8
0
49
9
0
7
33
64
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
34
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
11
category_id
x
2
id
x
3
[]=
x
15
left_outer_join
x
3
sql
x
6
should
s
97
SELECT * FROM "items" LEFT OUTER JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
2
==
x
16
right_outer_join
s
98
SELECT * FROM "items" RIGHT OUTER JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
15
full_outer_join
s
97
SELECT * FROM "items" FULL OUTER JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
10
inner_join
s
92
SELECT * FROM "items" INNER JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
9
left_join
s
91
SELECT * FROM "items" LEFT JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
10
right_join
s
92
SELECT * FROM "items" RIGHT JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
9
full_join
s
91
SELECT * FROM "items" FULL JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
12
natural_join
s
47
SELECT * FROM "items" NATURAL JOIN "categories"
x
17
natural_left_join
s
52
SELECT * FROM "items" NATURAL LEFT JOIN "categories"
x
18
natural_right_join
s
53
SELECT * FROM "items" NATURAL RIGHT JOIN "categories"
x
17
natural_full_join
s
52
SELECT * FROM "items" NATURAL FULL JOIN "categories"
x
10
cross_join
s
45
SELECT * FROM "items" CROSS JOIN "categories"
p
25
I
0
I
809
I
23
I
80a
I
46
I
80b
I
69
I
80c
I
8c
I
80d
I
af
I
80e
I
d2
I
80f
I
f5
I
810
I
108
I
811
I
11b
I
812
I
12e
I
813
I
141
I
814
I
154
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
101
should raise an error if additional arguments are provided to join methods that don't take conditions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
95
5
56
0
47
50
1
0
5
45
2
3
47
49
4
1
49
5
1
15
5
56
6
47
50
1
0
5
45
2
7
47
49
4
1
49
5
1
15
5
56
8
47
50
1
0
5
45
2
9
47
49
4
1
49
5
1
15
5
56
10
47
50
1
0
5
45
2
11
47
49
4
1
49
5
1
15
5
56
12
47
50
1
0
5
45
2
13
47
49
4
1
49
5
1
11
I
4
I
0
I
0
I
0
I
-2
p
14
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
4
49
5
2
15
49
6
2
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
12
natural_join
p
3
I
0
I
818
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
13
ArgumentError
n
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
4
49
5
2
15
49
6
2
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
17
natural_left_join
p
3
I
0
I
819
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
4
49
5
2
15
49
6
2
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
18
natural_right_join
p
3
I
0
I
81a
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
4
49
5
2
15
49
6
2
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
17
natural_full_join
p
3
I
0
I
81b
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
4
49
5
2
15
49
6
2
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
10
cross_join
p
3
I
0
I
81c
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
11
I
0
I
818
I
13
I
819
I
26
I
81a
I
39
I
81b
I
4c
I
81c
I
5f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
81
should raise an error if blocks are provided to join methods that don't pass them
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
105
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
15
5
56
9
47
50
1
0
5
45
2
10
43
4
47
49
5
1
49
6
1
15
5
56
11
47
50
1
0
5
45
2
12
43
4
47
49
5
1
49
6
1
15
5
56
13
47
50
1
0
5
45
2
14
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
15
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
10
categories
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
820
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
12
natural_join
p
3
I
0
I
820
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
10
categories
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
821
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
natural_left_join
p
3
I
0
I
821
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
10
categories
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
822
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
18
natural_right_join
p
3
I
0
I
822
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
10
categories
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
823
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
natural_full_join
p
3
I
0
I
823
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
10
categories
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
824
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
cross_join
p
3
I
0
I
824
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
11
I
0
I
820
I
15
I
821
I
2a
I
822
I
3f
I
823
I
54
I
824
I
69
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
58
should default to a plain join if nil is used for the type
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
1
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
3
49
8
0
49
9
0
7
10
64
83
11
11
I
8
I
0
I
0
I
0
I
-2
p
12
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
11
category_id
x
2
id
x
3
[]=
x
10
join_table
x
3
sql
x
6
should
s
87
SELECT * FROM "items"  JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
2
==
p
3
I
0
I
828
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
should use an inner join for Dataset#join
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
2
49
8
0
49
9
0
7
10
64
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
11
category_id
x
2
id
x
3
[]=
x
4
join
x
3
sql
x
6
should
s
92
SELECT * FROM "items" INNER JOIN "categories" ON ("categories"."category_id" = "items"."id")
x
2
==
p
3
I
0
I
82c
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should support aliased tables using the deprecated argument
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
45
39
0
7
1
64
49
2
1
7
3
64
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
7
9
64
49
10
3
49
11
0
49
12
0
7
13
64
83
14
11
I
7
I
0
I
0
I
0
I
-2
p
15
x
2
@d
s
5
stats
x
4
from
s
7
players
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
s
1
p
x
4
join
x
3
sql
x
6
should
s
85
SELECT * FROM "stats" INNER JOIN "players" AS "p" ON ("p"."id" = "stats"."player_id")
x
2
==
p
3
I
0
I
830
I
2d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should support aliased tables using the :table_alias option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
58
39
0
7
1
64
49
2
1
7
3
64
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
44
43
4
79
49
5
1
13
7
9
7
10
49
8
2
15
49
11
3
49
12
0
49
13
0
7
14
64
83
15
11
I
8
I
0
I
0
I
0
I
-2
p
16
x
2
@d
s
5
stats
x
4
from
s
7
players
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
x
11
table_alias
x
1
p
x
4
join
x
3
sql
x
6
should
s
85
SELECT * FROM "stats" INNER JOIN "players" AS "p" ON ("p"."id" = "stats"."player_id")
x
2
==
p
3
I
0
I
834
I
3a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should support aliased tables using an implicit alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
7
1
64
49
2
1
45
3
4
7
5
49
6
1
7
7
49
8
1
44
43
9
79
49
10
1
13
7
11
7
12
49
13
2
15
49
14
2
49
15
0
49
16
0
7
17
64
83
18
11
I
7
I
0
I
0
I
0
I
-2
p
19
x
2
@d
s
5
stats
x
4
from
x
6
Sequel
n
x
7
players
x
4
expr
x
1
p
x
2
as
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
x
4
join
x
3
sql
x
6
should
s
85
SELECT * FROM "stats" INNER JOIN "players" AS "p" ON ("p"."id" = "stats"."player_id")
x
2
==
p
3
I
0
I
838
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
103
should support using an alias for the FROM when doing the first join with unqualified condition columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
56
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
7
7
8
44
43
1
79
49
2
1
13
7
9
7
10
49
5
2
15
49
11
3
49
12
0
49
13
0
7
14
64
83
15
11
I
8
I
0
I
0
I
0
I
-2
p
16
x
2
@d
x
4
Hash
x
16
new_from_literal
x
3
foo
x
1
f
x
3
[]=
x
4
from
x
5
inner
x
3
bar
x
2
id
x
6
bar_id
x
10
join_table
x
3
sql
x
6
should
s
74
SELECT * FROM "foo" AS "f" INNER JOIN "bar" ON ("bar"."id" = "f"."bar_id")
x
2
==
p
3
I
0
I
83c
I
38
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should support implicit schemas in from table symbols
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
40
39
0
7
1
49
2
1
7
3
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
49
9
2
49
10
0
49
11
0
7
12
64
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
2
@d
x
4
s__t
x
4
from
x
4
u__v
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
x
4
join
x
3
sql
x
6
should
s
80
SELECT * FROM "s"."t" INNER JOIN "u"."v" ON ("u"."v"."id" = "s"."t"."player_id")
x
2
==
p
3
I
0
I
840
I
28
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should support implicit aliases in from table symbols
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
80
39
0
7
1
49
2
1
7
3
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
49
9
2
49
10
0
49
11
0
7
12
64
83
13
15
39
0
7
14
49
2
1
7
15
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
49
9
2
49
10
0
49
11
0
7
16
64
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
17
x
2
@d
x
5
t___z
x
4
from
x
5
v___y
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
x
4
join
x
3
sql
x
6
should
s
78
SELECT * FROM "t" AS "z" INNER JOIN "v" AS "y" ON ("y"."id" = "z"."player_id")
x
2
==
x
8
s__t___z
x
8
u__v___y
s
86
SELECT * FROM "s"."t" AS "z" INNER JOIN "u"."v" AS "y" ON ("y"."id" = "z"."player_id")
p
5
I
0
I
844
I
28
I
845
I
50
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
should support AliasedExpressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
62
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
49
7
1
45
1
8
7
9
49
4
1
7
10
49
6
1
44
43
11
79
49
12
1
13
7
13
7
14
49
15
2
15
49
16
2
49
17
0
49
18
0
7
19
64
83
20
11
I
7
I
0
I
0
I
0
I
-2
p
21
x
2
@d
x
6
Sequel
n
x
1
s
x
4
expr
x
1
t
x
2
as
x
4
from
n
x
1
u
x
1
v
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
x
4
join
x
3
sql
x
6
should
s
78
SELECT * FROM "s" AS "t" INNER JOIN "u" AS "v" ON ("v"."id" = "t"."player_id")
x
2
==
p
3
I
0
I
849
I
3e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
45
should support the :implicit_qualifier option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
58
39
0
7
1
64
49
2
1
7
3
64
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
44
43
4
79
49
5
1
13
7
9
7
10
49
8
2
15
49
11
3
49
12
0
49
13
0
7
14
64
83
15
11
I
8
I
0
I
0
I
0
I
-2
p
16
x
2
@d
s
5
stats
x
4
from
s
7
players
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
x
18
implicit_qualifier
x
1
p
x
4
join
x
3
sql
x
6
should
s
80
SELECT * FROM "stats" INNER JOIN "players" ON ("players"."id" = "p"."player_id")
x
2
==
p
3
I
0
I
84d
I
3a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
should not qualify if :qualify=>false option is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
56
39
0
7
1
64
49
2
1
7
3
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
44
43
4
79
49
5
1
13
7
9
3
49
8
2
15
49
10
3
49
11
0
49
12
0
7
13
64
83
14
11
I
8
I
0
I
0
I
0
I
-2
p
15
x
2
@d
s
5
stats
x
4
from
x
7
players
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
x
7
qualify
x
4
join
x
3
sql
x
6
should
s
66
SELECT * FROM "stats" INNER JOIN "players" ON ("id" = "player_id")
x
2
==
p
3
I
0
I
851
I
38
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
63
should do deep qualification if :qualify=>:deep option is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
72
39
0
7
1
64
49
2
1
7
3
44
43
4
79
49
5
1
13
45
6
7
7
8
7
9
49
10
2
45
6
11
7
12
78
49
13
2
49
14
2
15
44
43
4
79
49
5
1
13
7
15
7
16
49
14
2
15
49
17
3
49
18
0
49
19
0
7
20
64
83
21
11
I
9
I
0
I
0
I
0
I
-2
p
22
x
2
@d
s
5
stats
x
4
from
x
7
players
x
4
Hash
x
16
new_from_literal
x
6
Sequel
n
x
1
f
x
2
id
x
8
function
n
x
9
player_id
x
9
subscript
x
3
[]=
x
7
qualify
x
4
deep
x
4
join
x
3
sql
x
6
should
s
90
SELECT * FROM "stats" INNER JOIN "players" ON (f("players"."id") = "stats"."player_id"[0])
x
2
==
p
3
I
0
I
855
I
48
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
should allow for arbitrary conditions in the JOIN clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
155
39
0
7
1
7
2
44
43
3
79
49
4
1
13
7
5
78
49
6
2
15
49
7
3
49
8
0
49
9
0
7
10
64
83
11
15
39
0
7
1
7
2
44
43
3
79
49
4
1
13
7
12
7
13
64
49
6
2
15
49
7
3
49
8
0
49
9
0
7
14
64
83
11
15
39
0
7
1
7
2
44
43
3
79
49
4
1
13
7
15
45
16
17
43
18
49
6
2
15
49
7
3
49
8
0
49
9
0
7
19
64
83
11
15
39
0
7
1
7
2
44
43
3
79
49
4
1
13
7
5
79
80
4
3
35
3
49
6
2
15
49
7
3
49
8
0
49
9
0
7
20
64
83
11
11
I
a
I
0
I
0
I
0
I
-2
p
21
x
2
@d
x
10
left_outer
x
10
categories
x
4
Hash
x
16
new_from_literal
x
6
status
x
3
[]=
x
10
join_table
x
3
sql
x
6
should
s
81
SELECT * FROM "items" LEFT OUTER JOIN "categories" ON ("categories"."status" = 0)
x
2
==
x
18
categorizable_type
s
4
Post
s
98
SELECT * FROM "items" LEFT OUTER JOIN "categories" ON ("categories"."categorizable_type" = 'Post')
x
9
timestamp
x
6
Sequel
n
x
17
CURRENT_TIMESTAMP
s
100
SELECT * FROM "items" LEFT OUTER JOIN "categories" ON ("categories"."timestamp" = CURRENT_TIMESTAMP)
s
90
SELECT * FROM "items" LEFT OUTER JOIN "categories" ON ("categories"."status" IN (1, 2, 3))
p
9
I
0
I
859
I
24
I
85a
I
4a
I
85b
I
72
I
85c
I
9b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should raise error for a table without a source
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
51
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
64
44
43
7
79
49
8
1
13
7
9
7
10
49
11
2
15
49
12
2
11
I
7
I
0
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
s
7
players
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
player_id
x
3
[]=
x
4
join
p
3
I
0
I
860
I
33
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
860
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should support joining datasets
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
171
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
19
0
15
39
8
7
9
20
0
44
43
10
79
49
11
1
13
7
12
7
13
49
14
2
15
49
15
3
49
16
0
49
17
0
7
18
64
83
19
15
20
0
44
43
10
79
49
11
1
13
7
20
2
49
14
2
15
49
21
1
15
39
8
7
9
20
0
44
43
10
79
49
11
1
13
7
12
7
13
49
14
2
15
49
15
3
49
16
0
49
17
0
7
22
64
83
19
15
39
8
49
23
0
7
9
20
0
44
43
10
79
49
11
1
13
7
12
7
13
49
14
2
15
49
15
3
49
16
0
49
17
0
7
24
64
83
19
11
I
9
I
1
I
0
I
0
I
-2
p
25
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
10
categories
x
4
from
x
2
@d
x
10
left_outer
x
4
Hash
x
16
new_from_literal
x
7
item_id
x
2
id
x
3
[]=
x
10
join_table
x
3
sql
x
6
should
s
107
SELECT * FROM "items" LEFT OUTER JOIN (SELECT * FROM categories) AS "t1" ON ("t1"."item_id" = "items"."id")
x
2
==
x
6
active
x
7
filter!
s
130
SELECT * FROM "items" LEFT OUTER JOIN (SELECT * FROM categories WHERE (active IS TRUE)) AS "t1" ON ("t1"."item_id" = "items"."id")
x
9
from_self
s
151
SELECT * FROM (SELECT * FROM "items") AS "t1" LEFT OUTER JOIN (SELECT * FROM categories WHERE (active IS TRUE)) AS "t2" ON ("t2"."item_id" = "t1"."id")
p
11
I
0
I
864
I
24
I
865
I
49
I
866
I
5e
I
867
I
83
I
868
I
ab
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
s
53
should support joining datasets and aliasing the join
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
75
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
19
0
15
39
8
7
9
20
0
44
43
10
79
49
11
1
13
7
12
7
13
49
14
2
15
7
15
49
16
4
49
17
0
49
18
0
7
19
64
83
20
11
I
9
I
1
I
0
I
0
I
-2
p
21
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
10
categories
x
4
from
x
2
@d
x
10
left_outer
x
4
Hash
x
16
new_from_literal
x
11
ds__item_id
x
2
id
x
3
[]=
x
2
ds
x
10
join_table
x
3
sql
x
6
should
s
107
SELECT * FROM "items" LEFT OUTER JOIN (SELECT * FROM categories) AS "ds" ON ("ds"."item_id" = "items"."id")
x
2
==
p
5
I
0
I
86c
I
24
I
86d
I
4b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
s
40
should support joining multiple datasets
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
202
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
19
0
15
45
0
8
43
2
13
71
3
47
9
60
47
49
4
0
13
1
47
49
5
1
15
8
64
1
49
3
1
7
9
49
7
1
7
10
49
11
1
19
1
15
45
0
12
43
2
13
71
3
47
9
101
47
49
4
0
13
1
47
49
5
1
15
8
105
1
49
3
1
7
13
49
7
1
7
14
64
49
15
1
19
2
15
39
16
7
17
20
0
44
43
18
79
49
19
1
13
7
20
7
21
49
22
2
15
49
23
3
7
24
20
1
44
43
18
79
49
19
1
13
7
25
7
21
49
22
2
15
49
23
3
7
26
20
2
44
43
18
79
49
19
1
13
7
27
7
21
49
22
2
15
49
23
3
49
28
0
49
29
0
7
30
64
83
31
11
I
b
I
3
I
0
I
0
I
-2
p
32
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
10
categories
x
4
from
n
x
5
nodes
x
4
name
x
6
select
n
x
10
attributes
s
13
name = 'blah'
x
6
filter
x
2
@d
x
10
left_outer
x
4
Hash
x
16
new_from_literal
x
7
item_id
x
2
id
x
3
[]=
x
10
join_table
x
5
inner
x
7
node_id
x
11
right_outer
x
12
attribute_id
x
3
sql
x
6
should
s
294
SELECT * FROM "items" LEFT OUTER JOIN (SELECT * FROM categories) AS "t1" ON ("t1"."item_id" = "items"."id") INNER JOIN (SELECT name FROM nodes) AS "t2" ON ("t2"."node_id" = "t1"."id") RIGHT OUTER JOIN (SELECT * FROM attributes WHERE (name = 'blah')) AS "t3" ON ("t3"."attribute_id" = "t2"."id")
x
2
==
p
11
I
0
I
871
I
24
I
872
I
4d
I
873
I
77
I
875
I
c4
I
876
I
ca
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
2
ds
x
3
ds2
x
3
ds3
s
56
should support using an SQL String as the join condition
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
7
1
7
2
64
7
3
49
4
3
49
5
0
49
6
0
7
7
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
10
categories
s
20
c.item_id = items.id
x
1
c
x
4
join
x
3
sql
x
6
should
s
78
SELECT * FROM "items" INNER JOIN "categories" AS "c" ON (c.item_id = items.id)
x
2
==
p
3
I
0
I
87c
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should support using a boolean column as the join condition
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
2
@d
x
10
categories
x
6
active
x
4
join
x
3
sql
x
6
should
s
57
SELECT * FROM "items" INNER JOIN "categories" ON "active"
x
2
==
p
3
I
0
I
880
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
should support using an expression as the join condition
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
7
1
45
2
3
7
4
49
5
1
4
10
85
6
49
7
2
49
8
0
49
9
0
7
10
64
83
11
11
I
5
I
0
I
0
I
0
I
-2
p
12
x
2
@d
x
10
categories
x
6
Sequel
n
x
6
number
x
4
expr
x
1
>
x
4
join
x
3
sql
x
6
should
s
64
SELECT * FROM "items" INNER JOIN "categories" ON ("number" > 10)
x
2
==
p
3
I
0
I
884
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should support natural and cross joins
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
67
39
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
8
7
2
1
49
3
3
49
4
0
49
5
0
7
9
64
83
7
15
39
0
7
1
7
2
1
7
10
49
3
4
49
4
0
49
5
0
7
11
64
83
7
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
2
@d
x
7
natural
x
10
categories
x
10
join_table
x
3
sql
x
6
should
s
47
SELECT * FROM "items" NATURAL JOIN "categories"
x
2
==
x
5
cross
s
45
SELECT * FROM "items" CROSS JOIN "categories"
x
1
c
s
54
SELECT * FROM "items" NATURAL JOIN "categories" AS "c"
p
7
I
0
I
888
I
15
I
889
I
2b
I
88a
I
43
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
71
should support joins with a USING clause if an array of symbols is used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
39
0
7
1
7
2
35
1
49
3
2
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
1
7
8
7
9
35
2
49
3
2
49
4
0
49
5
0
7
10
64
83
7
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
10
categories
x
2
id
x
4
join
x
3
sql
x
6
should
s
58
SELECT * FROM "items" INNER JOIN "categories" USING ("id")
x
2
==
x
3
id1
x
3
id2
s
66
SELECT * FROM "items" INNER JOIN "categories" USING ("id1", "id2")
p
5
I
0
I
88e
I
17
I
88f
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
68
should emulate JOIN USING (poorly) if the dataset doesn't support it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
7
1
56
2
50
3
1
15
39
0
7
4
7
5
35
1
49
6
2
49
7
0
49
8
0
7
9
64
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
20
supports_join_using?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
893
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
10
categories
x
2
id
x
4
join
x
3
sql
x
6
should
s
83
SELECT * FROM "items" INNER JOIN "categories" ON ("categories"."id" = "items"."id")
x
2
==
p
5
I
0
I
893
I
a
I
894
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
91
should hoist WITH clauses from subqueries if the dataset doesn't support CTEs in subselects
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
112
39
0
7
1
56
2
50
3
1
15
39
0
7
4
56
5
50
3
1
15
39
0
45
6
7
43
8
13
71
9
47
9
46
47
49
10
0
13
1
47
49
11
1
15
8
50
1
49
9
1
7
12
49
13
1
7
14
45
6
15
43
8
13
71
9
47
9
81
47
49
10
0
13
1
47
49
11
1
15
8
85
1
49
9
1
7
16
49
13
1
49
17
2
7
18
35
1
49
19
2
49
20
0
49
21
0
7
22
64
83
23
11
I
7
I
0
I
0
I
0
I
-2
p
24
x
2
@d
x
13
supports_cte?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
898
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
26
supports_cte_in_subselect?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
899
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
10
categories
x
4
from
x
1
a
n
x
1
b
x
4
with
x
2
id
x
4
join
x
3
sql
x
6
should
s
110
WITH "a" AS (SELECT * FROM b) SELECT * FROM "items" INNER JOIN (SELECT * FROM categories) AS "t1" USING ("id")
x
2
==
p
7
I
0
I
898
I
a
I
899
I
14
I
89a
I
70
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
63
should raise an error if using an array of symbols with a block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
39
0
7
1
7
2
35
1
56
3
50
4
2
11
I
5
I
0
I
0
I
0
I
-2
p
5
x
2
@d
x
10
categories
x
2
id
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
58
37
19
0
15
37
19
1
15
37
19
2
15
15
1
11
I
6
I
3
I
3
I
3
n
p
0
p
3
I
0
I
89e
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
j
x
2
lj
x
2
js
x
4
join
p
3
I
0
I
89e
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
89e
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
116
should support using a block that receieves the join table/alias, last join table/alias, and array of previous joins
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
121
39
0
7
1
56
2
50
3
1
15
39
0
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
49
9
1
7
1
1
7
10
56
11
50
3
3
15
39
0
7
12
49
9
1
7
1
1
7
10
56
13
50
3
3
15
39
0
7
14
49
3
1
7
1
1
7
10
56
15
50
3
3
15
39
0
7
16
7
14
1
7
17
49
18
4
7
1
1
7
10
56
19
50
3
3
15
39
0
7
14
49
3
1
7
1
49
3
1
7
20
56
21
50
3
1
11
I
6
I
0
I
0
I
0
I
-2
p
22
x
2
@d
x
10
categories
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
58
37
19
0
15
37
19
1
15
37
19
2
15
15
20
0
49
0
0
7
1
83
2
15
20
1
49
0
0
7
3
83
2
15
20
2
49
0
0
35
0
83
2
11
I
6
I
3
I
3
I
3
n
p
4
x
6
should
x
10
categories
x
2
==
x
5
items
p
9
I
0
I
8a2
I
e
I
8a3
I
18
I
8a4
I
22
I
8a5
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
10
join_alias
x
15
last_join_alias
x
5
joins
x
4
join
x
4
Hash
x
16
new_from_literal
x
5
items
x
1
i
x
3
[]=
x
4
from
x
1
c
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
58
37
19
0
15
37
19
1
15
37
19
2
15
15
20
0
49
0
0
7
1
83
2
15
20
1
49
0
0
7
3
83
2
15
20
2
49
0
0
35
0
83
2
11
I
6
I
3
I
3
I
3
n
p
4
x
6
should
x
1
c
x
2
==
x
1
i
p
9
I
0
I
8a8
I
e
I
8a9
I
18
I
8aa
I
22
I
8ab
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
10
join_alias
x
15
last_join_alias
x
5
joins
x
9
items___i
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
58
37
19
0
15
37
19
1
15
37
19
2
15
15
20
0
49
0
0
7
1
83
2
15
20
1
49
0
0
7
3
83
2
15
20
2
49
0
0
35
0
83
2
11
I
6
I
3
I
3
I
3
n
p
4
x
6
should
x
1
c
x
2
==
x
1
i
p
9
I
0
I
8ae
I
e
I
8af
I
18
I
8b0
I
22
I
8b1
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
10
join_alias
x
15
last_join_alias
x
5
joins
x
4
blah
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
97
58
37
19
0
15
37
19
1
15
37
19
2
15
15
20
0
49
0
0
7
1
83
2
15
20
1
49
0
0
7
3
83
2
15
20
2
5
45
4
5
47
49
6
1
49
0
1
15
20
2
49
7
0
49
0
0
79
83
2
15
20
2
49
8
0
5
45
9
10
43
11
43
12
47
49
6
1
49
0
1
15
20
2
49
8
0
49
13
0
49
0
0
7
14
83
2
11
I
7
I
3
I
3
I
3
n
p
15
x
6
should
x
1
c
x
2
==
x
4
blah
x
5
Array
n
x
12
be_a_kind_of
x
6
length
x
5
first
x
6
Sequel
n
x
3
SQL
x
10
JoinClause
x
9
join_type
x
5
inner
p
15
I
0
I
8b4
I
e
I
8b5
I
18
I
8b6
I
22
I
8b7
I
30
I
8b8
I
3c
I
8b9
I
51
I
8ba
I
61
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
10
join_alias
x
15
last_join_alias
x
5
joins
x
7
natural
x
1
b
x
10
join_table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
97
58
37
19
0
15
37
19
1
15
37
19
2
15
15
20
0
49
0
0
7
1
83
2
15
20
1
49
0
0
7
3
83
2
15
20
2
5
45
4
5
47
49
6
1
49
0
1
15
20
2
49
7
0
49
0
0
79
83
2
15
20
2
49
8
0
5
45
9
10
43
11
43
12
47
49
6
1
49
0
1
15
20
2
49
8
0
49
13
0
49
0
0
7
14
83
2
11
I
7
I
3
I
3
I
3
n
p
15
x
6
should
x
1
c
x
2
==
x
1
b
x
5
Array
n
x
12
be_a_kind_of
x
6
length
x
5
first
x
6
Sequel
n
x
3
SQL
x
10
JoinClause
x
9
join_type
x
7
natural
p
15
I
0
I
8bd
I
e
I
8be
I
18
I
8bf
I
22
I
8c0
I
30
I
8c1
I
3c
I
8c2
I
51
I
8c3
I
61
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
10
join_alias
x
15
last_join_alias
x
5
joins
x
5
blah2
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
134
58
37
19
0
15
37
19
1
15
37
19
2
15
15
20
0
49
0
0
7
1
83
2
15
20
1
49
0
0
7
3
83
2
15
20
2
5
45
4
5
47
49
6
1
49
0
1
15
20
2
49
7
0
49
0
0
80
83
2
15
20
2
49
8
0
5
45
9
10
43
11
43
12
47
49
6
1
49
0
1
15
20
2
49
8
0
49
13
0
49
0
0
7
14
83
2
15
20
2
49
15
0
5
45
9
16
43
11
43
12
47
49
6
1
49
0
1
15
20
2
49
15
0
49
13
0
49
0
0
7
3
83
2
11
I
7
I
3
I
3
I
3
n
p
17
x
6
should
x
5
blah2
x
2
==
x
10
categories
x
5
Array
n
x
12
be_a_kind_of
x
6
length
x
5
first
x
6
Sequel
n
x
3
SQL
x
10
JoinClause
x
5
table
x
4
blah
x
4
last
n
p
19
I
0
I
8c6
I
e
I
8c7
I
18
I
8c8
I
22
I
8c9
I
30
I
8ca
I
3c
I
8cb
I
51
I
8cc
I
61
I
8cd
I
76
I
8ce
I
86
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
10
join_alias
x
15
last_join_alias
x
5
joins
p
13
I
0
I
8a2
I
a
I
8a8
I
2a
I
8ae
I
3c
I
8b4
I
4e
I
8bd
I
65
I
8c6
I
79
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
74
should use the block result as the only condition if no condition is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
56
2
50
3
1
49
4
0
49
5
0
7
6
64
83
7
15
39
0
7
1
56
8
50
3
1
49
4
0
49
5
0
7
9
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
2
@d
x
10
categories
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
58
37
19
0
15
37
19
1
15
37
19
2
15
15
44
43
0
79
49
1
1
13
45
2
3
20
0
7
4
49
5
2
45
2
6
20
1
7
7
49
5
2
49
8
2
15
11
I
a
I
3
I
3
I
3
n
p
9
x
4
Hash
x
16
new_from_literal
x
6
Sequel
n
x
1
b
x
7
qualify
n
x
1
c
x
3
[]=
p
3
I
0
I
8d3
I
2f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
j
x
2
lj
x
2
js
x
4
join
x
3
sql
x
6
should
s
81
SELECT * FROM "items" INNER JOIN "categories" ON ("categories"."b" = "items"."c")
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
58
37
19
0
15
37
19
1
15
37
19
2
15
15
45
0
1
20
0
7
2
49
3
2
45
0
4
20
1
7
5
49
3
2
85
6
11
I
8
I
3
I
3
I
3
n
p
7
x
6
Sequel
n
x
1
b
x
7
qualify
n
x
1
c
x
1
>
p
3
I
0
I
8d4
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
j
x
2
lj
x
2
js
s
81
SELECT * FROM "items" INNER JOIN "categories" ON ("categories"."b" > "items"."c")
p
5
I
0
I
8d3
I
15
I
8d4
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
73
should combine the block conditions and argument conditions if both given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
56
7
50
8
2
49
9
0
49
10
0
7
11
64
83
12
15
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
56
13
50
8
2
49
9
0
49
10
0
7
14
64
83
12
11
I
7
I
0
I
0
I
0
I
-2
p
15
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
d
x
3
[]=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
58
37
19
0
15
37
19
1
15
37
19
2
15
15
44
43
0
79
49
1
1
13
45
2
3
20
0
7
4
49
5
2
45
2
6
20
1
7
7
49
5
2
49
8
2
15
11
I
a
I
3
I
3
I
3
n
p
9
x
4
Hash
x
16
new_from_literal
x
6
Sequel
n
x
1
b
x
7
qualify
n
x
1
c
x
3
[]=
p
3
I
0
I
8d8
I
2f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
j
x
2
lj
x
2
js
x
4
join
x
3
sql
x
6
should
s
120
SELECT * FROM "items" INNER JOIN "categories" ON (("categories"."a" = "items"."d") AND ("categories"."b" = "items"."c"))
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
58
37
19
0
15
37
19
1
15
37
19
2
15
15
45
0
1
20
0
7
2
49
3
2
45
0
4
20
1
7
5
49
3
2
85
6
11
I
8
I
3
I
3
I
3
n
p
7
x
6
Sequel
n
x
1
b
x
7
qualify
n
x
1
c
x
1
>
p
3
I
0
I
8d9
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
j
x
2
lj
x
2
js
s
120
SELECT * FROM "items" INNER JOIN "categories" ON (("categories"."a" = "items"."d") AND ("categories"."b" > "items"."c"))
p
5
I
0
I
8d8
I
25
I
8d9
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should prefer explicit aliases over implicit
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
152
39
0
7
1
49
2
1
7
3
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
44
43
4
80
49
5
1
13
7
9
7
10
49
8
2
15
13
7
11
7
12
49
8
2
15
49
13
3
49
14
0
49
15
0
7
16
64
83
17
15
39
0
45
18
19
7
20
49
21
1
7
22
49
23
1
49
2
1
45
18
24
7
25
49
21
1
7
26
49
23
1
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
44
43
4
80
49
5
1
13
7
9
7
10
49
8
2
15
13
7
11
7
12
49
8
2
15
49
13
3
49
14
0
49
15
0
7
16
64
83
17
11
I
8
I
0
I
0
I
0
I
-2
p
27
x
2
@d
x
9
items___i
x
4
from
x
14
categories___c
x
4
Hash
x
16
new_from_literal
x
11
category_id
x
2
id
x
3
[]=
x
11
table_alias
x
2
c2
x
18
implicit_qualifier
x
2
i2
x
4
join
x
3
sql
x
6
should
s
96
SELECT * FROM "items" AS "i" INNER JOIN "categories" AS "c2" ON ("c2"."category_id" = "i2"."id")
x
2
==
x
6
Sequel
n
x
5
items
x
4
expr
x
1
i
x
2
as
n
x
10
categories
x
1
c
p
7
I
0
I
8dd
I
41
I
8de
I
92
I
8df
I
98
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
should not allow insert, update, delete, or truncate
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
84
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
15
5
56
9
47
50
1
0
5
45
2
10
43
4
47
49
5
1
49
6
1
15
5
56
11
47
50
1
0
5
45
2
12
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
2
49
8
0
11
I
7
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
d
x
3
[]=
x
4
join
x
10
insert_sql
p
3
I
0
I
8e3
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
16
InvalidOperation
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
2
44
43
2
79
49
3
1
13
7
4
79
49
6
2
15
49
8
1
11
I
7
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
d
x
3
[]=
x
4
join
x
10
update_sql
p
3
I
0
I
8e4
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
2
49
8
0
11
I
7
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
d
x
3
[]=
x
4
join
x
10
delete_sql
p
3
I
0
I
8e5
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
2
49
8
0
11
I
7
I
0
I
0
I
0
I
-2
p
9
x
2
@d
x
10
categories
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
d
x
3
[]=
x
4
join
x
12
truncate_sql
p
3
I
0
I
8e6
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
9
I
0
I
8e3
I
15
I
8e4
I
2a
I
8e5
I
3f
I
8e6
I
54
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
should raise an error if an invalid option is passed
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
39
0
7
1
7
2
35
1
1
49
3
3
11
I
5
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
1
c
x
2
id
x
4
join
p
3
I
0
I
8ea
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
7
2
35
1
45
3
4
7
5
7
1
49
6
2
49
7
3
11
I
7
I
0
I
0
I
0
I
-2
p
8
x
2
@d
x
1
c
x
2
id
x
6
Sequel
n
x
1
d
x
7
qualify
x
4
join
p
3
I
0
I
8eb
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
5
I
0
I
8ea
I
15
I
8eb
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
83
I
0
I
7e9
I
8
I
7ee
I
13
I
7f2
I
1e
I
7f7
I
29
I
7fc
I
34
I
800
I
3f
I
804
I
4a
I
808
I
55
I
817
I
60
I
81f
I
6b
I
827
I
76
I
82b
I
81
I
82f
I
8c
I
833
I
97
I
837
I
a2
I
83b
I
ad
I
83f
I
b8
I
843
I
c3
I
848
I
ce
I
84c
I
d9
I
850
I
e4
I
854
I
ef
I
858
I
fa
I
85f
I
105
I
863
I
110
I
86b
I
11b
I
870
I
126
I
87b
I
131
I
87f
I
13c
I
883
I
147
I
887
I
152
I
88d
I
15d
I
892
I
168
I
897
I
173
I
89d
I
17e
I
8a1
I
189
I
8d2
I
194
I
8d7
I
19f
I
8dc
I
1aa
I
8e2
I
1b5
I
8e9
I
1c0
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
11
Dataset#[]=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
48
should perform an update on the specified filter
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
76
45
0
1
49
2
0
19
0
15
20
0
7
3
49
4
1
19
1
15
20
1
44
43
5
79
49
6
1
13
7
7
79
49
8
2
15
44
43
5
79
49
6
1
13
7
9
4
3
49
8
2
15
13
18
3
49
8
2
15
15
20
0
49
10
0
49
11
0
7
12
64
35
1
83
13
11
I
9
I
2
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
4
mock
x
5
items
x
2
[]
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
1
x
x
4
sqls
x
6
should
s
36
UPDATE items SET x = 3 WHERE (a = 1)
x
2
==
p
9
I
0
I
8f1
I
9
I
8f2
I
13
I
8f3
I
3c
I
8f4
I
4c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
db
x
2
ds
x
7
specify
p
3
I
0
I
8f0
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
11
Dataset#set
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
30
should act as alias to #update
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
57
45
0
1
49
2
0
19
0
15
20
0
7
3
49
4
1
19
1
15
20
1
44
43
5
79
49
6
1
13
7
7
4
3
49
8
2
15
49
9
1
15
20
0
49
10
0
49
11
0
7
12
64
35
1
83
13
11
I
8
I
2
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
4
mock
x
5
items
x
2
[]
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
3
set
x
4
sqls
x
6
should
s
22
UPDATE items SET x = 3
x
2
==
p
9
I
0
I
8fa
I
9
I
8fb
I
13
I
8fc
I
29
I
8fd
I
39
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
db
x
2
ds
x
7
specify
p
3
I
0
I
8f9
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
23
Dataset#insert_multiple
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
45
0
1
44
43
2
79
49
3
1
13
7
4
80
49
5
2
15
49
6
1
38
7
15
39
7
7
8
49
9
1
38
10
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
6
autoid
x
3
[]=
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
3
@ds
p
5
I
0
I
903
I
18
I
904
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
45
should insert all items in the supplied array
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
55
39
0
7
1
64
4
5
4
3
44
43
2
79
49
3
1
13
7
4
80
49
5
2
15
35
4
49
6
1
15
39
7
49
8
0
49
9
0
7
10
64
7
11
64
7
12
64
7
13
64
35
4
83
14
11
I
9
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
s
2
aa
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
15
insert_multiple
x
3
@db
x
4
sqls
x
6
should
s
31
INSERT INTO items VALUES ('aa')
s
28
INSERT INTO items VALUES (5)
s
28
INSERT INTO items VALUES (3)
s
32
INSERT INTO items (a) VALUES (2)
x
2
==
p
11
I
0
I
908
I
1e
I
909
I
29
I
90a
I
2c
I
90b
I
2f
I
90c
I
37
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
59
should pass array items through the supplied block if given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
39
0
7
1
64
7
2
64
7
3
64
35
3
56
4
50
5
1
15
39
6
49
7
0
49
8
0
7
9
64
7
10
64
7
11
64
35
3
83
12
11
I
5
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
s
10
inevitable
s
5
hello
s
17
the ticking clock
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
57
19
0
15
20
0
7
0
64
7
1
64
49
2
2
11
I
5
I
1
I
1
I
1
n
p
3
s
1
l
s
1
r
x
4
gsub
p
3
I
0
I
910
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
i
x
15
insert_multiple
x
3
@db
x
4
sqls
x
6
should
s
39
INSERT INTO items VALUES ('inevitabre')
s
34
INSERT INTO items VALUES ('herro')
s
46
INSERT INTO items VALUES ('the ticking crock')
x
2
==
p
9
I
0
I
910
I
13
I
911
I
1e
I
912
I
21
I
913
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should return array of inserted ids
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
64
4
5
4
3
44
43
2
79
49
3
1
13
7
4
80
49
5
2
15
35
4
49
6
1
49
7
0
80
4
3
4
4
4
5
35
4
83
8
11
I
9
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
s
2
aa
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
15
insert_multiple
x
6
should
x
2
==
p
3
I
0
I
917
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
51
should work exactly like in metioned in the example
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
94
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
44
43
1
79
49
2
1
13
7
3
80
49
4
2
15
35
2
56
5
50
6
1
15
39
7
49
8
0
19
0
15
7
9
64
7
10
64
35
2
5
20
0
78
49
11
1
47
49
12
1
49
13
1
15
7
14
64
7
15
64
35
2
5
20
0
79
49
11
1
47
49
12
1
49
13
1
11
I
8
I
1
I
0
I
0
I
-2
p
16
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
57
19
0
15
20
0
7
0
20
0
7
1
49
2
1
80
49
3
1
13
18
3
49
4
2
15
15
20
0
11
I
6
I
1
I
1
I
1
n
p
5
x
1
y
x
1
x
x
2
[]
x
1
*
x
3
[]=
p
3
I
0
I
91b
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
3
row
x
15
insert_multiple
x
3
@db
x
4
sqls
s
38
INSERT INTO items (x, y) VALUES (1, 2)
s
38
INSERT INTO items (y, x) VALUES (2, 1)
x
2
[]
x
7
include
x
6
should
s
38
INSERT INTO items (x, y) VALUES (2, 4)
s
38
INSERT INTO items (y, x) VALUES (4, 2)
p
9
I
0
I
91b
I
28
I
91c
I
30
I
91d
I
47
I
91e
I
5e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
4
sqls
p
11
I
0
I
902
I
8
I
907
I
13
I
90f
I
1e
I
916
I
29
I
91a
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
25
Dataset aggregate methods
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
15
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
45
0
1
44
43
2
79
49
3
1
13
7
4
5
56
5
47
50
6
0
49
7
2
15
49
8
1
7
9
49
10
1
38
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
57
19
0
15
44
43
0
79
49
1
1
13
79
20
0
49
2
2
15
11
I
6
I
1
I
1
I
1
n
p
3
x
4
Hash
x
16
new_from_literal
x
3
[]=
p
3
I
0
I
924
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
s
x
4
proc
x
3
[]=
x
4
mock
x
4
test
x
2
[]
x
2
@d
p
3
I
0
I
924
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
18
should include min
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
1
a
x
3
min
x
6
should
s
31
SELECT min(a) FROM test LIMIT 1
x
2
==
p
3
I
0
I
928
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
18
should include max
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
1
b
x
3
max
x
6
should
s
31
SELECT max(b) FROM test LIMIT 1
x
2
==
p
3
I
0
I
92c
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
18
should include sum
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
1
c
x
3
sum
x
6
should
s
31
SELECT sum(c) FROM test LIMIT 1
x
2
==
p
3
I
0
I
930
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
18
should include avg
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
1
d
x
3
avg
x
6
should
s
31
SELECT avg(d) FROM test LIMIT 1
x
2
==
p
3
I
0
I
934
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should accept qualified columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
8
test__bc
x
3
avg
x
6
should
s
37
SELECT avg(test.bc) FROM test LIMIT 1
x
2
==
p
3
I
0
I
938
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
should use a subselect for the same conditions as count
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
79
39
0
7
1
49
2
1
4
5
49
3
1
19
0
15
20
0
7
1
49
4
1
49
5
0
7
6
64
83
7
15
20
0
7
1
49
8
1
49
5
0
7
9
64
83
7
15
20
0
7
1
49
10
1
49
5
0
7
11
64
83
7
15
20
0
7
1
49
12
1
49
5
0
7
13
64
83
7
11
I
4
I
1
I
0
I
0
I
-2
p
14
x
2
@d
x
1
a
x
5
order
x
5
limit
x
3
avg
x
6
should
s
72
SELECT avg(a) FROM (SELECT * FROM test ORDER BY a LIMIT 5) AS t1 LIMIT 1
x
2
==
x
3
sum
s
72
SELECT sum(a) FROM (SELECT * FROM test ORDER BY a LIMIT 5) AS t1 LIMIT 1
x
3
min
s
72
SELECT min(a) FROM (SELECT * FROM test ORDER BY a LIMIT 5) AS t1 LIMIT 1
x
3
max
s
72
SELECT max(a) FROM (SELECT * FROM test ORDER BY a LIMIT 5) AS t1 LIMIT 1
p
11
I
0
I
93c
I
f
I
93d
I
1f
I
93e
I
2f
I
93f
I
3f
I
940
I
4f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
d
p
15
I
0
I
923
I
8
I
927
I
13
I
92b
I
1e
I
92f
I
29
I
933
I
34
I
937
I
3f
I
93b
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
13
Dataset#range
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
57
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
7
5
79
49
6
2
15
13
7
7
4
10
49
6
2
15
49
6
2
15
49
8
1
38
9
15
39
9
7
10
49
11
1
38
12
11
I
9
I
0
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
2
v1
x
3
[]=
x
2
v2
x
4
mock
x
3
@db
x
4
test
x
2
[]
x
3
@ds
p
5
I
0
I
946
I
2f
I
947
I
39
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
39
should generate a correct SQL statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
39
0
7
1
49
2
1
15
39
3
49
4
0
49
5
0
7
6
64
35
1
83
7
15
39
0
45
8
9
7
10
49
11
1
4
100
85
12
49
13
1
7
1
49
2
1
15
39
3
49
4
0
49
5
0
7
14
64
35
1
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
5
stamp
x
5
range
x
3
@db
x
4
sqls
x
6
should
s
59
SELECT min(stamp) AS v1, max(stamp) AS v2 FROM test LIMIT 1
x
2
==
x
6
Sequel
n
x
5
price
x
4
expr
x
1
>
x
6
filter
s
79
SELECT min(stamp) AS v1, max(stamp) AS v2 FROM test WHERE (price > 100) LIMIT 1
p
9
I
0
I
94b
I
8
I
94c
I
18
I
94e
I
2f
I
94f
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
28
should return a range object
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
49
2
1
49
3
0
44
43
4
79
4
10
49
5
2
83
6
11
I
5
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
5
tryme
x
5
range
x
6
should
x
5
Range
x
3
new
x
2
==
p
3
I
0
I
953
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
should use a subselect for the same conditions as count
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
39
0
7
1
49
2
1
4
5
49
3
1
7
1
49
4
1
49
5
0
44
43
6
79
4
10
49
7
2
83
8
15
39
9
49
10
0
49
5
0
7
11
64
35
1
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
5
stamp
x
5
order
x
5
limit
x
5
range
x
6
should
x
5
Range
x
3
new
x
2
==
x
3
@db
x
4
sqls
s
104
SELECT min(stamp) AS v1, max(stamp) AS v2 FROM (SELECT * FROM test ORDER BY stamp LIMIT 5) AS t1 LIMIT 1
p
5
I
0
I
957
I
20
I
958
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
945
I
8
I
94a
I
13
I
952
I
1e
I
956
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
16
Dataset#interval
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
49
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
79
49
3
1
13
7
5
7
6
49
7
2
15
49
7
2
15
49
8
1
38
9
15
39
9
7
10
49
11
1
38
12
11
I
9
I
0
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
v
I
4d2
x
3
[]=
x
4
mock
x
3
@db
x
4
test
x
2
[]
x
3
@ds
p
5
I
0
I
95e
I
27
I
95f
I
31
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
41
should generate the correct SQL statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
39
0
7
1
49
2
1
15
39
3
49
4
0
49
5
0
7
6
64
35
1
83
7
15
39
0
45
8
9
7
10
49
11
1
4
100
85
12
49
13
1
7
1
49
2
1
15
39
3
49
4
0
49
5
0
7
14
64
35
1
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
5
stamp
x
8
interval
x
3
@db
x
4
sqls
x
6
should
s
50
SELECT (max(stamp) - min(stamp)) FROM test LIMIT 1
x
2
==
x
6
Sequel
n
x
5
price
x
4
expr
x
1
>
x
6
filter
s
70
SELECT (max(stamp) - min(stamp)) FROM test WHERE (price > 100) LIMIT 1
p
9
I
0
I
963
I
8
I
964
I
18
I
966
I
2f
I
967
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
55
should use a subselect for the same conditions as count
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
39
0
7
1
49
2
1
4
5
49
3
1
7
1
49
4
1
49
5
0
7
6
83
7
15
39
8
49
9
0
49
5
0
7
10
64
35
1
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
5
stamp
x
5
order
x
5
limit
x
8
interval
x
6
should
I
4d2
x
2
==
x
3
@db
x
4
sqls
s
95
SELECT (max(stamp) - min(stamp)) FROM (SELECT * FROM test ORDER BY stamp LIMIT 5) AS t1 LIMIT 1
p
5
I
0
I
96b
I
19
I
96c
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
95d
I
8
I
962
I
13
I
96a
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
24
Dataset #first and #last
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
96
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
19
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
40
45
0
1
44
43
2
79
49
3
1
13
7
4
5
56
5
47
50
6
0
49
7
2
15
49
8
1
38
9
15
39
9
7
10
49
11
1
38
12
11
I
7
I
0
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
57
19
0
15
44
43
0
79
49
1
1
13
7
2
20
0
49
3
2
15
11
I
6
I
1
I
1
I
1
n
p
4
x
4
Hash
x
16
new_from_literal
x
1
s
x
3
[]=
p
3
I
0
I
972
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
s
x
4
proc
x
3
[]=
x
4
mock
x
3
@db
x
4
test
x
2
[]
x
2
@d
p
5
I
0
I
972
I
1e
I
973
I
28
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
53
should return a single record if no argument is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
66
39
0
7
1
49
2
1
49
3
0
49
4
0
44
43
5
79
49
6
1
13
7
7
7
8
64
49
9
2
15
83
10
15
39
0
7
1
49
2
1
49
11
0
49
4
0
44
43
5
79
49
6
1
13
7
7
7
12
64
49
9
2
15
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
2
@d
x
1
a
x
5
order
x
5
first
x
6
should
x
4
Hash
x
16
new_from_literal
x
1
s
s
37
SELECT * FROM test ORDER BY a LIMIT 1
x
3
[]=
x
2
==
x
4
last
s
42
SELECT * FROM test ORDER BY a DESC LIMIT 1
p
5
I
0
I
977
I
21
I
978
I
42
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
74
should return the first/last matching record if argument is not an Integer
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
174
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
4
26
49
6
2
15
49
7
1
49
8
0
44
43
3
79
49
4
1
13
7
9
7
10
64
49
6
2
15
83
11
15
39
0
7
1
49
2
1
7
12
64
4
15
49
7
2
49
8
0
44
43
3
79
49
4
1
13
7
9
7
13
64
49
6
2
15
83
11
15
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
4
26
49
6
2
15
49
14
1
49
8
0
44
43
3
79
49
4
1
13
7
9
7
15
64
49
6
2
15
83
11
15
39
0
7
1
49
2
1
7
12
64
4
15
49
14
2
49
8
0
44
43
3
79
49
4
1
13
7
9
7
16
64
49
6
2
15
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
2
@d
x
1
a
x
5
order
x
4
Hash
x
16
new_from_literal
x
1
z
x
3
[]=
x
5
first
x
6
should
x
1
s
s
52
SELECT * FROM test WHERE (z = 26) ORDER BY a LIMIT 1
x
2
==
s
5
z = ?
s
52
SELECT * FROM test WHERE (z = 15) ORDER BY a LIMIT 1
x
4
last
s
57
SELECT * FROM test WHERE (z = 26) ORDER BY a DESC LIMIT 1
s
57
SELECT * FROM test WHERE (z = 15) ORDER BY a DESC LIMIT 1
p
9
I
0
I
97c
I
31
I
97d
I
57
I
97e
I
88
I
97f
I
ae
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
78
should set the limit and return an array of records if the given number is > 1
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
118
5
4
10
47
49
0
1
4
10
81
1
19
0
15
39
2
7
3
49
4
1
20
0
49
5
1
49
6
0
44
43
7
79
49
8
1
13
7
9
7
10
20
0
47
101
11
63
2
49
12
2
15
35
1
83
13
19
1
15
5
4
10
47
49
0
1
4
10
81
1
19
0
15
39
2
7
3
49
4
1
20
0
49
14
1
49
6
0
44
43
7
79
49
8
1
13
7
9
7
15
20
0
47
101
11
63
2
49
12
2
15
35
1
83
13
19
1
11
I
9
I
2
I
0
I
0
I
-2
p
16
x
4
rand
x
1
+
x
2
@d
x
1
a
x
5
order
x
5
first
x
6
should
x
4
Hash
x
16
new_from_literal
x
1
s
s
36
SELECT * FROM test ORDER BY a LIMIT 
x
4
to_s
x
3
[]=
x
2
==
x
4
last
s
41
SELECT * FROM test ORDER BY a DESC LIMIT 
p
9
I
0
I
983
I
e
I
984
I
3b
I
985
I
49
I
986
I
76
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
i
x
1
r
s
79
should return the first matching record if a block is given without an argument
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
65
39
0
56
1
50
2
0
49
3
0
44
43
4
79
49
5
1
13
7
6
7
7
64
49
8
2
15
83
9
15
39
0
7
10
49
11
1
56
12
50
13
0
49
3
0
44
43
4
79
49
5
1
13
7
6
7
14
64
49
8
2
15
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
26
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
z
x
1
>
p
3
I
0
I
98a
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
first
x
6
should
x
4
Hash
x
16
new_from_literal
x
1
s
s
41
SELECT * FROM test WHERE (z > 26) LIMIT 1
x
3
[]=
x
2
==
x
4
name
x
5
order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
26
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
z
x
1
>
p
3
I
0
I
98b
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
last
s
60
SELECT * FROM test WHERE (z > 26) ORDER BY name DESC LIMIT 1
p
5
I
0
I
98a
I
1e
I
98b
I
41
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
80
should combine block and standard argument filters if argument is not an Integer
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
86
39
0
44
43
1
79
49
2
1
13
7
3
4
25
49
4
2
15
56
5
50
6
1
49
7
0
44
43
1
79
49
2
1
13
7
8
7
9
64
49
4
2
15
83
10
15
39
0
7
11
49
12
1
7
13
64
4
16
56
14
50
15
2
49
7
0
44
43
1
79
49
2
1
13
7
8
7
16
64
49
4
2
15
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
2
@d
x
4
Hash
x
16
new_from_literal
x
1
y
x
3
[]=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
26
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
z
x
1
>
p
3
I
0
I
98f
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
first
x
6
should
x
1
s
s
56
SELECT * FROM test WHERE ((z > 26) AND (y = 25)) LIMIT 1
x
2
==
x
4
name
x
5
order
s
5
y = ?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
26
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
z
x
1
>
p
3
I
0
I
990
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
last
s
75
SELECT * FROM test WHERE ((z > 26) AND (y = 16)) ORDER BY name DESC LIMIT 1
p
5
I
0
I
98f
I
2e
I
990
I
56
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
100
should filter and return an array of records if an Integer argument is provided and a block is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
122
5
4
10
47
49
0
1
4
10
81
1
19
0
15
39
2
7
3
49
4
1
20
0
56
5
50
6
1
49
7
0
44
43
8
79
49
9
1
13
7
10
7
11
20
0
47
101
12
63
2
49
13
2
15
35
1
83
14
19
1
15
5
4
10
47
49
0
1
4
10
81
1
19
0
15
39
2
7
3
49
4
1
20
0
56
15
50
16
1
49
7
0
44
43
8
79
49
9
1
13
7
10
7
17
20
0
47
101
12
63
2
49
13
2
15
35
1
83
14
19
1
11
I
9
I
2
I
0
I
0
I
-2
p
18
x
4
rand
x
1
+
x
2
@d
x
1
a
x
5
order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
26
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
z
x
1
>
p
3
I
0
I
995
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
first
x
6
should
x
4
Hash
x
16
new_from_literal
x
1
s
s
51
SELECT * FROM test WHERE (z > 26) ORDER BY a LIMIT 
x
4
to_s
x
3
[]=
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
4
26
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
z
x
1
>
p
3
I
0
I
997
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
last
s
56
SELECT * FROM test WHERE (z > 26) ORDER BY a DESC LIMIT 
p
9
I
0
I
994
I
e
I
995
I
3d
I
996
I
4b
I
997
I
7a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
i
x
1
r
s
39
#last should raise if no order is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
70
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
15
5
56
9
47
50
1
0
5
48
5
49
10
1
15
5
56
11
47
50
1
0
5
48
5
49
10
1
11
I
4
I
0
I
0
I
0
I
-2
p
12
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
2
@d
x
4
last
p
3
I
0
I
99b
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
39
0
80
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
2
@d
x
4
last
p
3
I
0
I
99c
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
39
0
7
1
49
2
1
49
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
1
a
x
5
order
x
4
last
p
3
I
0
I
99d
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
should_not
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
39
0
7
1
49
2
1
80
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
1
a
x
5
order
x
4
last
p
3
I
0
I
99e
I
c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
99b
I
15
I
99c
I
2a
I
99d
I
38
I
99e
I
46
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
#last should invert the order
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
148
39
0
7
1
49
2
1
49
3
0
49
4
0
44
43
5
79
49
6
1
13
7
7
7
8
64
49
9
2
15
83
10
15
39
0
45
11
12
7
13
49
14
1
49
2
1
49
3
0
49
4
0
44
43
5
79
49
6
1
13
7
7
7
15
64
49
9
2
15
83
10
15
39
0
7
16
7
17
49
2
2
49
3
0
49
4
0
44
43
5
79
49
6
1
13
7
7
7
18
64
49
9
2
15
83
10
15
39
0
45
11
19
7
20
49
14
1
7
21
49
2
2
49
3
0
49
4
0
44
43
5
79
49
6
1
13
7
7
7
22
64
49
9
2
15
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
23
x
2
@d
x
1
a
x
5
order
x
4
last
x
6
should
x
4
Hash
x
16
new_from_literal
x
1
s
s
42
SELECT * FROM test ORDER BY a DESC LIMIT 1
x
3
[]=
x
2
==
x
6
Sequel
n
x
1
b
x
4
desc
s
41
SELECT * FROM test ORDER BY b ASC LIMIT 1
x
1
c
x
1
d
s
50
SELECT * FROM test ORDER BY c DESC, d DESC LIMIT 1
n
x
1
e
x
1
f
s
49
SELECT * FROM test ORDER BY e ASC, f DESC LIMIT 1
p
9
I
0
I
9a2
I
21
I
9a3
I
48
I
9a4
I
6b
I
9a5
I
94
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
19
I
0
I
971
I
8
I
976
I
13
I
97b
I
1e
I
982
I
29
I
989
I
34
I
98e
I
3f
I
993
I
4a
I
99a
I
55
I
9a1
I
60
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
Dataset compound operations
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
129
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
25
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
44
43
8
79
49
9
1
13
7
10
79
49
11
2
15
49
12
1
38
13
15
45
0
14
43
2
13
71
3
47
9
78
47
49
4
0
13
1
47
49
5
1
15
8
82
1
49
3
1
7
15
49
7
1
44
43
8
79
49
9
1
13
7
10
80
49
11
2
15
49
12
1
38
16
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
1
a
x
4
from
x
4
Hash
x
16
new_from_literal
x
1
z
x
3
[]=
x
6
filter
x
2
@a
n
x
1
b
x
2
@b
p
5
I
0
I
9ab
I
36
I
9ac
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
34
should support UNION and UNION ALL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
73
39
0
39
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
1
39
0
2
49
2
2
49
3
0
49
4
0
7
7
64
83
6
15
39
1
39
0
44
43
8
79
49
9
1
13
7
10
2
49
11
2
15
49
2
2
49
3
0
49
4
0
7
7
64
83
6
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
2
@a
x
2
@b
x
5
union
x
3
sql
x
6
should
s
87
SELECT * FROM (SELECT * FROM a WHERE (z = 1) UNION SELECT * FROM b WHERE (z = 2)) AS t1
x
2
==
s
91
SELECT * FROM (SELECT * FROM b WHERE (z = 2) UNION ALL SELECT * FROM a WHERE (z = 1)) AS t1
x
4
Hash
x
16
new_from_literal
x
3
all
x
3
[]=
p
7
I
0
I
9b0
I
13
I
9b1
I
27
I
9b2
I
49
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
42
should support INTERSECT and INTERSECT ALL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
73
39
0
39
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
1
39
0
2
49
2
2
49
3
0
49
4
0
7
7
64
83
6
15
39
1
39
0
44
43
8
79
49
9
1
13
7
10
2
49
11
2
15
49
2
2
49
3
0
49
4
0
7
7
64
83
6
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
2
@a
x
2
@b
x
9
intersect
x
3
sql
x
6
should
s
91
SELECT * FROM (SELECT * FROM a WHERE (z = 1) INTERSECT SELECT * FROM b WHERE (z = 2)) AS t1
x
2
==
s
95
SELECT * FROM (SELECT * FROM b WHERE (z = 2) INTERSECT ALL SELECT * FROM a WHERE (z = 1)) AS t1
x
4
Hash
x
16
new_from_literal
x
3
all
x
3
[]=
p
7
I
0
I
9b6
I
13
I
9b7
I
27
I
9b8
I
49
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
36
should support EXCEPT and EXCEPT ALL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
73
39
0
39
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
1
39
0
2
49
2
2
49
3
0
49
4
0
7
7
64
83
6
15
39
1
39
0
44
43
8
79
49
9
1
13
7
10
2
49
11
2
15
49
2
2
49
3
0
49
4
0
7
7
64
83
6
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
2
@a
x
2
@b
x
6
except
x
3
sql
x
6
should
s
88
SELECT * FROM (SELECT * FROM a WHERE (z = 1) EXCEPT SELECT * FROM b WHERE (z = 2)) AS t1
x
2
==
s
92
SELECT * FROM (SELECT * FROM b WHERE (z = 2) EXCEPT ALL SELECT * FROM a WHERE (z = 1)) AS t1
x
4
Hash
x
16
new_from_literal
x
3
all
x
3
[]=
p
7
I
0
I
9bc
I
13
I
9bd
I
27
I
9be
I
49
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should support :alias option for specifying identifier
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
105
39
0
39
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
2
49
8
0
49
9
0
7
10
64
83
11
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
12
2
49
8
0
49
9
0
7
13
64
83
11
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
14
2
49
8
0
49
9
0
7
15
64
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
16
x
2
@a
x
2
@b
x
4
Hash
x
16
new_from_literal
x
5
alias
x
2
xx
x
3
[]=
x
5
union
x
3
sql
x
6
should
s
87
SELECT * FROM (SELECT * FROM a WHERE (z = 1) UNION SELECT * FROM b WHERE (z = 2)) AS xx
x
2
==
x
9
intersect
s
91
SELECT * FROM (SELECT * FROM a WHERE (z = 1) INTERSECT SELECT * FROM b WHERE (z = 2)) AS xx
x
6
except
s
88
SELECT * FROM (SELECT * FROM a WHERE (z = 1) EXCEPT SELECT * FROM b WHERE (z = 2)) AS xx
p
7
I
0
I
9c2
I
23
I
9c3
I
46
I
9c4
I
69
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
89
should support :from_self=>false option to not wrap the compound in a SELECT * FROM (...)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
228
39
0
39
1
44
43
2
79
49
3
1
13
7
4
3
49
5
2
15
49
6
2
49
7
0
49
8
0
7
9
64
83
10
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
3
49
5
2
15
49
11
2
49
7
0
49
8
0
7
12
64
83
10
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
3
49
5
2
15
49
13
2
49
7
0
49
8
0
7
14
64
83
10
15
39
0
39
1
44
43
2
80
49
3
1
13
7
4
3
49
5
2
15
13
7
15
2
49
5
2
15
49
6
2
49
7
0
49
8
0
7
16
64
83
10
15
39
0
39
1
44
43
2
80
49
3
1
13
7
4
3
49
5
2
15
13
7
15
2
49
5
2
15
49
11
2
49
7
0
49
8
0
7
17
64
83
10
15
39
0
39
1
44
43
2
80
49
3
1
13
7
4
3
49
5
2
15
13
7
15
2
49
5
2
15
49
13
2
49
7
0
49
8
0
7
18
64
83
10
11
I
7
I
0
I
0
I
0
I
-2
p
19
x
2
@b
x
2
@a
x
4
Hash
x
16
new_from_literal
x
9
from_self
x
3
[]=
x
5
union
x
3
sql
x
6
should
s
65
SELECT * FROM b WHERE (z = 2) UNION SELECT * FROM a WHERE (z = 1)
x
2
==
x
9
intersect
s
69
SELECT * FROM b WHERE (z = 2) INTERSECT SELECT * FROM a WHERE (z = 1)
x
6
except
s
66
SELECT * FROM b WHERE (z = 2) EXCEPT SELECT * FROM a WHERE (z = 1)
x
3
all
s
69
SELECT * FROM b WHERE (z = 2) UNION ALL SELECT * FROM a WHERE (z = 1)
s
73
SELECT * FROM b WHERE (z = 2) INTERSECT ALL SELECT * FROM a WHERE (z = 1)
s
70
SELECT * FROM b WHERE (z = 2) EXCEPT ALL SELECT * FROM a WHERE (z = 1)
p
13
I
0
I
9c8
I
22
I
9c9
I
44
I
9ca
I
66
I
9cc
I
90
I
9cd
I
ba
I
9ce
I
e4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
90
should raise an InvalidOperation if INTERSECT or EXCEPT is used and they are not supported
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
94
39
0
7
1
56
2
50
3
1
15
5
56
4
47
50
5
0
5
45
6
7
43
8
47
49
9
1
49
10
1
15
5
56
11
47
50
5
0
5
45
6
12
43
8
47
49
9
1
49
10
1
15
5
56
13
47
50
5
0
5
45
6
14
43
8
47
49
9
1
49
10
1
15
5
56
15
47
50
5
0
5
45
6
16
43
8
47
49
9
1
49
10
1
11
I
4
I
0
I
0
I
0
I
-2
p
17
x
2
@a
x
26
supports_intersect_except?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
9d2
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
39
1
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
2
@a
x
2
@b
x
9
intersect
p
3
I
0
I
9d3
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
16
InvalidOperation
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
39
0
39
1
2
49
2
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
x
2
@a
x
2
@b
x
9
intersect
p
3
I
0
I
9d4
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
39
1
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
2
@a
x
2
@b
x
6
except
p
3
I
0
I
9d5
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
39
0
39
1
2
49
2
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
x
2
@a
x
2
@b
x
6
except
p
3
I
0
I
9d6
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
11
I
0
I
9d2
I
a
I
9d3
I
1f
I
9d4
I
34
I
9d5
I
49
I
9d6
I
5e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
98
should raise an InvalidOperation if INTERSECT ALL or EXCEPT ALL is used and they are not supported
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
80
39
0
7
1
56
2
50
3
1
15
5
56
4
47
50
5
0
5
48
6
49
7
1
15
5
56
8
47
50
5
0
5
45
9
10
43
11
47
49
6
1
49
12
1
15
5
56
13
47
50
5
0
5
48
6
49
7
1
15
5
56
14
47
50
5
0
5
45
9
15
43
11
47
49
6
1
49
12
1
11
I
4
I
0
I
0
I
0
I
-2
p
16
x
2
@a
x
30
supports_intersect_except_all?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
9da
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
39
1
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
2
@a
x
2
@b
x
9
intersect
p
3
I
0
I
9db
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
11
raise_error
x
10
should_not
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
39
0
39
1
2
49
2
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
x
2
@a
x
2
@b
x
9
intersect
p
3
I
0
I
9dc
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
Sequel
n
x
16
InvalidOperation
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
39
1
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
2
@a
x
2
@b
x
6
except
p
3
I
0
I
9dd
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
39
0
39
1
2
49
2
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
x
2
@a
x
2
@b
x
6
except
p
3
I
0
I
9de
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
11
I
0
I
9da
I
a
I
9db
I
18
I
9dc
I
2d
I
9dd
I
3b
I
9de
I
50
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
should handle chained compound operations
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
75
39
0
39
1
49
2
1
39
0
2
49
2
2
49
3
0
49
4
0
7
5
64
83
6
15
39
0
39
1
2
49
7
2
39
0
49
7
1
49
3
0
49
4
0
7
8
64
83
6
15
39
0
39
1
49
9
1
39
0
2
49
9
2
49
3
0
49
4
0
7
10
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
2
@a
x
2
@b
x
5
union
x
3
sql
x
6
should
s
149
SELECT * FROM (SELECT * FROM (SELECT * FROM a WHERE (z = 1) UNION SELECT * FROM b WHERE (z = 2)) AS t1 UNION ALL SELECT * FROM a WHERE (z = 1)) AS t1
x
2
==
x
9
intersect
s
157
SELECT * FROM (SELECT * FROM (SELECT * FROM a WHERE (z = 1) INTERSECT ALL SELECT * FROM b WHERE (z = 2)) AS t1 INTERSECT SELECT * FROM a WHERE (z = 1)) AS t1
x
6
except
s
151
SELECT * FROM (SELECT * FROM (SELECT * FROM a WHERE (z = 1) EXCEPT SELECT * FROM b WHERE (z = 2)) AS t1 EXCEPT ALL SELECT * FROM a WHERE (z = 1)) AS t1
p
7
I
0
I
9e2
I
19
I
9e3
I
32
I
9e4
I
4b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
107
should use a subselect when using a compound operation with a dataset that already has a compound operation
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
75
39
0
39
1
39
0
2
49
2
2
49
2
1
49
3
0
49
4
0
7
5
64
83
6
15
39
0
39
1
39
0
49
7
1
2
49
7
2
49
3
0
49
4
0
7
8
64
83
6
15
39
0
39
1
39
0
2
49
9
2
49
9
1
49
3
0
49
4
0
7
10
64
83
6
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
2
@a
x
2
@b
x
5
union
x
3
sql
x
6
should
s
149
SELECT * FROM (SELECT * FROM a WHERE (z = 1) UNION SELECT * FROM (SELECT * FROM b WHERE (z = 2) UNION ALL SELECT * FROM a WHERE (z = 1)) AS t1) AS t1
x
2
==
x
9
intersect
s
157
SELECT * FROM (SELECT * FROM a WHERE (z = 1) INTERSECT ALL SELECT * FROM (SELECT * FROM b WHERE (z = 2) INTERSECT SELECT * FROM a WHERE (z = 1)) AS t1) AS t1
x
6
except
s
151
SELECT * FROM (SELECT * FROM a WHERE (z = 1) EXCEPT SELECT * FROM (SELECT * FROM b WHERE (z = 2) EXCEPT ALL SELECT * FROM a WHERE (z = 1)) AS t1) AS t1
p
7
I
0
I
9e8
I
19
I
9e9
I
32
I
9ea
I
4b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
70
should order and limit properly when using UNION, INTERSECT, or EXCEPT
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
225
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
15
39
8
39
8
49
9
1
80
49
10
1
49
11
0
49
12
0
7
13
64
83
14
15
39
8
80
49
10
1
39
8
49
15
1
49
11
0
49
12
0
7
16
64
83
14
15
39
8
39
8
80
49
10
1
49
17
1
49
11
0
49
12
0
7
18
64
83
14
15
39
8
39
8
49
9
1
7
19
49
20
1
49
11
0
49
12
0
7
21
64
83
14
15
39
8
7
19
49
20
1
39
8
49
15
1
49
11
0
49
12
0
7
22
64
83
14
15
39
8
39
8
7
19
49
20
1
49
17
1
49
11
0
49
12
0
7
23
64
83
14
15
39
8
80
49
10
1
7
24
49
20
1
39
8
4
3
49
10
1
7
25
49
20
1
49
9
1
7
26
49
20
1
4
4
49
10
1
49
11
0
49
12
0
7
27
64
83
14
11
I
4
I
0
I
0
I
0
I
-2
p
28
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
test
x
4
from
x
8
@dataset
x
5
union
x
5
limit
x
3
sql
x
6
should
s
73
SELECT * FROM (SELECT * FROM test UNION SELECT * FROM test) AS t1 LIMIT 2
x
2
==
x
9
intersect
s
99
SELECT * FROM (SELECT * FROM (SELECT * FROM test LIMIT 2) AS t1 INTERSECT SELECT * FROM test) AS t1
x
6
except
s
96
SELECT * FROM (SELECT * FROM test EXCEPT SELECT * FROM (SELECT * FROM test LIMIT 2) AS t1) AS t1
x
3
num
x
5
order
s
78
SELECT * FROM (SELECT * FROM test UNION SELECT * FROM test) AS t1 ORDER BY num
s
104
SELECT * FROM (SELECT * FROM (SELECT * FROM test ORDER BY num) AS t1 INTERSECT SELECT * FROM test) AS t1
s
101
SELECT * FROM (SELECT * FROM test EXCEPT SELECT * FROM (SELECT * FROM test ORDER BY num) AS t1) AS t1
x
1
a
x
1
b
x
1
c
s
166
SELECT * FROM (SELECT * FROM (SELECT * FROM test ORDER BY a LIMIT 2) AS t1 UNION SELECT * FROM (SELECT * FROM test ORDER BY b LIMIT 3) AS t1) AS t1 ORDER BY c LIMIT 4
p
19
I
0
I
9ee
I
24
I
9ef
I
3b
I
9f0
I
52
I
9f1
I
69
I
9f3
I
81
I
9f4
I
99
I
9f5
I
b1
I
9f7
I
db
I
9f8
I
e1
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
87
should hoist WITH clauses in given dataset if dataset doesn't support WITH in subselect
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
216
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
19
0
15
20
0
7
6
56
7
50
8
1
15
20
0
7
9
56
10
50
8
1
15
20
0
7
11
49
12
1
20
0
7
13
49
12
1
7
13
20
0
7
14
49
12
1
49
15
2
44
43
16
79
49
17
1
13
7
18
3
49
19
2
15
49
20
2
49
21
0
49
22
0
7
23
64
83
24
15
20
0
7
11
49
12
1
20
0
7
13
49
12
1
7
13
20
0
7
14
49
12
1
49
15
2
49
25
1
49
21
0
49
22
0
7
26
64
83
24
15
20
0
7
11
49
12
1
7
11
20
0
7
27
49
12
1
49
15
2
20
0
7
13
49
12
1
7
13
20
0
7
14
49
12
1
49
15
2
44
43
16
79
49
17
1
13
7
18
3
49
19
2
15
49
28
2
49
21
0
49
22
0
7
29
64
83
24
11
I
8
I
1
I
0
I
0
I
-2
p
30
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
13
supports_cte?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
9fd
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
26
supports_cte_in_subselect?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
9fe
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
1
a
x
4
from
x
1
c
x
1
d
x
4
with
x
4
Hash
x
16
new_from_literal
x
9
from_self
x
3
[]=
x
5
union
x
3
sql
x
6
should
s
65
WITH c AS (SELECT * FROM d) SELECT * FROM a UNION SELECT * FROM c
x
2
==
x
6
except
s
88
WITH c AS (SELECT * FROM d) SELECT * FROM (SELECT * FROM a EXCEPT SELECT * FROM c) AS t1
x
1
b
x
9
intersect
s
93
WITH a AS (SELECT * FROM b), c AS (SELECT * FROM d) SELECT * FROM a INTERSECT SELECT * FROM c
p
13
I
0
I
9fc
I
1f
I
9fd
I
29
I
9fe
I
33
I
9ff
I
6b
I
a00
I
94
I
a01
I
d8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
p
25
I
0
I
9aa
I
8
I
9af
I
13
I
9b5
I
1e
I
9bb
I
29
I
9c1
I
34
I
9c7
I
3f
I
9d1
I
4a
I
9d9
I
55
I
9e1
I
60
I
9e7
I
6b
I
9ed
I
76
I
9fb
I
81
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
10
Dataset#[]
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
5
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
56
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
79
80
49
5
2
15
13
4
3
4
4
49
5
2
15
49
5
2
15
49
6
1
38
7
15
39
7
7
8
49
9
1
38
10
11
I
9
I
0
I
0
I
0
I
-2
p
11
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
3
[]=
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
2
@d
p
5
I
0
I
a07
I
2e
I
a08
I
38
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
72
should return a single record filtered according to the given conditions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
141
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
49
7
0
44
43
1
80
49
2
1
13
79
80
49
5
2
15
13
4
3
4
4
49
5
2
15
83
8
15
39
9
49
10
0
49
7
0
7
11
64
35
1
83
8
15
39
0
44
43
1
79
49
2
1
13
7
12
44
43
13
4
5
4
45
49
14
2
49
5
2
15
49
6
1
49
7
0
44
43
1
80
49
2
1
13
79
80
49
5
2
15
13
4
3
4
4
49
5
2
15
83
8
15
39
9
49
10
0
49
7
0
7
15
64
35
1
83
8
11
I
8
I
0
I
0
I
0
I
-2
p
16
x
2
@d
x
4
Hash
x
16
new_from_literal
x
4
name
s
4
didi
x
3
[]=
x
2
[]
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
49
SELECT * FROM items WHERE (name = 'didi') LIMIT 1
x
2
id
x
5
Range
x
3
new
s
60
SELECT * FROM items WHERE ((id >= 5) AND (id <= 45)) LIMIT 1
p
9
I
0
I
a0c
I
33
I
a0d
I
43
I
a0f
I
7d
I
a10
I
8d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
5
I
0
I
a06
I
8
I
a0b
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
Dataset#single_record
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
45
0
1
49
2
0
38
3
11
I
2
I
0
I
0
I
0
I
-2
p
4
x
6
Sequel
n
x
4
mock
x
3
@db
p
3
I
0
I
a16
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
56
should call each with a limit of 1 and return the record
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
72
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
13
18
2
49
5
1
15
15
39
0
7
6
49
7
1
49
8
0
49
9
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
83
10
15
39
0
49
11
0
49
9
0
7
12
64
35
1
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@db
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
6
fetch=
x
4
test
x
2
[]
x
13
single_record
x
6
should
x
2
==
x
4
sqls
s
26
SELECT * FROM test LIMIT 1
p
7
I
0
I
a1a
I
19
I
a1b
I
38
I
a1c
I
48
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
41
should return nil if no record is present
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
7
1
49
2
1
49
3
0
5
48
4
49
5
1
15
39
0
49
6
0
49
5
0
7
7
64
35
1
83
8
11
I
3
I
0
I
0
I
0
I
-2
p
9
x
3
@db
x
4
test
x
2
[]
x
13
single_record
x
6
be_nil
x
6
should
x
4
sqls
s
26
SELECT * FROM test LIMIT 1
x
2
==
p
5
I
0
I
a20
I
11
I
a21
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
a15
I
8
I
a19
I
13
I
a1f
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
20
Dataset#single_value
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
9
1
11
I
4
I
0
I
0
I
0
I
-2
p
10
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
45
0
1
49
2
0
38
3
11
I
2
I
0
I
0
I
0
I
-2
p
4
x
6
Sequel
n
x
4
mock
x
3
@db
p
3
I
0
I
a27
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
63
should call each and return the first value of the first record
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
58
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
13
18
2
49
5
1
15
15
39
0
7
6
49
7
1
49
8
0
49
9
0
79
83
10
15
39
0
49
11
0
49
9
0
7
12
64
35
1
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@db
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
6
fetch=
x
4
test
x
2
[]
x
12
single_value
x
6
should
x
2
==
x
4
sqls
s
26
SELECT * FROM test LIMIT 1
p
7
I
0
I
a2b
I
19
I
a2c
I
2a
I
a2d
I
3a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
31
should return nil if no records
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
7
1
49
2
1
49
3
0
5
48
4
49
5
1
15
39
0
49
6
0
49
5
0
7
7
64
35
1
83
8
11
I
3
I
0
I
0
I
0
I
-2
p
9
x
3
@db
x
4
test
x
2
[]
x
12
single_value
x
6
be_nil
x
6
should
x
4
sqls
s
26
SELECT * FROM test LIMIT 1
x
2
==
p
5
I
0
I
a31
I
11
I
a32
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should work on a graphed_dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
93
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
13
18
2
49
5
1
15
15
39
0
7
6
49
7
1
7
3
49
8
1
19
0
15
20
0
20
0
7
3
35
1
44
43
1
79
49
2
1
13
7
9
7
10
49
4
2
15
49
11
3
49
12
0
49
13
0
79
83
14
15
39
0
49
15
0
49
13
0
7
16
64
35
1
83
14
11
I
9
I
1
I
0
I
0
I
-2
p
17
x
3
@db
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
6
fetch=
x
4
test
x
2
[]
x
7
columns
x
11
table_alias
x
5
test2
x
5
graph
x
12
single_value
x
6
should
x
2
==
x
4
sqls
s
91
SELECT test.a, test2.a AS test2_a FROM test LEFT OUTER JOIN test AS test2 USING (a) LIMIT 1
p
9
I
0
I
a36
I
19
I
a37
I
28
I
a38
I
4d
I
a39
I
5d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
x
2
it
p
9
I
0
I
a26
I
8
I
a2a
I
13
I
a30
I
1e
I
a35
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
11
Dataset#get
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
15
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
45
0
1
44
43
2
79
49
3
1
13
7
4
5
56
5
47
50
6
0
49
7
2
15
49
8
1
7
9
49
10
1
38
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
57
19
0
15
44
43
0
79
49
1
1
13
7
2
20
0
49
3
2
15
11
I
6
I
1
I
1
I
1
n
p
4
x
4
Hash
x
16
new_from_literal
x
4
name
x
3
[]=
p
3
I
0
I
a3f
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
s
x
4
proc
x
3
[]=
x
4
mock
x
4
test
x
2
[]
x
2
@d
p
3
I
0
I
a3f
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
54
should select the specified column and fetch its value
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
7
1
49
2
1
49
3
0
7
4
64
83
5
15
39
0
7
6
49
2
1
49
3
0
7
7
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
2
@d
x
4
name
x
3
get
x
6
should
s
29
SELECT name FROM test LIMIT 1
x
2
==
x
3
abc
s
28
SELECT abc FROM test LIMIT 1
p
5
I
0
I
a43
I
10
I
a44
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
24
should work with filters
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
7
6
49
7
1
49
8
0
7
9
64
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
6
filter
x
4
name
x
3
get
x
6
should
s
44
SELECT name FROM test WHERE (id = 1) LIMIT 1
x
2
==
p
3
I
0
I
a48
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
31
should work with aliased fields
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
49
7
1
49
8
0
7
9
64
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
6
Sequel
n
x
4
x__b
x
4
expr
x
4
name
x
2
as
x
3
get
x
6
should
s
36
SELECT x.b AS name FROM test LIMIT 1
x
2
==
p
3
I
0
I
a4c
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should accept a block that yields a virtual row
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
56
1
50
2
0
49
3
0
7
4
64
83
5
15
39
0
56
6
50
2
0
49
3
0
7
7
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
57
19
0
15
20
0
49
0
0
7
1
49
2
1
11
I
4
I
1
I
1
I
1
n
p
3
x
4
x__b
x
4
name
x
2
as
p
3
I
0
I
a50
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
3
get
x
6
should
s
36
SELECT x.b AS name FROM test LIMIT 1
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
5
79
47
49
0
1
7
1
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
1
x
x
4
name
x
2
as
p
3
I
0
I
a51
I
c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
SELECT x(1) AS name FROM test LIMIT 1
p
5
I
0
I
a50
I
10
I
a51
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
76
should raise an error if both a regular argument and block argument are used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
39
0
7
1
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
2
@d
x
4
name
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
57
19
0
15
20
0
49
0
0
7
1
49
2
1
11
I
4
I
1
I
1
I
1
n
p
3
x
4
x__b
x
4
name
x
2
as
p
3
I
0
I
a55
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
o
x
3
get
p
3
I
0
I
a55
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
a55
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should support false and nil values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
3
49
1
1
49
2
0
7
3
64
83
4
15
39
0
1
49
1
1
49
2
0
7
5
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
2
@d
x
3
get
x
6
should
s
28
SELECT 'f' FROM test LIMIT 1
x
2
==
s
29
SELECT NULL FROM test LIMIT 1
p
5
I
0
I
a59
I
f
I
a5a
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
15
I
0
I
a3e
I
8
I
a42
I
13
I
a47
I
1e
I
a4b
I
29
I
a4f
I
34
I
a54
I
3f
I
a58
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
20
Dataset#set_row_proc
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
82
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
79
49
3
1
13
7
5
79
49
6
2
15
44
43
2
79
49
3
1
13
7
5
80
49
6
2
15
35
2
49
6
2
15
49
7
1
38
8
15
39
8
7
9
49
10
1
38
11
15
39
11
5
56
12
47
50
13
0
13
18
2
49
14
1
15
11
I
a
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
a
x
3
[]=
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
57
19
0
15
20
0
7
0
20
0
7
1
49
2
1
80
81
3
13
18
3
49
4
2
15
15
20
0
11
I
6
I
1
I
1
I
1
n
p
5
x
3
der
x
1
a
x
2
[]
x
1
+
x
3
[]=
p
3
I
0
I
a62
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
h
x
4
proc
x
9
row_proc=
p
7
I
0
I
a60
I
37
I
a61
I
41
I
a62
I
52
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
56
should cause dataset to pass all rows through the filter
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
43
39
0
49
1
0
19
0
15
20
0
56
2
50
3
0
49
4
0
4
3
4
4
35
2
83
5
15
39
6
49
7
0
49
4
0
7
8
64
35
1
83
5
11
I
5
I
1
I
0
I
0
I
-2
p
9
x
8
@dataset
x
3
all
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
57
19
0
15
20
0
7
0
49
1
1
11
I
4
I
1
I
1
I
1
n
p
2
x
3
der
x
2
[]
p
3
I
0
I
a67
I
c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
h
x
3
map
x
6
should
x
2
==
x
3
@db
x
4
sqls
s
19
SELECT * FROM items
p
7
I
0
I
a66
I
8
I
a67
I
1b
I
a68
I
2b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
4
rows
x
7
specify
s
44
should be copied over when dataset is cloned
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
79
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
49
6
0
49
7
0
44
43
1
80
49
2
1
13
7
3
79
49
4
2
15
13
7
8
4
3
49
4
2
15
44
43
1
80
49
2
1
13
7
3
80
49
4
2
15
13
7
8
4
4
49
4
2
15
35
2
83
9
11
I
7
I
0
I
0
I
0
I
-2
p
10
x
8
@dataset
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
6
filter
x
3
all
x
6
should
x
3
der
x
2
==
p
3
I
0
I
a6c
I
4f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
a5f
I
8
I
a65
I
13
I
a6b
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
10
Dataset#<<
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
45
0
1
49
2
0
38
3
11
I
2
I
0
I
0
I
0
I
-2
p
4
x
6
Sequel
n
x
4
mock
x
3
@db
p
3
I
0
I
a72
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
19
should call #insert
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
79
49
6
2
15
49
7
1
15
39
0
49
8
0
49
9
0
7
10
64
35
1
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@db
x
5
items
x
2
[]
x
4
Hash
x
16
new_from_literal
x
4
name
x
3
[]=
x
2
<<
x
4
sqls
x
6
should
s
35
INSERT INTO items (name) VALUES (1)
x
2
==
p
5
I
0
I
a76
I
1a
I
a77
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
19
should be chainable
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
79
49
6
2
15
49
7
1
39
0
7
8
49
2
1
7
5
49
9
1
49
7
1
15
39
0
49
10
0
49
11
0
7
12
64
7
13
64
35
2
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
3
@db
x
5
items
x
2
[]
x
4
Hash
x
16
new_from_literal
x
4
name
x
3
[]=
x
2
<<
x
9
old_items
x
6
select
x
4
sqls
x
6
should
s
35
INSERT INTO items (name) VALUES (1)
s
44
INSERT INTO items SELECT name FROM old_items
x
2
==
p
5
I
0
I
a7b
I
29
I
a7c
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
a71
I
8
I
a75
I
13
I
a7a
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
15
Dataset#columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
85
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
17
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
45
0
1
49
2
0
7
3
49
4
1
38
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
6
Sequel
n
x
4
mock
x
5
items
x
2
[]
x
8
@dataset
p
3
I
0
I
a82
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
58
should return the value of @columns if @columns is not nil
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
7
2
7
3
49
4
3
49
4
0
49
5
0
7
1
7
2
7
3
35
3
83
6
15
39
0
49
7
0
49
8
0
49
5
0
35
0
83
6
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
1
a
x
1
b
x
1
c
x
7
columns
x
6
should
x
2
==
x
2
db
x
4
sqls
p
5
I
0
I
a86
I
1c
I
a87
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
76
should attempt to get a single record and return @columns if @columns is nil
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
51
39
0
49
1
0
7
2
35
1
13
18
2
49
3
1
15
15
39
0
49
4
0
49
5
0
7
2
35
1
83
6
15
39
0
49
1
0
49
7
0
49
5
0
7
8
64
35
1
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
8
@dataset
x
2
db
x
1
a
x
8
columns=
x
7
columns
x
6
should
x
2
==
x
4
sqls
s
27
SELECT * FROM items LIMIT 1
p
7
I
0
I
a8b
I
11
I
a8c
I
20
I
a8d
I
33
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
should be cleared if you change the selected columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
132
39
0
49
1
0
7
2
35
1
7
3
35
1
35
2
13
18
2
49
4
1
15
15
39
0
49
5
0
49
6
0
7
2
35
1
83
7
15
39
0
49
1
0
49
8
0
49
6
0
7
9
64
35
1
83
7
15
39
0
49
5
0
49
6
0
7
2
35
1
83
7
15
39
0
49
1
0
49
8
0
49
6
0
35
0
83
7
15
39
0
56
10
50
11
0
19
0
15
20
0
49
5
0
49
6
0
7
3
35
1
83
7
15
39
0
49
1
0
49
8
0
49
6
0
7
12
64
35
1
83
7
11
I
5
I
1
I
0
I
0
I
-2
p
13
x
8
@dataset
x
2
db
x
1
a
x
1
b
x
8
columns=
x
7
columns
x
6
should
x
2
==
x
4
sqls
s
27
SELECT * FROM items LIMIT 1
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
56
0
47
50
1
0
11
I
3
I
0
I
0
I
0
I
-2
p
2
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
a96
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
foo
p
3
I
0
I
a96
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
select
s
31
SELECT foo() FROM items LIMIT 1
p
17
I
0
I
a91
I
17
I
a92
I
26
I
a93
I
39
I
a94
I
48
I
a95
I
58
I
a96
I
62
I
a97
I
71
I
a98
I
84
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
s
46
should be cleared if you change the FROM table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
101
39
0
49
1
0
7
2
35
1
7
3
35
1
35
2
13
18
2
49
4
1
15
15
39
0
49
5
0
49
6
0
7
2
35
1
83
7
15
39
0
49
1
0
49
8
0
49
6
0
7
9
64
35
1
83
7
15
39
0
7
10
49
11
1
19
0
15
20
0
49
5
0
49
6
0
7
3
35
1
83
7
15
39
0
49
1
0
49
8
0
49
6
0
7
12
64
35
1
83
7
11
I
5
I
1
I
0
I
0
I
-2
p
13
x
8
@dataset
x
2
db
x
1
a
x
1
b
x
8
columns=
x
7
columns
x
6
should
x
2
==
x
4
sqls
s
27
SELECT * FROM items LIMIT 1
x
3
foo
x
4
from
s
25
SELECT * FROM foo LIMIT 1
p
13
I
0
I
a9c
I
17
I
a9d
I
26
I
a9e
I
39
I
a9f
I
43
I
aa0
I
52
I
aa1
I
65
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
s
52
should be cleared if you join a table to the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
105
39
0
49
1
0
7
2
35
1
7
2
7
3
35
2
35
2
13
18
2
49
4
1
15
15
39
0
49
5
0
49
6
0
7
2
35
1
83
7
15
39
0
49
1
0
49
8
0
49
6
0
7
9
64
35
1
83
7
15
39
0
7
10
49
11
1
19
0
15
20
0
49
5
0
49
6
0
7
2
7
3
35
2
83
7
15
39
0
49
1
0
49
8
0
49
6
0
7
12
64
35
1
83
7
11
I
6
I
1
I
0
I
0
I
-2
p
13
x
8
@dataset
x
2
db
x
1
a
x
1
b
x
8
columns=
x
7
columns
x
6
should
x
2
==
x
4
sqls
s
27
SELECT * FROM items LIMIT 1
x
3
foo
x
10
cross_join
s
42
SELECT * FROM items CROSS JOIN foo LIMIT 1
p
13
I
0
I
aa5
I
19
I
aa6
I
28
I
aa7
I
3b
I
aa8
I
45
I
aa9
I
56
I
aaa
I
69
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
s
55
should be cleared if you set custom SQL for the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
102
39
0
49
1
0
7
2
35
1
7
3
35
1
35
2
13
18
2
49
4
1
15
15
39
0
49
5
0
49
6
0
7
2
35
1
83
7
15
39
0
49
1
0
49
8
0
49
6
0
7
9
64
35
1
83
7
15
39
0
7
10
64
49
11
1
19
0
15
20
0
49
5
0
49
6
0
7
3
35
1
83
7
15
39
0
49
1
0
49
8
0
49
6
0
7
10
64
35
1
83
7
11
I
5
I
1
I
0
I
0
I
-2
p
12
x
8
@dataset
x
2
db
x
1
a
x
1
b
x
8
columns=
x
7
columns
x
6
should
x
2
==
x
4
sqls
s
27
SELECT * FROM items LIMIT 1
s
17
SELECT b FROM foo
x
8
with_sql
p
13
I
0
I
aae
I
17
I
aaf
I
26
I
ab0
I
39
I
ab1
I
44
I
ab2
I
53
I
ab3
I
66
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
s
54
should ignore any filters, orders, or DISTINCT clauses
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
81
39
0
49
1
0
7
2
35
1
13
18
2
49
3
1
15
15
39
0
44
43
4
79
49
5
1
13
7
6
4
100
49
7
2
15
49
8
1
7
6
49
9
1
49
10
0
15
39
0
49
11
0
49
12
0
7
2
35
1
83
13
15
39
0
49
1
0
49
14
0
49
12
0
7
15
64
35
1
83
13
11
I
6
I
0
I
0
I
0
I
-2
p
16
x
8
@dataset
x
2
db
x
1
a
x
8
columns=
x
4
Hash
x
16
new_from_literal
x
1
b
x
3
[]=
x
7
filter!
x
6
order!
x
9
distinct!
x
7
columns
x
6
should
x
2
==
x
4
sqls
s
27
SELECT * FROM items LIMIT 1
p
9
I
0
I
ab7
I
11
I
ab8
I
2f
I
ab9
I
3e
I
aba
I
51
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
17
I
0
I
a81
I
8
I
a85
I
13
I
a8a
I
1e
I
a90
I
29
I
a9b
I
34
I
aa4
I
3f
I
aad
I
4a
I
ab6
I
55
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
16
Dataset#columns!
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
57
should always attempt to get a record and return @columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
122
45
0
1
44
43
2
79
49
3
1
13
7
4
7
5
7
6
7
7
35
3
7
8
7
9
7
10
35
3
35
2
49
11
2
15
49
12
1
7
13
49
14
1
19
0
15
20
0
49
15
0
49
16
0
7
5
7
6
7
7
35
3
83
17
15
20
0
49
18
0
49
19
0
49
16
0
7
20
64
35
1
83
17
15
20
0
49
15
0
49
16
0
7
8
7
9
7
10
35
3
83
17
15
20
0
49
18
0
49
19
0
49
16
0
7
20
64
35
1
83
17
11
I
a
I
1
I
0
I
0
I
-2
p
21
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
7
columns
x
1
a
x
1
b
x
1
c
x
1
d
x
1
e
x
1
f
x
3
[]=
x
4
mock
x
5
items
x
2
[]
x
8
columns!
x
6
should
x
2
==
x
2
db
x
4
sqls
s
27
SELECT * FROM items LIMIT 1
p
11
I
0
I
ac0
I
2e
I
ac1
I
41
I
ac2
I
54
I
ac3
I
67
I
ac4
I
7a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
x
7
specify
p
3
I
0
I
abf
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
14
Dataset#import
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
15
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
45
0
1
49
2
0
38
3
15
39
3
7
4
49
5
1
38
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
3
@ds
p
5
I
0
I
aca
I
9
I
acb
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
46
should return nil without a query if no values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
39
0
7
1
64
7
2
64
35
2
35
0
49
3
2
49
4
0
1
83
5
15
39
6
49
7
0
49
4
0
35
0
83
5
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
s
1
x
s
1
y
x
6
import
x
6
should
x
2
==
x
3
@db
x
4
sqls
p
5
I
0
I
acf
I
16
I
ad0
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
41
should accept string keys as column names
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
51
39
0
7
1
64
7
2
64
35
2
79
80
35
2
4
3
4
4
35
2
35
2
49
3
2
15
39
4
49
5
0
49
6
0
7
7
64
7
8
64
7
9
64
7
10
64
35
4
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
s
1
x
s
1
y
x
6
import
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
38
INSERT INTO items (x, y) VALUES (1, 2)
s
38
INSERT INTO items (x, y) VALUES (3, 4)
s
6
COMMIT
x
2
==
p
11
I
0
I
ad4
I
1a
I
ad5
I
25
I
ad6
I
28
I
ad7
I
2b
I
ad8
I
33
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
should accept a columns array and a values array
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
49
39
0
7
1
7
2
35
2
79
80
35
2
4
3
4
4
35
2
35
2
49
3
2
15
39
4
49
5
0
49
6
0
7
7
64
7
8
64
7
9
64
7
10
64
35
4
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
1
x
x
1
y
x
6
import
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
38
INSERT INTO items (x, y) VALUES (1, 2)
s
38
INSERT INTO items (x, y) VALUES (3, 4)
s
6
COMMIT
x
2
==
p
11
I
0
I
adc
I
18
I
add
I
23
I
ade
I
26
I
adf
I
29
I
ae0
I
31
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should accept a columns array and a dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
71
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
2
49
6
2
15
49
7
1
7
8
7
9
49
10
2
38
11
15
39
0
7
12
7
13
35
2
39
11
49
14
2
15
39
15
49
16
0
49
17
0
7
18
64
7
19
64
7
20
64
35
3
83
21
11
I
6
I
0
I
0
I
0
I
-2
p
22
x
3
@ds
x
4
cats
x
4
from
x
4
Hash
x
16
new_from_literal
x
4
purr
x
3
[]=
x
6
filter
x
1
a
x
1
b
x
6
select
x
4
@ds2
x
1
x
x
1
y
x
6
import
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
67
INSERT INTO items (x, y) SELECT a, b FROM cats WHERE (purr IS TRUE)
s
6
COMMIT
x
2
==
p
11
I
0
I
ae4
I
23
I
ae6
I
31
I
ae7
I
3c
I
ae8
I
3f
I
ae9
I
47
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
74
should accept a columns array and a values array with :commit_every option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
39
0
7
1
7
2
35
2
79
80
35
2
4
3
4
4
35
2
4
5
4
6
35
2
35
3
44
43
3
79
49
4
1
13
7
5
4
3
49
6
2
15
49
7
3
15
39
8
49
9
0
49
10
0
7
11
64
7
12
64
7
13
64
7
14
64
7
15
64
35
5
83
16
11
I
8
I
0
I
0
I
0
I
-2
p
17
x
3
@ds
x
1
x
x
1
y
x
4
Hash
x
16
new_from_literal
x
12
commit_every
x
3
[]=
x
6
import
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
38
INSERT INTO items (x, y) VALUES (1, 2)
s
38
INSERT INTO items (x, y) VALUES (3, 4)
s
38
INSERT INTO items (x, y) VALUES (5, 6)
s
6
COMMIT
x
2
==
p
13
I
0
I
aed
I
2e
I
aee
I
39
I
aef
I
3c
I
af0
I
3f
I
af1
I
42
I
af2
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
67
should accept a columns array and a values array with :slice option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
79
39
0
7
1
7
2
35
2
79
80
35
2
4
3
4
4
35
2
4
5
4
6
35
2
35
3
44
43
3
79
49
4
1
13
7
5
80
49
6
2
15
49
7
3
15
39
8
49
9
0
49
10
0
7
11
64
7
12
64
7
13
64
7
14
64
7
11
64
7
15
64
7
14
64
35
7
83
16
11
I
9
I
0
I
0
I
0
I
-2
p
17
x
3
@ds
x
1
x
x
1
y
x
4
Hash
x
16
new_from_literal
x
5
slice
x
3
[]=
x
6
import
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
38
INSERT INTO items (x, y) VALUES (1, 2)
s
38
INSERT INTO items (x, y) VALUES (3, 4)
s
6
COMMIT
s
38
INSERT INTO items (x, y) VALUES (5, 6)
x
2
==
p
17
I
0
I
af5
I
2d
I
af6
I
38
I
af7
I
3b
I
af8
I
3e
I
af9
I
41
I
afa
I
44
I
afb
I
47
I
afc
I
4f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
15
I
0
I
ac9
I
8
I
ace
I
13
I
ad3
I
1e
I
adb
I
29
I
ae3
I
34
I
aec
I
3f
I
af4
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
20
Dataset#multi_insert
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
118
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
23
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
110
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
79
49
3
1
13
7
5
44
43
2
78
49
3
1
49
6
2
15
49
6
2
15
49
7
1
38
8
15
39
8
7
9
49
10
1
38
11
15
44
43
2
79
49
3
1
13
7
12
7
13
64
49
6
2
15
44
43
2
79
49
3
1
13
7
12
7
14
64
49
6
2
15
44
43
2
79
49
3
1
13
7
12
7
15
64
49
6
2
15
35
3
38
16
11
I
a
I
0
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
7
servers
x
2
s1
x
3
[]=
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
3
@ds
x
4
name
s
3
abc
s
3
def
s
3
ghi
x
5
@list
p
7
I
0
I
b02
I
2c
I
b03
I
36
I
b04
I
6e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
46
should return nil without a query if no values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
35
0
49
1
1
49
2
0
1
83
3
15
39
4
49
5
0
49
2
0
35
0
83
3
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@ds
x
12
multi_insert
x
6
should
x
2
==
x
3
@db
x
4
sqls
p
5
I
0
I
b08
I
e
I
b09
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
60
should issue multiple insert statements inside a transaction
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
39
1
49
2
1
15
39
3
49
4
0
49
5
0
7
6
64
7
7
64
7
8
64
7
9
64
7
10
64
35
5
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
5
@list
x
12
multi_insert
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
39
INSERT INTO items (name) VALUES ('abc')
s
39
INSERT INTO items (name) VALUES ('def')
s
39
INSERT INTO items (name) VALUES ('ghi')
s
6
COMMIT
x
2
==
p
13
I
0
I
b0d
I
8
I
b0e
I
13
I
b0f
I
16
I
b10
I
19
I
b11
I
1c
I
b12
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should respect :server option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
39
1
44
43
2
79
49
3
1
13
7
4
7
5
49
6
2
15
49
7
2
15
39
8
49
9
0
49
10
0
7
11
64
7
12
64
7
13
64
7
14
64
7
15
64
35
5
83
16
11
I
7
I
0
I
0
I
0
I
-2
p
17
x
3
@ds
x
5
@list
x
4
Hash
x
16
new_from_literal
x
6
server
x
2
s1
x
3
[]=
x
12
multi_insert
x
3
@db
x
4
sqls
x
6
should
s
11
BEGIN -- s1
s
45
INSERT INTO items (name) VALUES ('abc') -- s1
s
45
INSERT INTO items (name) VALUES ('def') -- s1
s
45
INSERT INTO items (name) VALUES ('ghi') -- s1
s
12
COMMIT -- s1
x
2
==
p
13
I
0
I
b16
I
18
I
b17
I
23
I
b18
I
26
I
b19
I
29
I
b1a
I
2c
I
b1b
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
49
should respect existing :server option on dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
39
0
7
1
49
2
1
39
3
49
4
1
15
39
5
49
6
0
49
7
0
7
8
64
7
9
64
7
10
64
7
11
64
7
12
64
35
5
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
2
s1
x
6
server
x
5
@list
x
12
multi_insert
x
3
@db
x
4
sqls
x
6
should
s
11
BEGIN -- s1
s
45
INSERT INTO items (name) VALUES ('abc') -- s1
s
45
INSERT INTO items (name) VALUES ('def') -- s1
s
45
INSERT INTO items (name) VALUES ('ghi') -- s1
s
12
COMMIT -- s1
x
2
==
p
13
I
0
I
b1f
I
d
I
b20
I
18
I
b21
I
1b
I
b22
I
1e
I
b23
I
21
I
b24
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should respect :return=>:primary_key option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
74
39
0
79
13
18
2
49
1
1
15
15
39
2
39
3
44
43
4
79
49
5
1
13
7
6
7
7
49
8
2
15
49
9
2
49
10
0
79
80
4
3
35
3
83
11
15
39
0
49
12
0
49
10
0
7
13
64
7
14
64
7
15
64
7
16
64
7
17
64
35
5
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
18
x
3
@db
x
7
autoid=
x
3
@ds
x
5
@list
x
4
Hash
x
16
new_from_literal
x
6
return
x
11
primary_key
x
3
[]=
x
12
multi_insert
x
6
should
x
2
==
x
4
sqls
s
5
BEGIN
s
39
INSERT INTO items (name) VALUES ('abc')
s
39
INSERT INTO items (name) VALUES ('def')
s
39
INSERT INTO items (name) VALUES ('ghi')
s
6
COMMIT
p
15
I
0
I
b28
I
b
I
b29
I
2e
I
b2a
I
39
I
b2b
I
3c
I
b2c
I
3f
I
b2d
I
42
I
b2e
I
4a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
42
should handle different formats for tables
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
152
39
0
7
1
49
2
1
38
0
15
39
0
39
3
49
4
1
15
39
5
49
6
0
49
7
0
7
8
64
7
9
64
7
10
64
7
11
64
7
12
64
35
5
83
13
15
39
0
45
14
15
7
16
7
17
49
18
2
49
2
1
38
0
15
39
0
39
3
49
4
1
15
39
5
49
6
0
49
7
0
7
8
64
7
9
64
7
10
64
7
11
64
7
12
64
35
5
83
13
15
39
0
45
14
19
7
1
49
20
1
49
2
1
38
0
15
39
0
39
3
49
4
1
15
39
5
49
6
0
49
7
0
7
8
64
7
21
64
7
22
64
7
23
64
7
12
64
35
5
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
24
x
3
@ds
x
8
sch__tab
x
4
from
x
5
@list
x
12
multi_insert
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
41
INSERT INTO sch.tab (name) VALUES ('abc')
s
41
INSERT INTO sch.tab (name) VALUES ('def')
s
41
INSERT INTO sch.tab (name) VALUES ('ghi')
s
6
COMMIT
x
2
==
x
6
Sequel
n
x
3
sch
x
3
tab
x
7
qualify
n
x
10
identifier
s
42
INSERT INTO sch__tab (name) VALUES ('abc')
s
42
INSERT INTO sch__tab (name) VALUES ('def')
s
42
INSERT INTO sch__tab (name) VALUES ('ghi')
p
43
I
0
I
b32
I
a
I
b33
I
12
I
b34
I
1d
I
b35
I
20
I
b36
I
23
I
b37
I
26
I
b38
I
2e
I
b3a
I
40
I
b3b
I
48
I
b3c
I
53
I
b3d
I
56
I
b3e
I
59
I
b3f
I
5c
I
b40
I
64
I
b42
I
74
I
b43
I
7c
I
b44
I
87
I
b45
I
8a
I
b46
I
8d
I
b47
I
90
I
b48
I
98
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
69
should accept the :commit_every option for committing every x records
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
39
0
39
1
44
43
2
79
49
3
1
13
7
4
79
49
5
2
15
49
6
2
15
39
7
49
8
0
49
9
0
7
10
64
7
11
64
7
12
64
7
10
64
7
13
64
7
12
64
7
10
64
7
14
64
7
12
64
35
9
83
15
11
I
b
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
5
@list
x
4
Hash
x
16
new_from_literal
x
12
commit_every
x
3
[]=
x
12
multi_insert
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
39
INSERT INTO items (name) VALUES ('abc')
s
6
COMMIT
s
39
INSERT INTO items (name) VALUES ('def')
s
39
INSERT INTO items (name) VALUES ('ghi')
x
2
==
p
21
I
0
I
b4c
I
17
I
b4d
I
22
I
b4e
I
25
I
b4f
I
28
I
b50
I
2b
I
b51
I
2e
I
b52
I
31
I
b53
I
34
I
b54
I
37
I
b55
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
62
should accept the :slice option for committing every x records
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
57
39
0
39
1
44
43
2
79
49
3
1
13
7
4
80
49
5
2
15
49
6
2
15
39
7
49
8
0
49
9
0
7
10
64
7
11
64
7
12
64
7
13
64
7
10
64
7
14
64
7
13
64
35
7
83
15
11
I
9
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
5
@list
x
4
Hash
x
16
new_from_literal
x
5
slice
x
3
[]=
x
12
multi_insert
x
3
@db
x
4
sqls
x
6
should
s
5
BEGIN
s
39
INSERT INTO items (name) VALUES ('abc')
s
39
INSERT INTO items (name) VALUES ('def')
s
6
COMMIT
s
39
INSERT INTO items (name) VALUES ('ghi')
x
2
==
p
17
I
0
I
b59
I
17
I
b5a
I
22
I
b5b
I
25
I
b5c
I
28
I
b5d
I
2b
I
b5e
I
2e
I
b5f
I
31
I
b60
I
39
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
should accept string keys as column names
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
130
39
0
44
43
1
80
49
2
1
13
7
3
64
79
49
4
2
15
13
7
5
64
80
49
4
2
15
44
43
1
80
49
2
1
13
7
3
64
4
3
49
4
2
15
13
7
5
64
4
4
49
4
2
15
35
2
49
6
1
15
39
7
49
8
0
19
0
15
7
9
64
7
10
64
35
2
5
20
0
79
49
11
1
47
49
12
1
49
13
1
15
7
14
64
7
15
64
35
2
5
20
0
79
49
11
1
47
49
12
1
49
13
1
15
20
0
49
13
0
7
16
64
7
17
64
35
2
83
18
11
I
8
I
1
I
0
I
0
I
-2
p
19
x
3
@ds
x
4
Hash
x
16
new_from_literal
s
1
x
x
3
[]=
s
1
y
x
12
multi_insert
x
3
@db
x
4
sqls
s
38
INSERT INTO items (x, y) VALUES (1, 2)
s
38
INSERT INTO items (y, x) VALUES (2, 1)
x
6
slice!
x
7
include
x
6
should
s
38
INSERT INTO items (x, y) VALUES (3, 4)
s
38
INSERT INTO items (y, x) VALUES (4, 3)
s
5
BEGIN
s
6
COMMIT
x
2
==
p
11
I
0
I
b64
I
3c
I
b65
I
44
I
b66
I
5b
I
b67
I
72
I
b68
I
82
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
4
sqls
s
48
should not do anything if no hashes are provided
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
35
0
49
1
1
15
39
2
49
3
0
49
4
0
35
0
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@ds
x
12
multi_insert
x
3
@db
x
4
sqls
x
6
should
x
2
==
p
5
I
0
I
b6c
I
8
I
b6d
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
23
I
0
I
b01
I
8
I
b07
I
13
I
b0c
I
1e
I
b15
I
29
I
b1e
I
34
I
b27
I
3f
I
b31
I
4a
I
b4b
I
55
I
b58
I
60
I
b63
I
6b
I
b6b
I
76
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
96
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
19
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
1
x
x
4
from
x
2
@d
p
3
I
0
I
b73
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
36
should support self-changing select!
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
49
2
1
15
39
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
1
y
x
7
select!
x
3
sql
x
6
should
s
15
SELECT y FROM x
x
2
==
p
5
I
0
I
b77
I
8
I
b78
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
34
should support self-changing from!
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
49
2
1
15
39
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
1
y
x
5
from!
x
3
sql
x
6
should
s
15
SELECT * FROM y
x
2
==
p
5
I
0
I
b7c
I
8
I
b7d
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should support self-changing order!
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
49
2
1
15
39
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
2
@d
x
1
y
x
6
order!
x
3
sql
x
6
should
s
26
SELECT * FROM x ORDER BY y
x
2
==
p
5
I
0
I
b81
I
8
I
b82
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
36
should support self-changing filter!
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
35
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
15
39
0
49
6
0
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
2
@d
x
4
Hash
x
16
new_from_literal
x
1
y
x
3
[]=
x
7
filter!
x
3
sql
x
6
should
s
29
SELECT * FROM x WHERE (y = 1)
x
2
==
p
5
I
0
I
b86
I
15
I
b87
I
23
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
should support self-changing filter! with block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
56
1
50
2
0
15
39
0
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
2
@d
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
80
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
1
y
x
1
<
p
3
I
0
I
b8b
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
filter!
x
3
sql
x
6
should
s
29
SELECT * FROM x WHERE (y < 2)
x
2
==
p
5
I
0
I
b8b
I
8
I
b8c
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should raise for ! methods that don't return a dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
5
56
0
47
50
1
0
5
45
2
3
47
49
4
1
49
5
1
11
I
4
I
0
I
0
I
0
I
-2
p
6
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
2
@d
x
5
opts!
p
3
I
0
I
b90
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
9
NameError
n
x
11
raise_error
x
6
should
p
3
I
0
I
b90
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should raise for missing methods
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
57
5
56
0
47
50
1
0
5
45
2
3
47
49
4
1
49
5
1
15
5
56
6
47
50
1
0
5
45
2
7
47
49
4
1
49
5
1
15
5
56
8
47
50
1
0
5
45
2
9
47
49
4
1
49
5
1
11
I
4
I
0
I
0
I
0
I
-2
p
10
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
2
@d
x
4
xuyz
p
3
I
0
I
b94
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
9
NameError
n
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
2
@d
x
4
xyz!
p
3
I
0
I
b95
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
2
@d
x
4
xyz?
p
3
I
0
I
b96
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
7
I
0
I
b94
I
13
I
b95
I
26
I
b96
I
39
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
39
should support chaining of bang methods
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
1
79
49
5
2
15
49
6
1
49
7
0
49
8
0
7
9
64
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
2
@d
x
1
y
x
6
order!
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
7
filter!
x
3
sql
x
6
should
s
40
SELECT * FROM x WHERE (y = 1) ORDER BY y
x
2
==
p
3
I
0
I
b9a
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
19
I
0
I
b72
I
8
I
b76
I
13
I
b7b
I
1e
I
b80
I
29
I
b85
I
34
I
b8a
I
3f
I
b8f
I
4a
I
b93
I
55
I
b99
I
60
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
14
Dataset#to_csv
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
142
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
4
3
49
3
1
13
7
5
79
49
6
2
15
13
7
7
80
49
6
2
15
13
7
8
4
3
49
6
2
15
44
43
2
4
3
49
3
1
13
7
5
4
4
49
6
2
15
13
7
7
4
5
49
6
2
15
13
7
8
4
6
49
6
2
15
44
43
2
4
3
49
3
1
13
7
5
4
7
49
6
2
15
13
7
7
4
8
49
6
2
15
13
7
8
4
9
49
6
2
15
35
3
49
6
2
15
49
9
1
7
10
49
11
1
7
5
7
7
7
8
49
12
3
38
13
11
I
b
I
0
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
a
x
3
[]=
x
1
b
x
1
c
x
4
mock
x
5
items
x
2
[]
x
7
columns
x
3
@ds
p
3
I
0
I
ba0
I
8e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
49
should format a CSV representation of the records
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
39
0
49
1
0
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
3
@ds
x
6
to_csv
x
6
should
s
36
a, b, c
1, 2, 3
4, 5, 6
7, 8, 9

x
2
==
p
3
I
0
I
ba4
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
44
should exclude column titles if so specified
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
39
0
3
49
1
1
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
3
@ds
x
6
to_csv
x
6
should
s
27
1, 2, 3
4, 5, 6
7, 8, 9

x
2
==
p
3
I
0
I
ba8
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
b9f
I
8
I
ba3
I
13
I
ba7
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
18
Dataset#update_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
5
items
x
4
from
x
3
@ds
p
3
I
0
I
bae
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
21
should accept strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
7
1
64
49
2
1
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@ds
s
5
a = b
x
10
update_sql
x
6
should
s
22
UPDATE items SET a = b
x
2
==
p
3
I
0
I
bb2
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
42
should handle implicitly qualified symbols
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
8
items__a
x
1
b
x
3
[]=
x
10
update_sql
x
6
should
s
28
UPDATE items SET items.a = b
x
2
==
p
3
I
0
I
bb6
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should accept hash with string keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
44
43
1
79
49
2
1
13
7
3
64
7
4
64
49
5
2
15
49
6
1
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
4
Hash
x
16
new_from_literal
s
1
c
s
1
d
x
3
[]=
x
10
update_sql
x
6
should
s
24
UPDATE items SET c = 'd'
x
2
==
p
3
I
0
I
bba
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
40
should accept array subscript references
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
44
43
1
79
49
2
1
13
45
3
4
7
5
79
49
6
2
7
7
64
49
8
2
15
49
9
1
49
10
0
7
11
64
83
12
11
I
7
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
6
Sequel
n
x
3
day
x
9
subscript
s
1
d
x
3
[]=
x
10
update_sql
x
6
should
s
29
UPDATE items SET day[1] = 'd'
x
2
==
p
3
I
0
I
bbe
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
11
I
0
I
bad
I
8
I
bb1
I
13
I
bb5
I
1e
I
bb9
I
29
I
bbd
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
18
Dataset#insert_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
151
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
29
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
5
items
x
4
from
x
3
@ds
p
3
I
0
I
bc4
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
35
should accept hash with symbol keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
c
s
1
d
x
3
[]=
x
10
insert_sql
x
6
should
s
34
INSERT INTO items (c) VALUES ('d')
x
2
==
p
3
I
0
I
bc8
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
35
should accept hash with string keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
44
43
1
79
49
2
1
13
7
3
64
7
4
64
49
5
2
15
49
6
1
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
4
Hash
x
16
new_from_literal
s
1
c
s
1
d
x
3
[]=
x
10
insert_sql
x
6
should
s
34
INSERT INTO items (c) VALUES ('d')
x
2
==
p
3
I
0
I
bcc
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
40
should accept array subscript references
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
44
43
1
79
49
2
1
13
45
3
4
7
5
79
49
6
2
7
7
64
49
8
2
15
49
9
1
49
10
0
7
11
64
83
12
11
I
7
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
6
Sequel
n
x
3
day
x
9
subscript
s
1
d
x
3
[]=
x
10
insert_sql
x
6
should
s
39
INSERT INTO items (day[1]) VALUES ('d')
x
2
==
p
3
I
0
I
bd0
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
51
should raise an Error if the dataset has no sources
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
0
49
7
0
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
7
dataset
x
10
insert_sql
p
3
I
0
I
bd4
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
bd4
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
22
should accept datasets
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
39
0
49
1
1
49
2
0
7
3
64
83
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
3
@ds
x
10
insert_sql
x
6
should
s
37
INSERT INTO items SELECT * FROM items
x
2
==
p
3
I
0
I
bd8
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should accept datasets with columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
7
2
35
2
39
0
49
3
2
49
4
0
7
5
64
83
6
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
1
a
x
1
b
x
10
insert_sql
x
6
should
s
44
INSERT INTO items (a, b) SELECT * FROM items
x
2
==
p
3
I
0
I
bdc
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should raise if given bad values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
39
0
44
43
1
79
49
2
1
13
7
3
7
4
64
49
5
2
15
49
6
1
7
7
49
8
1
11
I
6
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
6
values
s
1
a
x
3
[]=
x
5
clone
x
11
_insert_sql
x
4
send
p
3
I
0
I
be0
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
be0
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should accept separate values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
49
39
0
79
49
1
1
49
2
0
7
3
64
83
4
15
39
0
79
80
49
1
2
49
2
0
7
5
64
83
4
15
39
0
79
80
4
3
49
1
3
49
2
0
7
6
64
83
4
11
I
5
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
10
insert_sql
x
6
should
s
28
INSERT INTO items VALUES (1)
x
2
==
s
31
INSERT INTO items VALUES (1, 2)
s
34
INSERT INTO items VALUES (1, 2, 3)
p
7
I
0
I
be4
I
f
I
be5
I
1f
I
be6
I
31
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should accept a single array of values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
79
80
4
3
35
3
49
1
1
49
2
0
7
3
64
83
4
11
I
5
I
0
I
0
I
0
I
-2
p
5
x
3
@ds
x
10
insert_sql
x
6
should
s
34
INSERT INTO items VALUES (1, 2, 3)
x
2
==
p
3
I
0
I
bea
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
should accept an array of columns and an array of values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
39
0
7
1
7
2
7
3
35
3
79
80
4
3
35
3
49
4
2
49
5
0
7
6
64
83
7
11
I
6
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
1
a
x
1
b
x
1
c
x
10
insert_sql
x
6
should
s
44
INSERT INTO items (a, b, c) VALUES (1, 2, 3)
x
2
==
p
3
I
0
I
bee
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
62
should raise an array if the columns and values differ in size
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
18
39
0
7
1
7
2
35
2
79
80
4
3
35
3
49
3
2
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
3
@ds
x
1
a
x
1
b
x
10
insert_sql
p
3
I
0
I
bf2
I
12
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
bf2
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
36
should accept a single LiteralString
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
39
0
45
1
2
7
3
64
49
4
1
49
5
1
49
6
0
7
7
64
83
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
6
Sequel
n
s
16
VALUES (1, 2, 3)
x
3
lit
x
10
insert_sql
x
6
should
s
34
INSERT INTO items VALUES (1, 2, 3)
x
2
==
p
3
I
0
I
bf6
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should accept an array of columns and an LiteralString
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
7
1
7
2
7
3
35
3
45
4
5
7
6
64
49
7
1
49
8
2
49
9
0
7
10
64
83
11
11
I
5
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
1
a
x
1
b
x
1
c
x
6
Sequel
n
s
16
VALUES (1, 2, 3)
x
3
lit
x
10
insert_sql
x
6
should
s
44
INSERT INTO items (a, b, c) VALUES (1, 2, 3)
x
2
==
p
3
I
0
I
bfa
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
29
I
0
I
bc3
I
8
I
bc7
I
13
I
bcb
I
1e
I
bcf
I
29
I
bd3
I
34
I
bd7
I
3f
I
bdb
I
4a
I
bdf
I
55
I
be3
I
60
I
be9
I
6b
I
bed
I
76
I
bf1
I
81
I
bf5
I
8c
I
bf9
I
97
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
15
Dataset#inspect
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
5
56
0
47
50
1
0
15
5
56
2
47
50
3
0
15
5
7
4
64
56
5
47
50
6
1
15
5
7
7
64
56
8
47
50
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
99
7
0
45
1
2
43
3
44
49
4
3
15
1
11
I
5
I
0
I
0
I
0
I
-2
p
5
x
14
InspectDataset
x
6
Sequel
n
x
7
Dataset
x
16
open_class_under
p
3
I
0
I
c00
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
45
26
93
0
15
29
17
0
44
7
0
3
98
1
3
30
8
23
25
92
0
27
8
28
15
7
2
8
29
1
9
43
45
3
4
7
5
7
0
49
6
2
8
44
1
11
I
5
I
0
I
0
I
0
I
-2
p
7
x
14
InspectDataset
x
22
vm_const_defined_under
s
8
constant
x
6
Object
n
x
12
remove_const
x
4
send
p
5
I
0
I
c03
I
2c
I
0
I
2d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
after
s
65
should include the class name and the corresponding SQL statement
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
88
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
49
8
0
49
9
0
7
10
64
83
11
15
45
12
13
13
71
3
47
9
67
47
49
4
0
13
1
47
49
5
1
15
8
71
1
49
3
1
7
6
49
7
1
49
8
0
49
9
0
7
14
64
83
11
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
4
blah
x
4
from
x
7
inspect
x
6
should
s
40
#<Sequel::Dataset: "SELECT * FROM blah">
x
2
==
x
14
InspectDataset
n
s
39
#<InspectDataset: "SELECT * FROM blah">
p
5
I
0
I
c07
I
2d
I
c08
I
58
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
29
should skip anonymous classes
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
202
45
0
1
13
71
2
47
9
55
47
49
3
0
13
45
0
4
13
71
2
47
9
40
47
49
3
0
13
45
5
6
43
7
47
49
8
1
15
8
48
45
5
9
43
7
49
2
1
47
49
8
1
15
8
92
45
0
10
13
71
2
47
9
81
47
49
3
0
13
45
5
11
43
7
47
49
8
1
15
8
89
45
5
12
43
7
49
2
1
49
2
1
13
71
2
47
9
111
47
49
3
0
13
1
47
49
8
1
15
8
115
1
49
2
1
7
13
49
14
1
49
15
0
49
16
0
7
17
64
83
18
15
45
0
19
13
71
2
47
9
156
47
49
3
0
13
45
20
21
47
49
8
1
15
8
162
45
20
22
49
2
1
13
71
2
47
9
181
47
49
3
0
13
1
47
49
8
1
15
8
185
1
49
2
1
7
13
49
14
1
49
15
0
49
16
0
7
23
64
83
18
11
I
6
I
0
I
0
I
0
I
-2
p
24
x
5
Class
n
x
3
new
x
8
allocate
n
x
6
Sequel
n
x
7
Dataset
x
10
initialize
n
n
n
n
x
4
blah
x
4
from
x
7
inspect
x
6
should
s
40
#<Sequel::Dataset: "SELECT * FROM blah">
x
2
==
n
x
14
InspectDataset
n
n
s
39
#<InspectDataset: "SELECT * FROM blah">
p
5
I
0
I
c0c
I
84
I
c0d
I
ca
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
bff
I
8
I
c02
I
10
I
c06
I
1b
I
c0b
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
11
Dataset#all
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
78
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
7
5
79
49
6
2
15
13
7
7
80
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
35
2
49
6
2
15
49
8
1
7
9
49
10
1
38
11
11
I
a
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
x
x
3
[]=
x
1
y
x
4
mock
x
5
items
x
2
[]
x
8
@dataset
p
3
I
0
I
c13
I
4e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
39
should return an array with all records
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
80
39
0
49
1
0
49
2
0
44
43
3
80
49
4
1
13
7
5
79
49
6
2
15
13
7
7
80
49
6
2
15
44
43
3
80
49
4
1
13
7
5
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
35
2
83
8
15
39
0
49
9
0
49
10
0
49
2
0
7
11
64
35
1
83
8
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
8
@dataset
x
3
all
x
6
should
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
1
y
x
2
==
x
2
db
x
4
sqls
s
19
SELECT * FROM items
p
5
I
0
I
c17
I
3d
I
c18
I
50
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
49
should iterate over the array if a block is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
107
35
0
19
0
15
39
0
56
1
50
2
0
49
3
0
44
43
4
80
49
5
1
13
7
6
79
49
7
2
15
13
7
8
80
49
7
2
15
44
43
4
80
49
5
1
13
7
6
4
3
49
7
2
15
13
7
8
4
4
49
7
2
15
35
2
83
9
15
20
0
49
3
0
79
80
35
2
4
3
4
4
35
2
35
2
83
9
15
39
0
49
10
0
49
11
0
49
3
0
7
12
64
35
1
83
9
11
I
8
I
1
I
0
I
0
I
-2
p
13
x
8
@dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
57
19
0
15
21
1
0
20
0
7
0
7
1
49
2
2
49
3
1
11
I
6
I
1
I
1
I
1
n
p
4
x
1
x
x
1
y
x
9
values_at
x
2
<<
p
3
I
0
I
c1d
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
3
all
x
6
should
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
1
y
x
2
==
x
2
db
x
4
sqls
s
19
SELECT * FROM items
p
9
I
0
I
c1c
I
5
I
c1d
I
44
I
c1e
I
58
I
c1f
I
6b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
a
p
7
I
0
I
c12
I
8
I
c16
I
13
I
c1b
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
12
Dataset#grep
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
162
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
15
5
7
29
64
56
30
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
31
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
45
0
1
49
2
0
7
3
49
4
1
38
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
6
Sequel
n
x
4
mock
x
5
posts
x
2
[]
x
3
@ds
p
3
I
0
I
c25
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
36
should format a SQL filter correctly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
7
1
7
2
64
49
3
2
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
5
title
s
4
ruby
x
4
grep
x
3
sql
x
6
should
s
47
SELECT * FROM posts WHERE ((title LIKE 'ruby'))
x
2
==
p
3
I
0
I
c29
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
31
should support multiple columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
39
0
7
1
7
2
35
2
7
3
64
49
4
2
49
5
0
49
6
0
7
7
64
83
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
5
title
x
4
body
s
4
ruby
x
4
grep
x
3
sql
x
6
should
s
69
SELECT * FROM posts WHERE ((title LIKE 'ruby') OR (body LIKE 'ruby'))
x
2
==
p
3
I
0
I
c2d
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
36
should support multiple search terms
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
7
1
7
2
64
7
3
64
35
2
49
4
2
49
5
0
49
6
0
7
7
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
5
title
s
3
abc
s
3
def
x
4
grep
x
3
sql
x
6
should
s
68
SELECT * FROM posts WHERE ((title LIKE 'abc') OR (title LIKE 'def'))
x
2
==
p
3
I
0
I
c31
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
should support multiple columns and search terms
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
39
0
7
1
7
2
35
2
7
3
64
7
4
64
35
2
49
5
2
49
6
0
49
7
0
7
8
64
83
9
11
I
5
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
5
title
x
4
body
s
3
abc
s
3
def
x
4
grep
x
3
sql
x
6
should
s
110
SELECT * FROM posts WHERE ((title LIKE 'abc') OR (title LIKE 'def') OR (body LIKE 'abc') OR (body LIKE 'def'))
x
2
==
p
3
I
0
I
c35
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
39
should support the :all_patterns option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
46
39
0
7
1
7
2
35
2
7
3
64
7
4
64
35
2
44
43
5
79
49
6
1
13
7
7
2
49
8
2
15
49
9
3
49
10
0
49
11
0
7
12
64
83
13
11
I
8
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
5
title
x
4
body
s
3
abc
s
3
def
x
4
Hash
x
16
new_from_literal
x
12
all_patterns
x
3
[]=
x
4
grep
x
3
sql
x
6
should
s
115
SELECT * FROM posts WHERE (((title LIKE 'abc') OR (body LIKE 'abc')) AND ((title LIKE 'def') OR (body LIKE 'def')))
x
2
==
p
3
I
0
I
c39
I
2e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should support the :all_columns option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
46
39
0
7
1
7
2
35
2
7
3
64
7
4
64
35
2
44
43
5
79
49
6
1
13
7
7
2
49
8
2
15
49
9
3
49
10
0
49
11
0
7
12
64
83
13
11
I
8
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
5
title
x
4
body
s
3
abc
s
3
def
x
4
Hash
x
16
new_from_literal
x
11
all_columns
x
3
[]=
x
4
grep
x
3
sql
x
6
should
s
115
SELECT * FROM posts WHERE (((title LIKE 'abc') OR (title LIKE 'def')) AND ((body LIKE 'abc') OR (body LIKE 'def')))
x
2
==
p
3
I
0
I
c3d
I
2e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should support the :case_insensitive option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
46
39
0
7
1
7
2
35
2
7
3
64
7
4
64
35
2
44
43
5
79
49
6
1
13
7
7
2
49
8
2
15
49
9
3
49
10
0
49
11
0
7
12
64
83
13
11
I
8
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
5
title
x
4
body
s
3
abc
s
3
def
x
4
Hash
x
16
new_from_literal
x
16
case_insensitive
x
3
[]=
x
4
grep
x
3
sql
x
6
should
s
114
SELECT * FROM posts WHERE ((title ILIKE 'abc') OR (title ILIKE 'def') OR (body ILIKE 'abc') OR (body ILIKE 'def'))
x
2
==
p
3
I
0
I
c41
I
2e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
66
should support the :all_patterns and :all_columns options together
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
39
0
7
1
7
2
35
2
7
3
64
7
4
64
35
2
44
43
5
80
49
6
1
13
7
7
2
49
8
2
15
13
7
9
2
49
8
2
15
49
10
3
49
11
0
49
12
0
7
13
64
83
14
11
I
8
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
5
title
x
4
body
s
3
abc
s
3
def
x
4
Hash
x
16
new_from_literal
x
12
all_patterns
x
3
[]=
x
11
all_columns
x
4
grep
x
3
sql
x
6
should
s
113
SELECT * FROM posts WHERE ((title LIKE 'abc') AND (body LIKE 'abc') AND (title LIKE 'def') AND (body LIKE 'def'))
x
2
==
p
3
I
0
I
c45
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
71
should support the :all_patterns and :case_insensitive options together
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
39
0
7
1
7
2
35
2
7
3
64
7
4
64
35
2
44
43
5
80
49
6
1
13
7
7
2
49
8
2
15
13
7
9
2
49
8
2
15
49
10
3
49
11
0
49
12
0
7
13
64
83
14
11
I
8
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
5
title
x
4
body
s
3
abc
s
3
def
x
4
Hash
x
16
new_from_literal
x
12
all_patterns
x
3
[]=
x
16
case_insensitive
x
4
grep
x
3
sql
x
6
should
s
119
SELECT * FROM posts WHERE (((title ILIKE 'abc') OR (body ILIKE 'abc')) AND ((title ILIKE 'def') OR (body ILIKE 'def')))
x
2
==
p
3
I
0
I
c49
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
70
should support the :all_columns and :case_insensitive options together
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
39
0
7
1
7
2
35
2
7
3
64
7
4
64
35
2
44
43
5
80
49
6
1
13
7
7
2
49
8
2
15
13
7
9
2
49
8
2
15
49
10
3
49
11
0
49
12
0
7
13
64
83
14
11
I
8
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
5
title
x
4
body
s
3
abc
s
3
def
x
4
Hash
x
16
new_from_literal
x
11
all_columns
x
3
[]=
x
16
case_insensitive
x
4
grep
x
3
sql
x
6
should
s
119
SELECT * FROM posts WHERE (((title ILIKE 'abc') OR (title ILIKE 'def')) AND ((body ILIKE 'abc') OR (body ILIKE 'def')))
x
2
==
p
3
I
0
I
c4d
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
86
should support the :all_patterns, :all_columns, and :case_insensitive options together
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
39
0
7
1
7
2
35
2
7
3
64
7
4
64
35
2
44
43
5
4
3
49
6
1
13
7
7
2
49
8
2
15
13
7
9
2
49
8
2
15
13
7
10
2
49
8
2
15
49
11
3
49
12
0
49
13
0
7
14
64
83
15
11
I
8
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
5
title
x
4
body
s
3
abc
s
3
def
x
4
Hash
x
16
new_from_literal
x
12
all_patterns
x
3
[]=
x
11
all_columns
x
16
case_insensitive
x
4
grep
x
3
sql
x
6
should
s
117
SELECT * FROM posts WHERE ((title ILIKE 'abc') AND (body ILIKE 'abc') AND (title ILIKE 'def') AND (body ILIKE 'def'))
x
2
==
p
3
I
0
I
c51
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
62
should not support regexps if the database doesn't supports it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
39
0
7
1
7
2
13
70
9
22
15
44
43
3
7
4
78
49
5
2
6
2
49
6
2
49
7
0
11
I
6
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
5
title
n
x
6
Regexp
s
4
ruby
x
3
new
x
4
grep
x
3
sql
p
3
I
0
I
c55
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
16
InvalidOperation
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
39
0
7
1
7
2
13
70
9
22
15
44
43
3
7
4
78
49
5
2
6
2
7
6
64
35
2
49
7
2
49
8
0
11
I
6
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
5
title
n
x
6
Regexp
s
5
^ruby
x
3
new
s
4
ruby
x
4
grep
x
3
sql
p
3
I
0
I
c56
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
5
I
0
I
c55
I
15
I
c56
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should support regexps if the database supports it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
91
99
7
0
7
1
65
39
2
49
3
4
15
39
2
7
4
7
5
13
70
9
34
15
44
43
6
7
7
78
49
8
2
6
5
49
9
2
49
10
0
49
11
0
7
12
64
83
13
15
39
2
7
4
7
14
13
70
9
71
15
44
43
6
7
15
78
49
8
2
6
14
7
7
64
35
2
49
9
2
49
10
0
49
11
0
7
16
64
83
13
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
16
supports_regexp?
M
1
n
n
x
16
supports_regexp?
i
2
2
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
c5a
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
@ds
x
13
attach_method
x
5
title
n
x
6
Regexp
s
4
ruby
x
3
new
x
4
grep
x
3
sql
x
6
should
s
44
SELECT * FROM posts WHERE ((title ~ 'ruby'))
x
2
==
n
s
5
^ruby
s
68
SELECT * FROM posts WHERE ((title ~ '^ruby') OR (title LIKE 'ruby'))
p
7
I
0
I
c5a
I
c
I
c5b
I
31
I
c5c
I
5b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
46
should support searching against other columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
39
0
7
1
7
2
49
3
2
49
4
0
49
5
0
7
6
64
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
5
title
x
4
body
x
4
grep
x
3
sql
x
6
should
s
45
SELECT * FROM posts WHERE ((title LIKE body))
x
2
==
p
3
I
0
I
c60
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
31
I
0
I
c24
I
8
I
c28
I
13
I
c2c
I
1e
I
c30
I
29
I
c34
I
34
I
c38
I
3f
I
c3c
I
4a
I
c40
I
55
I
c44
I
60
I
c48
I
6b
I
c4c
I
76
I
c50
I
81
I
c54
I
8c
I
c59
I
97
I
c5f
I
a2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
93
Dataset default #fetch_rows, #insert, #update, #delete, #with_sql_delete, #truncate, #execute
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
96
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
19
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
38
6
15
39
6
7
7
49
8
1
38
9
11
I
3
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
3
@db
x
5
items
x
2
[]
x
3
@ds
p
5
I
0
I
c66
I
1d
I
c67
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
49
#fetch_rows should raise a Sequel::NotImplemented
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
39
0
7
1
64
56
2
50
3
1
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
3
@ds
s
0

M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
c6b
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
fetch_rows
p
3
I
0
I
c6b
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
14
NotImplemented
x
11
raise_error
x
6
should
p
3
I
0
I
c6b
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
33
#delete should execute delete SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
78
39
0
7
1
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
49
12
0
15
39
0
7
13
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
49
12
0
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
3
@db
x
7
execute
x
14
should_receive
x
4
once
s
17
DELETE FROM items
x
4
Hash
x
16
new_from_literal
x
6
server
x
7
default
x
3
[]=
x
4
with
x
3
@ds
x
6
delete
x
11
execute_dui
p
9
I
0
I
c6f
I
21
I
c70
I
27
I
c71
I
48
I
c72
I
4e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
42
#with_sql_delete should execute delete SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
86
7
0
64
19
0
15
39
1
7
2
49
3
1
49
4
0
20
0
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
20
0
49
12
1
15
39
1
7
13
49
3
1
49
4
0
20
0
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
20
0
49
12
1
11
I
8
I
1
I
0
I
0
I
-2
p
14
s
15
DELETE FROM foo
x
3
@db
x
7
execute
x
14
should_receive
x
4
once
x
4
Hash
x
16
new_from_literal
x
6
server
x
7
default
x
3
[]=
x
4
with
x
3
@ds
x
15
with_sql_delete
x
11
execute_dui
p
11
I
0
I
c76
I
6
I
c77
I
26
I
c78
I
2e
I
c79
I
4e
I
c7a
I
56
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
3
sql
s
33
#insert should execute insert SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
82
39
0
7
1
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
35
0
49
12
1
15
39
0
7
13
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
35
0
49
12
1
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
3
@db
x
7
execute
x
14
should_receive
x
4
once
s
32
INSERT INTO items DEFAULT VALUES
x
4
Hash
x
16
new_from_literal
x
6
server
x
7
default
x
3
[]=
x
4
with
x
3
@ds
x
6
insert
x
14
execute_insert
p
9
I
0
I
c7e
I
21
I
c7f
I
29
I
c80
I
4a
I
c81
I
52
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
#update should execute update SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
39
0
7
1
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
44
43
5
79
49
6
1
13
7
12
79
49
9
2
15
49
13
1
15
39
0
7
14
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
44
43
5
79
49
6
1
13
7
12
79
49
9
2
15
49
13
1
11
I
7
I
0
I
0
I
0
I
-2
p
15
x
3
@db
x
7
execute
x
14
should_receive
x
4
once
s
27
UPDATE items SET number = 1
x
4
Hash
x
16
new_from_literal
x
6
server
x
7
default
x
3
[]=
x
4
with
x
3
@ds
x
6
number
x
6
update
x
11
execute_dui
p
9
I
0
I
c85
I
21
I
c86
I
36
I
c87
I
57
I
c88
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
#truncate should execute truncate SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
90
39
0
7
1
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
49
12
0
49
13
0
1
83
14
15
39
0
7
15
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
49
12
0
49
13
0
1
83
14
11
I
7
I
0
I
0
I
0
I
-2
p
16
x
3
@db
x
7
execute
x
14
should_receive
x
4
once
s
20
TRUNCATE TABLE items
x
4
Hash
x
16
new_from_literal
x
6
server
x
7
default
x
3
[]=
x
4
with
x
3
@ds
x
8
truncate
x
6
should
x
2
==
x
11
execute_ddl
p
9
I
0
I
c8c
I
21
I
c8d
I
2d
I
c8e
I
4e
I
c8f
I
5a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
79
#truncate should raise an InvalidOperation exception if the dataset is filtered
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
49
6
0
11
I
6
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
6
filter
x
8
truncate
p
3
I
0
I
c93
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
16
InvalidOperation
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
24
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
49
6
0
11
I
6
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
6
having
x
8
truncate
p
3
I
0
I
c94
I
18
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
5
I
0
I
c93
I
15
I
c94
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
47
#execute should execute the SQL on the database
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
49
2
1
49
3
0
7
4
64
44
43
5
79
49
6
1
13
7
7
7
8
49
9
2
15
49
10
2
15
39
11
7
1
7
4
64
49
12
2
11
I
7
I
0
I
0
I
0
I
-2
p
13
x
3
@db
x
7
execute
x
14
should_receive
x
4
once
s
8
SELECT 1
x
4
Hash
x
16
new_from_literal
x
6
server
x
9
read_only
x
3
[]=
x
4
with
x
3
@ds
x
4
send
p
5
I
0
I
c98
I
21
I
c99
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
19
I
0
I
c65
I
8
I
c6a
I
13
I
c6e
I
1e
I
c75
I
29
I
c7d
I
34
I
c84
I
3f
I
c8b
I
4a
I
c92
I
55
I
c97
I
60
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
48
Dataset prepared statements and bound variables 
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
129
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
25
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
45
0
1
49
2
0
38
3
15
39
3
7
4
49
5
1
38
6
15
39
6
7
7
56
8
50
9
1
11
I
4
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
3
@ds
x
10
insert_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
59
36
19
0
15
20
0
36
54
53
0
0
47
101
1
5
48
2
7
3
49
4
1
9
30
7
5
64
8
31
1
47
101
1
63
2
11
I
5
I
1
I
0
I
0
I
0
p
6
n
x
4
to_s
x
4
opts
x
9
returning
x
8
has_key?
s
12
 RETURNING *
p
5
I
0
I
ca1
I
1f
I
0
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
v
x
8
meta_def
p
7
I
0
I
c9f
I
9
I
ca0
I
13
I
ca1
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
57
#call should take a type and bind hash and interpolate it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
497
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
7
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
49
9
2
15
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
10
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
49
9
2
15
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
11
7
12
35
2
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
49
9
2
15
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
13
7
12
7
14
35
3
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
49
9
2
15
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
15
7
12
7
14
35
3
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
49
9
2
15
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
16
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
49
9
2
15
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
17
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
49
9
2
15
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
18
44
43
1
80
49
2
1
13
7
8
79
49
5
2
15
13
7
19
80
49
5
2
15
44
43
1
79
49
2
1
13
7
3
7
20
49
5
2
15
49
9
3
15
39
0
7
21
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
9
3
15
39
0
7
22
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
9
3
15
39
23
49
24
0
49
25
0
7
26
64
7
26
64
7
26
64
7
26
64
7
26
64
7
27
64
7
28
64
7
29
64
7
30
64
7
31
64
35
10
83
32
11
I
c
I
0
I
0
I
0
I
-2
p
33
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
num
x
2
$n
x
3
[]=
x
6
filter
x
4
each
x
1
n
x
4
call
x
6
select
x
3
map
x
1
a
x
7
to_hash
x
1
b
x
14
to_hash_groups
x
5
first
x
6
delete
x
6
update
x
2
n2
x
3
$n2
x
6
insert
x
13
insert_select
x
3
@db
x
4
sqls
x
6
should
s
35
SELECT * FROM items WHERE (num = 1)
s
43
SELECT * FROM items WHERE (num = 1) LIMIT 1
s
33
DELETE FROM items WHERE (num = 1)
s
40
UPDATE items SET num = 2 WHERE (num = 1)
s
34
INSERT INTO items (num) VALUES (1)
s
46
INSERT INTO items (num) VALUES (1) RETURNING *
x
2
==
p
43
I
0
I
ca5
I
2a
I
ca6
I
54
I
ca7
I
82
I
ca8
I
b2
I
ca9
I
e2
I
caa
I
10c
I
cab
I
136
I
cac
I
178
I
cad
I
19f
I
cae
I
1c6
I
caf
I
1ce
I
cb0
I
1d1
I
cb1
I
1d4
I
cb2
I
1d7
I
cb3
I
1da
I
cb4
I
1dd
I
cb5
I
1e0
I
cb6
I
1e3
I
cb7
I
1e6
I
cb8
I
1e9
I
cb9
I
1f1
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
89
#prepare should take a type and name and store it in the database for later use with call
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
723
35
0
19
0
15
20
0
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
7
7
8
49
9
2
49
10
1
15
20
0
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
11
7
12
49
9
2
49
10
1
15
20
0
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
13
7
14
35
2
7
15
49
9
2
49
10
1
15
20
0
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
16
7
14
7
17
35
3
7
18
49
9
2
49
10
1
15
20
0
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
19
7
14
7
17
35
3
7
20
49
9
2
49
10
1
15
20
0
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
21
7
22
49
9
2
49
10
1
15
20
0
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
23
7
24
49
9
2
49
10
1
15
20
0
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
25
7
26
44
43
1
79
49
2
1
13
7
3
7
27
49
5
2
15
49
9
3
49
10
1
15
20
0
39
0
7
28
7
29
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
9
3
49
10
1
15
20
0
39
0
7
30
7
31
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
9
3
49
10
1
15
39
32
49
33
0
49
34
0
56
35
50
36
0
49
37
0
7
24
7
8
7
22
7
29
7
31
7
18
7
20
7
15
7
12
7
26
35
10
83
38
15
7
8
7
12
7
15
7
18
7
20
7
22
7
24
7
26
7
29
7
31
35
10
56
39
50
40
0
15
39
32
7
8
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
56
42
50
43
2
15
39
32
7
12
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
49
43
2
15
39
32
7
15
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
49
43
2
15
39
32
7
18
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
49
43
2
15
39
32
7
20
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
49
43
2
15
39
32
7
22
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
49
43
2
15
39
32
7
24
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
49
43
2
15
39
32
7
26
44
43
1
80
49
2
1
13
7
41
79
49
5
2
15
13
7
44
80
49
5
2
15
49
43
2
15
39
32
7
29
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
49
43
2
15
39
32
7
31
44
43
1
79
49
2
1
13
7
41
79
49
5
2
15
49
43
2
15
39
32
49
45
0
49
37
0
7
46
64
7
46
64
7
46
64
7
46
64
7
46
64
7
47
64
7
48
64
7
49
64
7
50
64
7
51
64
35
10
83
38
11
I
d
I
1
I
0
I
0
I
-2
p
52
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
num
x
2
$n
x
3
[]=
x
6
filter
x
4
each
x
2
en
x
7
prepare
x
2
<<
x
6
select
x
2
sn
x
3
map
x
1
a
x
2
sm
x
7
to_hash
x
1
b
x
2
sh
x
14
to_hash_groups
x
3
shg
x
5
first
x
2
fn
x
6
delete
x
2
dn
x
6
update
x
2
un
x
3
$n2
x
6
insert
x
2
in
x
13
insert_select
x
3
ins
x
3
@db
x
19
prepared_statements
x
4
keys
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
4
to_s
p
3
I
0
I
cc8
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
k
x
7
sort_by
x
6
should
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
58
37
19
0
15
37
19
1
15
15
39
0
49
1
0
20
0
49
2
1
49
3
0
21
1
0
20
1
49
2
1
83
4
11
I
6
I
2
I
2
I
2
n
p
5
x
3
@db
x
19
prepared_statements
x
2
[]
x
6
should
x
2
==
p
3
I
0
I
cc9
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
x
x
1
i
x
15
each_with_index
x
1
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
cca
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
call
x
2
n2
x
4
sqls
s
35
SELECT * FROM items WHERE (num = 1)
s
43
SELECT * FROM items WHERE (num = 1) LIMIT 1
s
33
DELETE FROM items WHERE (num = 1)
s
40
UPDATE items SET num = 2 WHERE (num = 1)
s
34
INSERT INTO items (num) VALUES (1)
s
46
INSERT INTO items (num) VALUES (1) RETURNING *
p
69
I
0
I
cbd
I
5
I
cbe
I
27
I
cbf
I
49
I
cc0
I
6f
I
cc1
I
97
I
cc2
I
bf
I
cc3
I
e1
I
cc4
I
103
I
cc5
I
135
I
cc6
I
154
I
cc7
I
173
I
cc8
I
19c
I
cc9
I
1b8
I
cca
I
1d1
I
ccb
I
1e8
I
ccc
I
1ff
I
ccd
I
216
I
cce
I
22d
I
ccf
I
244
I
cd0
I
25b
I
cd1
I
27a
I
cd2
I
291
I
cd3
I
2a8
I
cd4
I
2b0
I
cd5
I
2b3
I
cd6
I
2b6
I
cd7
I
2b9
I
cd8
I
2bc
I
cd9
I
2bf
I
cda
I
2c2
I
cdb
I
2c5
I
cdc
I
2c8
I
cdd
I
2cb
I
cde
I
2d3
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
3
pss
s
62
#call should default to using :all if an invalid type is given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
58
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
7
44
43
1
79
49
2
1
13
7
8
79
49
5
2
15
49
9
2
15
39
10
49
11
0
49
12
0
7
13
64
35
1
83
14
11
I
7
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
num
x
2
$n
x
3
[]=
x
6
filter
x
10
select_all
x
1
n
x
4
call
x
3
@db
x
4
sqls
x
6
should
s
35
SELECT * FROM items WHERE (num = 1)
x
2
==
p
5
I
0
I
ce2
I
2a
I
ce3
I
3a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
73
#inspect should indicate it is a prepared statement with the prepared SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
40
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
7
7
7
8
49
9
2
49
10
0
49
11
0
7
12
64
83
13
11
I
6
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
num
x
2
$n
x
3
[]=
x
6
filter
x
6
select
x
2
sn
x
7
prepare
x
7
inspect
x
6
should
s
80
<Sequel::Mock::Dataset/PreparedStatement "SELECT * FROM items WHERE (num = $n)">
x
2
==
p
5
I
0
I
ce7
I
22
I
ce8
I
28
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should handle literal strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
39
0
7
1
64
7
2
49
3
2
7
4
44
43
5
79
49
6
1
13
7
7
79
49
8
2
15
49
9
2
15
39
10
49
11
0
49
12
0
7
13
64
35
1
83
14
11
I
7
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
s
7
num = ?
x
2
$n
x
6
filter
x
6
select
x
4
Hash
x
16
new_from_literal
x
1
n
x
3
[]=
x
4
call
x
3
@db
x
4
sqls
x
6
should
s
35
SELECT * FROM items WHERE (num = 1)
x
2
==
p
5
I
0
I
cec
I
1f
I
ced
I
2f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
54
should handle columns on prepared statements correctly
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
80
39
0
7
1
35
1
13
18
2
49
2
1
15
15
39
3
7
4
56
5
50
6
1
15
39
3
44
43
7
79
49
8
1
13
7
1
7
9
49
10
2
15
49
11
1
7
12
7
13
49
14
2
49
15
0
49
16
0
7
17
64
83
18
15
39
0
49
19
0
49
16
0
7
20
64
35
1
83
18
11
I
6
I
0
I
0
I
0
I
-2
p
21
x
3
@db
x
3
num
x
8
columns=
x
3
@ds
x
16
select_where_sql
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
45
57
19
0
15
20
0
54
52
0
1
15
5
48
1
7
2
49
3
1
9
43
20
0
7
4
5
48
5
49
6
0
47
101
7
7
8
63
3
49
9
1
8
44
1
11
I
6
I
1
I
1
I
1
n
p
10
n
x
4
opts
x
5
where
x
2
[]
s
4
 OR 
x
7
columns
x
5
first
x
4
to_s
s
4
 = 1
x
2
<<
p
5
I
0
I
cf2
I
2c
I
0
I
2d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
3
sql
x
8
meta_def
x
4
Hash
x
16
new_from_literal
x
2
$n
x
3
[]=
x
6
filter
x
6
select
x
2
sn
x
7
prepare
x
3
sql
x
6
should
s
47
SELECT * FROM items WHERE (num = $n) OR num = 1
x
2
==
x
4
sqls
s
27
SELECT * FROM items LIMIT 1
p
9
I
0
I
cf1
I
e
I
cf2
I
18
I
cf3
I
40
I
cf4
I
50
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
56
should handle datasets using static sql and placeholders
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
39
0
7
1
64
7
2
49
3
2
7
4
44
43
5
79
49
6
1
13
7
7
79
49
8
2
15
49
9
2
15
39
0
49
10
0
49
11
0
7
12
64
35
1
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
3
@db
s
35
SELECT * FROM items WHERE (num = ?)
x
2
$n
x
2
[]
x
6
select
x
4
Hash
x
16
new_from_literal
x
1
n
x
3
[]=
x
4
call
x
4
sqls
x
6
should
s
35
SELECT * FROM items WHERE (num = 1)
x
2
==
p
5
I
0
I
cf8
I
1f
I
cf9
I
2f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
24
should handle subselects
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
109
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
39
0
7
5
49
6
1
44
43
3
79
49
4
1
13
7
5
7
7
49
8
2
15
49
2
1
49
8
2
15
49
2
1
7
9
49
2
1
7
6
44
43
3
4
3
49
4
1
13
7
10
79
49
8
2
15
13
7
11
78
49
8
2
15
13
7
12
80
49
8
2
15
49
13
2
15
39
14
49
15
0
49
16
0
7
17
64
35
1
83
18
11
I
a
I
0
I
0
I
0
I
-2
p
19
x
3
@ds
x
2
$b
x
6
filter
x
4
Hash
x
16
new_from_literal
x
3
num
x
6
select
x
2
$n
x
3
[]=
x
2
$c
x
1
n
x
1
b
x
1
c
x
4
call
x
3
@db
x
4
sqls
x
6
should
s
88
SELECT * FROM items WHERE (0 AND (num IN (SELECT num FROM items WHERE (num = 1))) AND 2)
x
2
==
p
5
I
0
I
cfd
I
5d
I
cfe
I
6d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should handle subselects in subselects
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
119
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
39
0
7
5
49
6
1
44
43
3
79
49
4
1
13
7
5
39
0
7
5
49
6
1
44
43
3
79
49
4
1
13
7
5
7
7
49
8
2
15
49
2
1
49
8
2
15
49
2
1
49
8
2
15
49
2
1
7
6
44
43
3
80
49
4
1
13
7
9
79
49
8
2
15
13
7
10
78
49
8
2
15
49
11
2
15
39
12
49
13
0
49
14
0
7
15
64
35
1
83
16
11
I
e
I
0
I
0
I
0
I
-2
p
17
x
3
@ds
x
2
$b
x
6
filter
x
4
Hash
x
16
new_from_literal
x
3
num
x
6
select
x
2
$n
x
3
[]=
x
1
n
x
1
b
x
4
call
x
3
@db
x
4
sqls
x
6
should
s
121
SELECT * FROM items WHERE (0 AND (num IN (SELECT num FROM items WHERE (num IN (SELECT num FROM items WHERE (num = 1))))))
x
2
==
p
5
I
0
I
d02
I
67
I
d03
I
77
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
45
should handle subselects with literal strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
84
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
39
0
7
5
49
6
1
7
7
64
7
8
49
2
2
49
9
2
15
49
2
1
7
6
44
43
3
80
49
4
1
13
7
10
79
49
9
2
15
13
7
11
78
49
9
2
15
49
12
2
15
39
13
49
14
0
49
15
0
7
16
64
35
1
83
17
11
I
8
I
0
I
0
I
0
I
-2
p
18
x
3
@ds
x
2
$b
x
6
filter
x
4
Hash
x
16
new_from_literal
x
3
num
x
6
select
s
7
num = ?
x
2
$n
x
3
[]=
x
1
n
x
1
b
x
4
call
x
3
@db
x
4
sqls
x
6
should
s
82
SELECT * FROM items WHERE (0 AND (num IN (SELECT num FROM items WHERE (num = 1))))
x
2
==
p
5
I
0
I
d07
I
44
I
d08
I
54
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
57
should handle subselects with static sql and placeholders
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
79
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
5
39
6
7
7
64
7
8
49
9
2
49
10
2
15
49
2
1
7
11
44
43
3
80
49
4
1
13
7
12
79
49
10
2
15
13
7
13
78
49
10
2
15
49
14
2
15
39
6
49
15
0
49
16
0
7
17
64
35
1
83
18
11
I
8
I
0
I
0
I
0
I
-2
p
19
x
3
@ds
x
2
$b
x
6
filter
x
4
Hash
x
16
new_from_literal
x
3
num
x
3
@db
s
37
SELECT num FROM items WHERE (num = ?)
x
2
$n
x
2
[]
x
3
[]=
x
6
select
x
1
n
x
1
b
x
4
call
x
4
sqls
x
6
should
s
82
SELECT * FROM items WHERE (0 AND (num IN (SELECT num FROM items WHERE (num = 1))))
x
2
==
p
5
I
0
I
d0c
I
3f
I
d0d
I
4f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
25
I
0
I
c9e
I
8
I
ca4
I
13
I
cbc
I
1e
I
ce1
I
29
I
ce6
I
34
I
ceb
I
3f
I
cf0
I
4a
I
cf7
I
55
I
cfc
I
60
I
d01
I
6b
I
d06
I
76
I
d0b
I
81
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
Sequel
n
x
7
Dataset
x
24
UnnumberedArgumentMapper
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
209
45
0
1
49
2
0
38
3
15
39
3
7
4
49
5
1
44
43
6
79
49
7
1
13
7
8
7
9
49
10
2
15
49
11
1
38
12
15
99
7
13
7
14
65
39
12
49
15
4
15
99
7
16
7
17
65
39
12
49
15
4
15
99
7
18
7
19
65
39
12
49
15
4
15
35
0
38
20
15
39
20
39
12
7
21
7
22
49
23
2
49
24
1
15
39
20
39
12
7
25
7
26
49
23
2
49
24
1
15
39
20
39
12
7
27
7
28
49
23
2
49
24
1
15
39
20
39
12
7
29
7
30
49
23
2
49
24
1
15
39
20
39
12
7
31
7
32
44
43
6
79
49
7
1
13
7
8
7
9
49
10
2
15
49
23
3
49
24
1
15
39
20
39
12
7
33
7
34
44
43
6
79
49
7
1
13
7
8
7
9
49
10
2
15
49
23
3
49
24
1
15
39
20
56
35
50
36
0
11
I
9
I
0
I
0
I
0
I
-2
p
37
x
6
Sequel
n
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
4
Hash
x
16
new_from_literal
x
3
num
x
2
$n
x
3
[]=
x
6
filter
x
3
@ds
x
7
execute
M
1
n
n
x
7
execute
i
59
23
1
10
14
44
43
0
78
49
1
1
19
1
15
95
19
2
15
20
0
20
1
44
43
0
79
49
1
1
13
7
2
5
48
3
49
4
2
15
49
5
1
20
2
13
70
10
55
44
43
6
12
49
7
1
52
8
2
11
I
9
I
3
I
1
I
2
n
p
9
x
4
Hash
x
16
new_from_literal
x
9
arguments
x
14
bind_arguments
x
3
[]=
x
5
merge
x
4
Proc
x
14
__from_block__
x
7
execute
p
5
I
-1
I
d15
I
12
I
d16
I
3b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
3
sql
x
4
opts
x
5
block
x
13
attach_method
x
11
execute_dui
M
1
n
n
x
11
execute_dui
i
59
23
1
10
14
44
43
0
78
49
1
1
19
1
15
95
19
2
15
20
0
20
1
44
43
0
79
49
1
1
13
7
2
5
48
3
49
4
2
15
49
5
1
20
2
13
70
10
55
44
43
6
12
49
7
1
52
8
2
11
I
9
I
3
I
1
I
2
n
p
9
x
4
Hash
x
16
new_from_literal
x
9
arguments
x
14
bind_arguments
x
3
[]=
x
5
merge
x
4
Proc
x
14
__from_block__
x
11
execute_dui
p
5
I
-1
I
d18
I
12
I
d19
I
3b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
3
sql
x
4
opts
x
5
block
x
14
execute_insert
M
1
n
n
x
14
execute_insert
i
59
23
1
10
14
44
43
0
78
49
1
1
19
1
15
95
19
2
15
20
0
20
1
44
43
0
79
49
1
1
13
7
2
5
48
3
49
4
2
15
49
5
1
20
2
13
70
10
55
44
43
6
12
49
7
1
52
8
2
11
I
9
I
3
I
1
I
2
n
p
9
x
4
Hash
x
16
new_from_literal
x
9
arguments
x
14
bind_arguments
x
3
[]=
x
5
merge
x
4
Proc
x
14
__from_block__
x
14
execute_insert
p
5
I
-1
I
d1b
I
12
I
d1c
I
3b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
3
sql
x
4
opts
x
5
block
x
3
@ps
x
6
select
x
1
s
x
7
prepare
x
2
<<
x
3
all
x
1
a
x
5
first
x
1
f
x
6
delete
x
1
d
x
6
insert
x
1
i
x
6
update
x
1
u
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
57
19
0
15
20
0
45
0
1
43
2
43
3
49
4
1
11
I
4
I
1
I
1
I
1
n
p
5
x
6
Sequel
n
x
7
Dataset
x
24
UnnumberedArgumentMapper
x
6
extend
p
3
I
0
I
d25
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
p
x
4
each
p
27
I
0
I
d13
I
9
I
d14
I
26
I
d15
I
32
I
d18
I
3e
I
d1b
I
4a
I
d1e
I
4f
I
d1f
I
5e
I
d20
I
6d
I
d21
I
7c
I
d22
I
8b
I
d23
I
aa
I
d24
I
c9
I
d25
I
d1
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
61
#inspect should show the actual SQL submitted to the database
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@ps
x
5
first
x
7
inspect
x
6
should
s
79
<Sequel::Mock::Dataset/PreparedStatement "SELECT * FROM items WHERE (num = ?)">
x
2
==
p
3
I
0
I
d29
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
74
should submit the SQL to the database with placeholders and bind variables
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
39
0
56
1
50
2
0
15
39
3
49
4
0
49
5
0
7
6
64
7
6
64
7
7
64
7
8
64
7
9
64
7
10
64
35
6
83
11
11
I
8
I
0
I
0
I
0
I
-2
p
12
x
3
@ps
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
57
19
0
15
20
0
49
0
0
15
20
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
11
I
7
I
1
I
1
I
1
n
p
6
x
12
prepared_sql
x
4
Hash
x
16
new_from_literal
x
1
n
x
3
[]=
x
4
call
p
3
I
0
I
d2d
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
p
x
4
each
x
3
@db
x
4
sqls
x
6
should
s
48
SELECT * FROM items WHERE (num = ?) -- args: [1]
s
56
SELECT * FROM items WHERE (num = ?) LIMIT 1 -- args: [1]
s
46
DELETE FROM items WHERE (num = ?) -- args: [1]
s
47
INSERT INTO items (num) VALUES (?) -- args: [1]
s
56
UPDATE items SET num = ? WHERE (num = ?) -- args: [1, 1]
x
2
==
p
15
I
0
I
d2d
I
8
I
d2e
I
13
I
d2f
I
16
I
d30
I
19
I
d31
I
1c
I
d32
I
1f
I
d33
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should handle unrecognized statement types as :all
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
68
39
0
7
1
7
2
49
3
2
19
0
15
20
0
45
4
5
43
6
43
7
49
8
1
15
20
0
49
9
0
15
20
0
44
43
10
79
49
11
1
13
7
12
79
49
13
2
15
49
14
1
15
39
15
49
16
0
49
17
0
7
18
64
35
1
83
19
11
I
7
I
1
I
0
I
0
I
-2
p
20
x
3
@ds
x
10
select_all
x
1
s
x
7
prepare
x
6
Sequel
n
x
7
Dataset
x
24
UnnumberedArgumentMapper
x
6
extend
x
12
prepared_sql
x
4
Hash
x
16
new_from_literal
x
1
n
x
3
[]=
x
4
call
x
3
@db
x
4
sqls
x
6
should
s
48
SELECT * FROM items WHERE (num = ?) -- args: [1]
x
2
==
p
11
I
0
I
d37
I
c
I
d38
I
19
I
d39
I
1f
I
d3a
I
34
I
d3b
I
44
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ps
p
9
I
0
I
d12
I
8
I
d28
I
13
I
d2c
I
1e
I
d36
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
22
Sequel::Dataset#server
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
44
should set the server to use for the dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
206
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
4
4
49
3
1
13
7
5
44
43
2
78
49
3
1
49
6
2
15
13
7
7
44
43
2
78
49
3
1
49
6
2
15
13
7
8
44
43
2
78
49
3
1
49
6
2
15
13
7
9
44
43
2
78
49
3
1
49
6
2
15
49
6
2
15
49
10
1
38
11
15
39
11
7
12
49
13
1
7
5
49
14
1
38
15
15
39
15
49
16
0
15
39
15
7
7
49
14
1
44
43
2
79
49
3
1
13
7
17
79
49
6
2
15
49
18
1
15
39
15
7
8
49
14
1
49
19
0
15
39
15
7
9
49
14
1
44
43
2
79
49
3
1
13
7
17
45
0
20
7
17
49
21
1
79
81
22
49
6
2
15
49
23
1
15
39
11
49
24
0
49
25
0
7
26
64
7
27
64
7
28
64
7
29
64
35
4
83
30
11
I
a
I
0
I
0
I
0
I
-2
p
31
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
7
servers
x
1
s
x
3
[]=
x
1
i
x
1
d
x
1
u
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
6
server
x
3
@ds
x
3
all
x
1
a
x
6
insert
x
6
delete
n
x
4
expr
x
1
+
x
6
update
x
4
sqls
x
6
should
s
24
SELECT * FROM items -- s
s
37
INSERT INTO items (a) VALUES (1) -- i
s
22
DELETE FROM items -- d
s
33
UPDATE items SET a = (a + 1) -- u
x
2
==
p
15
I
0
I
d41
I
57
I
d42
I
66
I
d43
I
6c
I
d44
I
86
I
d45
I
91
I
d46
I
b5
I
d47
I
ce
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
3
I
0
I
d40
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
Sequel::Dataset#each_server
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
38
should yield a dataset for each server
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
101
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
7
5
44
43
2
78
49
3
1
49
6
2
15
13
7
7
44
43
2
78
49
3
1
49
6
2
15
49
6
2
15
49
8
1
38
9
15
39
9
7
10
49
11
1
38
12
15
39
12
56
13
50
14
0
15
39
9
49
15
0
49
16
0
49
17
0
7
18
64
7
19
64
7
20
64
35
3
83
21
11
I
a
I
0
I
0
I
0
I
-2
p
22
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
7
servers
x
1
s
x
3
[]=
x
1
i
x
4
mock
x
3
@db
x
5
items
x
2
[]
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
57
19
0
15
20
0
5
45
0
1
43
2
47
49
3
1
49
4
1
15
20
0
49
5
0
39
6
83
7
15
20
0
49
8
0
49
4
0
39
6
49
8
0
83
7
15
20
0
49
9
0
11
I
5
I
1
I
1
I
1
n
p
10
x
6
Sequel
n
x
7
Dataset
x
12
be_a_kind_of
x
6
should
x
10
should_not
x
3
@ds
x
2
==
x
3
sql
x
3
all
p
11
I
0
I
d4f
I
4
I
d50
I
14
I
d51
I
1e
I
d52
I
2e
I
d53
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
x
11
each_server
x
4
sqls
x
4
sort
x
6
should
s
19
SELECT * FROM items
s
24
SELECT * FROM items -- i
s
24
SELECT * FROM items -- s
x
2
==
p
9
I
0
I
d4d
I
3a
I
d4e
I
44
I
d4f
I
4c
I
d55
I
65
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
3
I
0
I
d4c
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
Sequel::Dataset #set_defaults
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
44
43
8
79
49
9
1
13
7
10
79
49
11
2
15
49
12
1
38
13
11
I
6
I
0
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
5
items
x
4
from
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
12
set_defaults
x
3
@ds
p
3
I
0
I
d5b
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
41
should set the default values for inserts
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
168
39
0
49
1
0
49
2
0
7
3
64
83
4
15
39
0
44
43
5
79
49
6
1
13
7
7
80
49
8
2
15
49
1
1
49
2
0
7
9
64
83
4
15
39
0
44
43
5
79
49
6
1
13
7
10
80
49
8
2
15
49
1
1
49
2
0
7
11
13
70
9
84
15
44
43
12
7
13
78
49
14
2
6
11
49
15
1
15
39
0
44
43
5
79
49
6
1
13
7
10
80
49
8
2
15
49
16
1
49
1
0
49
2
0
7
17
13
70
9
132
15
44
43
12
7
13
78
49
14
2
6
17
49
15
1
15
39
0
44
43
5
79
49
6
1
13
7
7
80
49
8
2
15
49
16
1
49
1
0
49
2
0
7
9
64
83
4
11
I
6
I
0
I
0
I
0
I
-2
p
18
x
3
@ds
x
10
insert_sql
x
6
should
s
32
INSERT INTO items (x) VALUES (1)
x
2
==
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
s
32
INSERT INTO items (x) VALUES (2)
x
1
y
n
x
6
Regexp
s
54
INSERT INTO items \([xy], [xy]\) VALUES \([21], [21]\)
x
3
new
x
2
=~
x
12
set_defaults
n
p
11
I
0
I
d5f
I
e
I
d60
I
2b
I
d61
I
58
I
d62
I
88
I
d63
I
a8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
41
should set the default values for updates
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
168
39
0
49
1
0
49
2
0
7
3
64
83
4
15
39
0
44
43
5
79
49
6
1
13
7
7
80
49
8
2
15
49
1
1
49
2
0
7
9
64
83
4
15
39
0
44
43
5
79
49
6
1
13
7
10
80
49
8
2
15
49
1
1
49
2
0
7
11
13
70
9
84
15
44
43
12
7
13
78
49
14
2
6
11
49
15
1
15
39
0
44
43
5
79
49
6
1
13
7
10
80
49
8
2
15
49
16
1
49
1
0
49
2
0
7
17
13
70
9
132
15
44
43
12
7
13
78
49
14
2
6
17
49
15
1
15
39
0
44
43
5
79
49
6
1
13
7
7
80
49
8
2
15
49
16
1
49
1
0
49
2
0
7
9
64
83
4
11
I
6
I
0
I
0
I
0
I
-2
p
18
x
3
@ds
x
10
update_sql
x
6
should
s
22
UPDATE items SET x = 1
x
2
==
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
s
22
UPDATE items SET x = 2
x
1
y
n
x
6
Regexp
s
45
UPDATE items SET (x = 1|y = 2), (x = 1|y = 2)
x
3
new
x
2
=~
x
12
set_defaults
n
p
11
I
0
I
d67
I
e
I
d68
I
2b
I
d69
I
58
I
d6a
I
88
I
d6b
I
a8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
d5a
I
8
I
d5e
I
13
I
d66
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
30
Sequel::Dataset #set_overrides
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
54
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
44
43
8
79
49
9
1
13
7
10
79
49
11
2
15
49
12
1
38
13
11
I
6
I
0
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
5
items
x
4
from
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
13
set_overrides
x
3
@ds
p
3
I
0
I
d71
I
36
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
44
should override the given values for inserts
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
168
39
0
49
1
0
49
2
0
7
3
64
83
4
15
39
0
44
43
5
79
49
6
1
13
7
7
80
49
8
2
15
49
1
1
49
2
0
7
3
64
83
4
15
39
0
44
43
5
79
49
6
1
13
7
9
80
49
8
2
15
49
1
1
49
2
0
7
10
13
70
9
84
15
44
43
11
7
12
78
49
13
2
6
10
49
14
1
15
39
0
44
43
5
79
49
6
1
13
7
9
80
49
8
2
15
49
15
1
49
1
0
49
2
0
7
16
13
70
9
132
15
44
43
11
7
12
78
49
13
2
6
16
49
14
1
15
39
0
44
43
5
79
49
6
1
13
7
7
80
49
8
2
15
49
15
1
49
1
0
49
2
0
7
3
64
83
4
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
3
@ds
x
10
insert_sql
x
6
should
s
32
INSERT INTO items (x) VALUES (1)
x
2
==
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
1
y
n
x
6
Regexp
s
54
INSERT INTO items \([xy], [xy]\) VALUES \([21], [21]\)
x
3
new
x
2
=~
x
13
set_overrides
n
p
11
I
0
I
d75
I
e
I
d76
I
2b
I
d77
I
58
I
d78
I
88
I
d79
I
a8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
44
should override the given values for updates
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
168
39
0
49
1
0
49
2
0
7
3
64
83
4
15
39
0
44
43
5
79
49
6
1
13
7
7
80
49
8
2
15
49
1
1
49
2
0
7
3
64
83
4
15
39
0
44
43
5
79
49
6
1
13
7
9
80
49
8
2
15
49
1
1
49
2
0
7
10
13
70
9
84
15
44
43
11
7
12
78
49
13
2
6
10
49
14
1
15
39
0
44
43
5
79
49
6
1
13
7
9
80
49
8
2
15
49
15
1
49
1
0
49
2
0
7
16
13
70
9
132
15
44
43
11
7
12
78
49
13
2
6
16
49
14
1
15
39
0
44
43
5
79
49
6
1
13
7
7
80
49
8
2
15
49
15
1
49
1
0
49
2
0
7
3
64
83
4
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
3
@ds
x
10
update_sql
x
6
should
s
22
UPDATE items SET x = 1
x
2
==
x
4
Hash
x
16
new_from_literal
x
1
x
x
3
[]=
x
1
y
n
x
6
Regexp
s
45
UPDATE items SET (x = 1|y = 2), (x = 1|y = 2)
x
3
new
x
2
=~
x
13
set_overrides
n
p
11
I
0
I
d7d
I
e
I
d7e
I
2b
I
d7f
I
58
I
d80
I
88
I
d81
I
a8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
d70
I
8
I
d74
I
13
I
d7c
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
23
Sequel::Dataset#qualify
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
5
s
33
should qualify to the given table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
55
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
56
8
50
9
0
7
10
49
11
1
49
12
0
49
13
0
7
14
64
83
15
11
I
4
I
0
I
0
I
0
I
-2
p
16
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
1
t
x
4
from
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
48
0
5
48
1
84
2
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
1
a
x
1
b
x
1
<
p
3
I
0
I
d87
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
1
e
x
7
qualify
x
3
sql
x
6
should
s
35
SELECT e.* FROM t WHERE (e.a < e.b)
x
2
==
p
3
I
0
I
d87
I
37
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
55
should qualify to the first source if no table if given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
53
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
56
8
50
9
0
49
10
0
49
11
0
49
12
0
7
13
64
83
14
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
1
t
x
4
from
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
48
0
5
48
1
84
2
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
1
a
x
1
b
x
1
<
p
3
I
0
I
d8b
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
7
qualify
x
3
sql
x
6
should
s
35
SELECT t.* FROM t WHERE (t.a < t.b)
x
2
==
p
3
I
0
I
d8b
I
35
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
5
I
0
I
d86
I
b
I
d8a
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
26
Sequel::Dataset#qualify_to
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
33
should qualify to the given table
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
55
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
56
8
50
9
0
7
10
49
11
1
49
12
0
49
13
0
7
14
64
83
15
11
I
4
I
0
I
0
I
0
I
-2
p
16
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
1
t
x
4
from
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
48
0
5
48
1
84
2
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
1
a
x
1
b
x
1
<
p
3
I
0
I
d91
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
1
e
x
10
qualify_to
x
3
sql
x
6
should
s
35
SELECT e.* FROM t WHERE (e.a < e.b)
x
2
==
p
3
I
0
I
d91
I
37
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
p
3
I
0
I
d90
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
39
Sequel::Dataset#qualify_to_first_source
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
239
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
15
5
7
29
64
56
30
47
50
4
1
15
5
7
31
64
56
32
47
50
4
1
15
5
7
33
64
56
34
47
50
4
1
15
5
7
35
64
56
36
47
50
4
1
15
5
7
37
64
56
38
47
50
4
1
15
5
7
39
64
56
40
47
50
4
1
15
5
7
41
64
56
42
47
50
4
1
15
5
7
43
64
56
44
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
45
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
34
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
7
6
49
7
1
38
8
11
I
3
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
1
t
x
2
[]
x
3
@ds
p
3
I
0
I
d97
I
22
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
34
should qualify_to the first source
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
15
39
0
7
6
49
7
1
7
8
49
9
1
49
10
0
15
39
0
49
1
0
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
17
SELECT t.* FROM t
x
2
==
x
10
qualify_to
x
14
should_receive
x
1
t
x
4
with
x
4
once
p
7
I
0
I
d9b
I
11
I
d9c
I
21
I
d9d
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
73
should handle the select, order, where, having, and group options/clauses
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
55
39
0
7
1
49
2
1
44
43
3
79
49
4
1
13
7
1
79
49
5
2
15
49
6
1
7
1
49
7
1
7
1
49
8
1
7
1
49
9
1
49
10
0
49
11
0
49
12
0
7
13
64
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
1
a
x
6
select
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
6
filter
x
5
order
x
5
group
x
6
having
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
70
SELECT t.a FROM t WHERE (t.a = 1) GROUP BY t.a HAVING t.a ORDER BY t.a
x
2
==
p
3
I
0
I
da1
I
37
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
78
should handle the select using a table.* if all columns are currently selected
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
50
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
7
3
49
6
1
7
3
49
7
1
7
3
49
8
1
49
9
0
49
10
0
49
11
0
7
12
64
83
13
11
I
6
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
6
filter
x
5
order
x
5
group
x
6
having
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
70
SELECT t.* FROM t WHERE (t.a = 1) GROUP BY t.a HAVING t.a ORDER BY t.a
x
2
==
p
3
I
0
I
da5
I
32
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
should handle hashes in select option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
44
43
1
79
49
2
1
13
7
3
7
4
49
5
2
15
49
6
1
49
7
0
49
8
0
49
9
0
7
10
64
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
b
x
3
[]=
x
6
select
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
22
SELECT t.a AS b FROM t
x
2
==
p
3
I
0
I
da9
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
should handle symbols
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
28
39
0
7
1
7
2
7
3
7
4
49
5
4
49
6
0
49
7
0
49
8
0
7
9
64
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
1
a
x
4
b__c
x
5
d___e
x
8
f__g___h
x
6
select
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
42
SELECT t.a, b.c, t.d AS e, f.g AS h FROM t
x
2
==
p
3
I
0
I
dad
I
1c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
20
should handle arrays
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
40
39
0
44
43
1
79
49
2
1
13
7
3
7
4
7
5
35
2
49
6
2
15
49
7
1
49
8
0
49
9
0
49
10
0
7
11
64
83
12
11
I
7
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
b
x
1
c
x
3
[]=
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
43
SELECT t.* FROM t WHERE (t.a IN (t.b, t.c))
x
2
==
p
3
I
0
I
db1
I
28
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
20
should handle hashes
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
56
39
0
45
1
2
44
43
3
79
49
4
1
13
7
5
44
43
3
79
49
4
1
13
7
6
79
49
7
2
15
49
7
2
15
3
49
8
2
49
9
1
49
10
0
49
11
0
49
12
0
7
13
64
83
14
11
I
a
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
1
b
x
1
c
x
3
[]=
x
4
case
x
6
select
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
57
SELECT (CASE WHEN t.b THEN (t.c = 1) ELSE 'f' END) FROM t
x
2
==
p
3
I
0
I
db5
I
38
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
30
should handle SQL::Identifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
56
1
50
2
0
49
3
0
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
4
5
48
0
11
I
2
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
db9
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
select
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
17
SELECT t.a FROM t
x
2
==
p
3
I
0
I
db9
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
should handle SQL::OrderedExpressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
45
1
2
7
3
49
4
1
45
1
5
7
6
49
7
1
49
8
2
49
9
0
49
10
0
49
11
0
7
12
64
83
13
11
I
5
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
6
Sequel
n
x
1
a
x
4
desc
n
x
1
b
x
3
asc
x
5
order
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
44
SELECT t.* FROM t ORDER BY t.a DESC, t.b ASC
x
2
==
p
3
I
0
I
dbd
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
should handle SQL::AliasedExpressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
49
7
1
49
8
0
49
9
0
49
10
0
7
11
64
83
12
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
6
Sequel
n
x
1
a
x
4
expr
x
1
b
x
2
as
x
6
select
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
22
SELECT t.a AS b FROM t
x
2
==
p
3
I
0
I
dc1
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should handle SQL::CaseExpressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
56
1
50
2
0
49
3
0
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
45
0
1
44
43
2
79
49
3
1
13
5
48
4
5
48
5
49
6
2
15
5
48
7
5
48
8
49
9
3
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
b
x
3
[]=
x
1
c
x
1
d
x
4
case
p
3
I
0
I
dc5
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
65
SELECT t.* FROM t WHERE (CASE t.d WHEN t.a THEN t.b ELSE t.c END)
x
2
==
p
3
I
0
I
dc5
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
23
should handle SQL:Casts
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
56
1
50
2
0
49
3
0
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
48
0
7
1
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
1
a
x
7
boolean
x
4
cast
p
3
I
0
I
dc9
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
44
SELECT t.* FROM t WHERE CAST(t.a AS boolean)
x
2
==
p
3
I
0
I
dc9
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
28
should handle SQL::Functions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
56
1
50
2
0
49
3
0
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
5
5
48
0
79
47
49
1
2
11
I
4
I
0
I
0
I
0
I
-2
p
2
x
1
b
x
1
a
p
3
I
0
I
dcd
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
33
SELECT t.* FROM t WHERE a(t.b, 1)
x
2
==
p
3
I
0
I
dcd
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
37
should handle SQL::ComplexExpressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
56
1
50
2
0
49
3
0
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
18
5
48
0
5
48
1
81
2
5
48
3
4
3
82
4
84
5
11
I
4
I
0
I
0
I
0
I
-2
p
6
x
1
a
x
1
b
x
1
+
x
1
c
x
1
-
x
1
<
p
3
I
0
I
dd1
I
12
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
49
SELECT t.* FROM t WHERE ((t.a + t.b) < (t.c - 3))
x
2
==
p
3
I
0
I
dd1
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should handle SQL::ValueLists
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
46
39
0
44
43
1
79
49
2
1
13
7
3
45
4
5
7
6
7
7
35
2
49
8
1
49
9
2
15
49
10
1
49
11
0
49
12
0
49
13
0
7
14
64
83
15
11
I
8
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
a
x
6
Sequel
n
x
1
b
x
1
c
x
10
value_list
x
3
[]=
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
43
SELECT t.* FROM t WHERE (t.a IN (t.b, t.c))
x
2
==
p
3
I
0
I
dd5
I
2e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should handle SQL::Subscripts
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
22
39
0
56
1
50
2
0
49
3
0
49
4
0
49
5
0
7
6
64
83
7
11
I
3
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
12
5
48
0
5
48
1
4
3
49
2
2
11
I
4
I
0
I
0
I
0
I
-2
p
3
x
1
a
x
1
b
x
13
sql_subscript
p
3
I
0
I
dd9
I
c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
35
SELECT t.* FROM t WHERE t.a[t.b, 3]
x
2
==
p
3
I
0
I
dd9
I
16
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should handle SQL::PlaceholderLiteralStrings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
39
0
7
1
64
7
2
79
49
3
3
49
4
0
49
5
0
49
6
0
7
7
64
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
s
5
? > ?
x
1
a
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
33
SELECT t.* FROM t WHERE (t.a > 1)
x
2
==
p
3
I
0
I
ddd
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
68
should handle SQL::PlaceholderLiteralStrings with named placeholders
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
47
39
0
7
1
64
44
43
2
80
49
3
1
13
7
4
7
5
49
6
2
15
13
7
7
79
49
6
2
15
49
8
2
49
9
0
49
10
0
49
11
0
7
12
64
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
s
7
:a > :b
x
4
Hash
x
16
new_from_literal
x
1
a
x
1
c
x
3
[]=
x
1
b
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
33
SELECT t.* FROM t WHERE (t.c > 1)
x
2
==
p
3
I
0
I
de1
I
2f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
should handle SQL::Wrappers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
45
1
2
43
3
43
4
13
71
5
47
9
29
47
49
6
0
13
7
7
47
49
8
1
15
8
34
7
7
49
5
1
49
9
1
49
10
0
49
11
0
49
12
0
7
13
64
83
14
11
I
5
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
6
Sequel
n
x
3
SQL
x
7
Wrapper
x
3
new
x
8
allocate
x
1
a
x
10
initialize
x
6
filter
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
27
SELECT t.* FROM t WHERE t.a
x
2
==
p
3
I
0
I
de5
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should handle SQL::WindowFunctions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
32
39
0
7
1
56
2
50
3
1
15
39
0
56
4
50
5
0
49
6
0
49
7
0
49
8
0
7
9
64
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
26
supports_window_functions?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
de9
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
45
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
49
5
2
15
13
7
6
7
7
49
5
2
15
13
7
8
7
9
49
5
2
15
56
10
47
50
11
2
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
4
over
x
4
Hash
x
16
new_from_literal
x
4
args
x
1
a
x
3
[]=
x
9
partition
x
1
b
x
5
order
x
1
c
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
dea
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
sum
p
3
I
0
I
dea
I
2d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
select
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
59
SELECT sum(t.a) OVER (PARTITION BY t.b ORDER BY t.c) FROM t
x
2
==
p
5
I
0
I
de9
I
a
I
dea
I
20
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should handle all other objects by returning them unchanged
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
39
0
7
1
64
49
2
1
56
3
50
4
0
7
5
64
49
4
1
45
6
7
7
8
64
49
9
1
49
10
1
45
6
11
7
12
64
79
49
9
2
49
13
1
3
49
14
1
49
15
0
49
16
0
49
17
0
7
18
64
83
19
11
I
5
I
0
I
0
I
0
I
-2
p
20
x
3
@ds
s
1
a
x
6
select
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
4
3
47
49
0
1
11
I
3
I
0
I
0
I
0
I
-2
p
1
x
1
a
p
3
I
0
I
dee
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
s
4
blah
x
6
Sequel
n
s
4
true
x
3
lit
x
5
order
n
s
5
a > ?
x
5
group
x
6
having
x
23
qualify_to_first_source
x
3
sql
x
6
should
s
81
SELECT 'a' FROM t WHERE (a(3) AND (blah)) GROUP BY a > 1 HAVING 'f' ORDER BY true
x
2
==
p
3
I
0
I
dee
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
45
I
0
I
d96
I
8
I
d9a
I
13
I
da0
I
1e
I
da4
I
29
I
da8
I
34
I
dac
I
3f
I
db0
I
4a
I
db4
I
55
I
db8
I
60
I
dbc
I
6b
I
dc0
I
76
I
dc4
I
81
I
dc8
I
8c
I
dcc
I
97
I
dd0
I
a2
I
dd4
I
ad
I
dd8
I
b8
I
ddc
I
c3
I
de0
I
ce
I
de4
I
d9
I
de8
I
e4
I
ded
I
ef
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
22
Sequel::Dataset#unbind
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
151
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
29
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
7
6
49
7
1
38
8
15
5
56
9
47
50
10
0
38
11
11
I
3
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
1
t
x
2
[]
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
57
19
0
15
20
0
49
0
0
97
37
19
0
15
37
19
1
15
15
2
15
20
0
49
1
0
20
1
35
2
11
I
5
I
2
I
1
I
1
n
p
2
x
6
unbind
x
3
sql
p
3
I
0
I
df5
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
2
ds
x
2
bv
x
4
proc
x
2
@u
p
5
I
0
I
df4
I
22
I
df5
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
67
should unbind values assigned to equality and inequality statements
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
176
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
49
6
0
49
7
0
49
8
0
49
9
0
7
10
64
83
11
15
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
12
1
49
6
0
49
7
0
49
8
0
49
9
0
7
13
64
83
11
15
39
0
56
14
50
5
0
49
6
0
49
7
0
49
8
0
49
9
0
7
15
64
83
11
15
39
0
56
16
50
5
0
49
6
0
49
7
0
49
8
0
49
9
0
7
17
64
83
11
15
39
0
56
18
50
5
0
49
6
0
49
7
0
49
8
0
49
9
0
7
19
64
83
11
15
39
0
56
20
50
5
0
49
6
0
49
7
0
49
8
0
49
9
0
7
21
64
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
22
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
x
6
filter
x
6
unbind
x
5
first
x
3
sql
x
6
should
s
34
SELECT * FROM t WHERE (foo = $foo)
x
2
==
x
7
exclude
s
35
SELECT * FROM t WHERE (foo != $foo)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
foo
x
1
>
p
3
I
0
I
dfb
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
SELECT * FROM t WHERE (foo > $foo)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
79
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
foo
x
2
>=
p
3
I
0
I
dfc
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
SELECT * FROM t WHERE (foo >= $foo)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
foo
x
1
<
p
3
I
0
I
dfd
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
SELECT * FROM t WHERE (foo < $foo)
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
5
48
0
79
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
foo
x
2
<=
p
3
I
0
I
dfe
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
SELECT * FROM t WHERE (foo <= $foo)
p
13
I
0
I
df9
I
26
I
dfa
I
4c
I
dfb
I
65
I
dfc
I
7e
I
dfd
I
97
I
dfe
I
b0
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
79
should return variables that could be used bound to recreate the previous query
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
94
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
49
6
0
49
7
0
49
8
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
83
9
15
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
10
1
49
6
0
49
7
0
49
8
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
x
6
filter
x
6
unbind
x
4
last
x
6
should
x
2
==
x
7
exclude
p
5
I
0
I
e02
I
2f
I
e03
I
5e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
60
should handle numerics, strings, dates, times, and datetimes
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
453
39
0
39
1
44
43
2
79
49
3
1
13
7
4
79
49
5
2
15
49
6
1
49
7
1
49
8
0
7
9
64
44
43
2
79
49
3
1
13
7
4
79
49
5
2
15
35
2
83
10
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
7
11
49
5
2
15
49
6
1
49
7
1
49
8
0
7
9
64
44
43
2
79
49
3
1
13
7
4
7
12
49
5
2
15
35
2
83
10
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
45
13
14
13
71
15
47
9
142
47
49
16
0
13
7
17
64
47
49
18
1
15
8
148
7
17
64
49
15
1
49
5
2
15
49
6
1
49
7
1
49
8
0
7
9
64
44
43
2
79
49
3
1
13
7
4
45
13
19
13
71
15
47
9
198
47
49
16
0
13
7
17
64
47
49
18
1
15
8
204
7
17
64
49
15
1
49
5
2
15
35
2
83
10
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
7
20
64
49
5
2
15
49
6
1
49
7
1
49
8
0
7
9
64
44
43
2
79
49
3
1
13
7
4
7
20
64
49
5
2
15
35
2
83
10
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
45
21
22
49
23
0
49
5
2
15
49
6
1
49
7
1
49
8
0
7
9
64
44
43
2
79
49
3
1
13
7
4
45
21
24
49
23
0
49
5
2
15
35
2
83
10
15
45
25
26
49
27
0
19
0
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
20
0
49
5
2
15
49
6
1
49
7
1
49
8
0
7
9
64
44
43
2
79
49
3
1
13
7
4
20
0
49
5
2
15
35
2
83
10
15
45
28
29
49
27
0
19
1
15
39
0
39
1
44
43
2
79
49
3
1
13
7
4
20
1
49
5
2
15
49
6
1
49
7
1
49
8
0
7
9
64
44
43
2
79
49
3
1
13
7
4
20
1
49
5
2
15
35
2
83
10
11
I
b
I
2
I
0
I
0
I
-2
p
30
x
2
@u
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
x
6
filter
x
2
[]
x
6
should
s
34
SELECT * FROM t WHERE (foo = $foo)
x
2
==
d
 +0.500000000000000000000000000000000000000000000000000000     1
d
 +0.500000000000000000000000000000000000000000000000000000     1
x
10
BigDecimal
n
x
3
new
x
8
allocate
s
3
1.0
x
10
initialize
n
s
1
a
x
4
Date
n
x
5
today
n
x
4
Time
n
x
3
now
x
8
DateTime
n
p
19
I
0
I
e07
I
33
I
e08
I
68
I
e09
I
d5
I
e0a
I
10c
I
e0b
I
149
I
e0c
I
152
I
e0d
I
187
I
e0e
I
190
I
e0f
I
1c5
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
2
dt
s
33
should not unbind literal strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
51
39
0
39
1
44
43
2
79
49
3
1
13
7
4
45
5
6
7
7
64
49
8
1
49
9
2
15
49
10
1
49
11
1
49
12
0
7
13
64
44
43
2
78
49
3
1
35
2
83
14
11
I
8
I
0
I
0
I
0
I
-2
p
15
x
2
@u
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
foo
x
6
Sequel
n
s
1
a
x
3
lit
x
3
[]=
x
6
filter
x
2
[]
x
6
should
s
31
SELECT * FROM t WHERE (foo = a)
x
2
==
p
3
I
0
I
e13
I
33
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
80
should not unbind Identifiers, QualifiedIdentifiers, or Symbols used as booleans
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
40
39
0
39
1
7
2
49
3
1
56
4
50
3
0
56
5
50
3
0
49
6
1
49
7
0
7
8
64
44
43
9
78
49
10
1
35
2
83
11
11
I
5
I
0
I
0
I
0
I
-2
p
12
x
2
@u
x
3
@ds
x
3
foo
x
6
filter
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
4
5
48
0
11
I
2
I
0
I
0
I
0
I
-2
p
1
x
3
bar
p
3
I
0
I
e17
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
4
5
48
0
11
I
2
I
0
I
0
I
0
I
-2
p
1
x
8
foo__bar
p
3
I
0
I
e17
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
2
[]
x
6
should
s
47
SELECT * FROM t WHERE (foo AND bar AND foo.bar)
x
4
Hash
x
16
new_from_literal
x
2
==
p
3
I
0
I
e17
I
28
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should not unbind for values it doesn't understand
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
71
39
0
39
1
44
43
2
79
49
3
1
13
7
4
45
5
6
56
7
50
8
0
13
71
8
47
9
40
47
49
9
0
13
47
49
10
0
15
8
43
49
8
0
49
11
2
15
49
12
1
49
13
1
49
14
0
7
15
64
44
43
2
78
49
3
1
35
2
83
16
11
I
8
I
0
I
0
I
0
I
-2
p
17
x
2
@u
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
foo
x
5
Class
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
11
sql_literal
M
1
n
n
x
11
sql_literal
i
4
7
0
64
11
I
2
I
1
I
1
I
1
n
p
1
s
3
bar
p
3
I
-1
I
e1b
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
e1b
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
8
allocate
x
10
initialize
x
3
[]=
x
6
filter
x
2
[]
x
6
should
s
33
SELECT * FROM t WHERE (foo = bar)
x
2
==
p
3
I
0
I
e1b
I
47
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should handle QualifiedIdentifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
39
1
56
2
50
3
0
49
4
1
49
5
0
7
6
64
44
43
7
79
49
8
1
13
7
9
79
49
10
2
15
35
2
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
2
@u
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
8
foo__bar
x
1
>
p
3
I
0
I
e1f
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
2
[]
x
6
should
s
42
SELECT * FROM t WHERE (foo.bar > $foo.bar)
x
4
Hash
x
16
new_from_literal
x
7
foo.bar
x
3
[]=
x
2
==
p
3
I
0
I
e1f
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should handle wrapped objects
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
39
1
56
2
50
3
0
49
4
1
49
5
0
7
6
64
44
43
7
79
49
8
1
13
7
9
79
49
10
2
15
35
2
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
2
@u
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
67
45
0
1
43
2
43
3
13
71
4
47
9
28
47
49
5
0
13
5
48
6
47
49
7
1
15
8
34
5
48
6
49
4
1
45
0
8
43
2
43
3
13
71
4
47
9
60
47
49
5
0
13
79
47
49
7
1
15
8
64
79
49
4
1
85
9
11
I
5
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
3
SQL
x
7
Wrapper
x
3
new
x
8
allocate
x
8
foo__bar
x
10
initialize
n
x
1
>
p
3
I
0
I
e23
I
43
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
2
[]
x
6
should
s
42
SELECT * FROM t WHERE (foo.bar > $foo.bar)
x
4
Hash
x
16
new_from_literal
x
7
foo.bar
x
3
[]=
x
2
==
p
3
I
0
I
e23
I
26
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
26
should handle deep nesting
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
137
39
0
39
1
56
2
50
3
0
56
4
50
5
0
44
43
6
79
49
7
1
13
7
8
4
3
49
9
2
15
49
10
1
45
11
12
44
43
6
79
49
7
1
13
45
11
13
44
43
6
79
49
7
1
13
7
14
4
4
49
9
2
15
49
15
1
49
16
0
2
49
9
2
15
3
49
17
2
49
5
1
49
18
1
49
19
0
7
20
64
44
43
6
4
4
49
7
1
13
7
21
79
49
9
2
15
13
7
22
80
49
9
2
15
13
7
8
4
3
49
9
2
15
13
7
14
4
4
49
9
2
15
35
2
83
23
11
I
b
I
0
I
0
I
0
I
-2
p
24
x
2
@u
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
79
85
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
foo
x
1
>
p
3
I
0
I
e27
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
7
5
48
0
80
84
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
3
bar
x
1
<
p
3
I
0
I
e27
I
7
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
and
x
4
Hash
x
16
new_from_literal
x
3
baz
x
3
[]=
x
2
or
x
6
Sequel
n
n
x
1
x
x
4
expr
x
1
~
x
4
case
x
2
[]
x
6
should
s
121
SELECT * FROM t WHERE ((((foo > $foo) AND (bar < $bar)) OR (baz = $baz)) AND (CASE WHEN (x != $x) THEN 't' ELSE 'f' END))
x
3
foo
x
3
bar
x
2
==
p
3
I
0
I
e27
I
89
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
should handle JOIN ON
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
65
39
0
39
1
7
2
49
3
1
7
4
7
5
35
1
49
6
2
7
7
7
8
7
9
35
2
7
10
79
35
2
35
2
49
6
2
49
11
1
49
12
0
7
13
64
44
43
14
79
49
15
1
13
7
16
79
49
17
2
15
35
2
83
18
11
I
7
I
0
I
0
I
0
I
-2
p
19
x
2
@u
x
3
@ds
x
1
x
x
10
cross_join
x
1
a
x
1
u
x
4
join
x
1
b
x
1
c
x
1
d
x
1
e
x
2
[]
x
6
should
s
98
SELECT * FROM t CROSS JOIN x INNER JOIN a USING (u) INNER JOIN b ON ((b.c = a.d) AND (b.e = $b.e))
x
4
Hash
x
16
new_from_literal
x
3
b.e
x
3
[]=
x
2
==
p
3
I
0
I
e2b
I
41
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
97
should raise an UnbindDuplicate exception if same variable is used with multiple different values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
44
43
1
79
49
2
1
13
7
3
80
49
4
2
15
49
6
1
49
7
0
11
I
6
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
x
6
filter
x
2
or
x
6
unbind
p
3
I
0
I
e2f
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
15
UnbindDuplicate
x
11
raise_error
x
6
should
p
3
I
0
I
e2f
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
81
should handle case where the same variable has the same value in multiple places 
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
69
39
0
39
1
44
43
2
79
49
3
1
13
7
4
79
49
5
2
15
49
6
1
44
43
2
79
49
3
1
13
7
4
79
49
5
2
15
49
7
1
49
8
1
49
9
0
7
10
64
44
43
2
79
49
3
1
13
7
4
79
49
5
2
15
35
2
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
2
@u
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
x
6
filter
x
2
or
x
2
[]
x
6
should
s
52
SELECT * FROM t WHERE ((foo = $foo) OR (foo = $foo))
x
2
==
p
3
I
0
I
e33
I
45
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
85
should raise Error for unhandled objects inside Identifiers and QualifiedIndentifiers
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
45
1
2
43
3
43
4
13
71
5
47
9
29
47
49
6
0
13
35
0
47
49
7
1
15
8
34
35
0
49
5
1
79
85
8
49
9
1
49
10
0
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
6
Sequel
n
x
3
SQL
x
10
Identifier
x
3
new
x
8
allocate
x
10
initialize
x
1
>
x
6
filter
x
6
unbind
p
3
I
0
I
e37
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
39
0
56
1
50
2
0
49
3
0
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
5
48
0
44
43
1
78
49
2
1
49
3
1
79
85
4
11
I
4
I
0
I
0
I
0
I
-2
p
5
x
3
foo
x
4
Hash
x
16
new_from_literal
x
7
qualify
x
1
>
p
3
I
0
I
e38
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
filter
x
6
unbind
p
3
I
0
I
e38
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
5
I
0
I
e37
I
15
I
e38
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
29
I
0
I
df3
I
8
I
df8
I
13
I
e01
I
1e
I
e06
I
29
I
e12
I
34
I
e16
I
3f
I
e1a
I
4a
I
e1e
I
55
I
e22
I
60
I
e26
I
6b
I
e2a
I
76
I
e2e
I
81
I
e32
I
8c
I
e36
I
97
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
41
Sequel::Dataset #with and #with_recursive
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
96
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
19
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
38
6
15
39
6
7
7
49
8
1
38
9
11
I
3
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
3
@db
x
1
t
x
2
[]
x
3
@ds
p
5
I
0
I
e3e
I
1d
I
e3f
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
58
#with should take a name and dataset and use a WITH clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
39
0
7
1
39
2
7
3
49
4
1
49
5
2
49
6
0
49
7
0
7
8
64
83
9
11
I
5
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
1
t
x
3
@db
x
1
x
x
2
[]
x
4
with
x
3
sql
x
6
should
s
43
WITH t AS (SELECT * FROM x) SELECT * FROM t
x
2
==
p
3
I
0
I
e43
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
102
#with_recursive should take a name, nonrecursive dataset, and recursive dataset, and use a WITH clause
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
7
1
39
2
7
3
49
4
1
39
2
7
1
49
4
1
49
5
3
49
6
0
49
7
0
7
8
64
83
9
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
3
@ds
x
1
t
x
3
@db
x
1
x
x
2
[]
x
14
with_recursive
x
3
sql
x
6
should
s
69
WITH t AS (SELECT * FROM x UNION ALL SELECT * FROM t) SELECT * FROM t
x
2
==
p
3
I
0
I
e47
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
85
#with and #with_recursive should add to existing WITH clause if called multiple times
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
135
39
0
7
1
39
2
7
3
49
4
1
49
5
2
7
6
39
2
7
7
49
4
1
49
5
2
49
8
0
49
9
0
7
10
64
83
11
15
39
0
7
1
39
2
7
3
49
4
1
39
2
7
1
49
4
1
49
12
3
7
6
39
2
7
7
49
4
1
39
2
7
6
49
4
1
49
12
3
49
8
0
49
9
0
7
13
64
83
11
15
39
0
7
1
39
2
7
3
49
4
1
49
5
2
7
6
39
2
7
7
49
4
1
39
2
7
6
49
4
1
49
12
3
49
8
0
49
9
0
7
14
64
83
11
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
3
@ds
x
1
t
x
3
@db
x
1
x
x
2
[]
x
4
with
x
1
j
x
1
y
x
3
sql
x
6
should
s
67
WITH t AS (SELECT * FROM x), j AS (SELECT * FROM y) SELECT * FROM t
x
2
==
x
14
with_recursive
s
119
WITH t AS (SELECT * FROM x UNION ALL SELECT * FROM t), j AS (SELECT * FROM y UNION ALL SELECT * FROM j) SELECT * FROM t
s
93
WITH t AS (SELECT * FROM x), j AS (SELECT * FROM y UNION ALL SELECT * FROM j) SELECT * FROM t
p
7
I
0
I
e4b
I
26
I
e4c
I
5a
I
e4d
I
87
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
53
#with and #with_recursive should take an :args option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
97
39
0
7
1
39
2
7
3
49
4
1
44
43
5
79
49
6
1
13
7
7
7
8
35
1
49
9
2
15
49
10
3
49
11
0
49
12
0
7
13
64
83
14
15
39
0
7
1
39
2
7
3
49
4
1
39
2
7
1
49
4
1
44
43
5
79
49
6
1
13
7
7
7
8
7
15
35
2
49
9
2
15
49
16
4
49
11
0
49
12
0
7
17
64
83
14
11
I
a
I
0
I
0
I
0
I
-2
p
18
x
3
@ds
x
1
t
x
3
@db
x
1
x
x
2
[]
x
4
Hash
x
16
new_from_literal
x
4
args
x
1
b
x
3
[]=
x
4
with
x
3
sql
x
6
should
s
46
WITH t(b) AS (SELECT * FROM x) SELECT * FROM t
x
2
==
x
1
c
x
14
with_recursive
s
75
WITH t(b, c) AS (SELECT * FROM x UNION ALL SELECT * FROM t) SELECT * FROM t
p
5
I
0
I
e51
I
2c
I
e52
I
61
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
55
#with_recursive should take an :union_all=>false option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
39
0
7
1
39
2
7
3
49
4
1
39
2
7
1
49
4
1
44
43
5
79
49
6
1
13
7
7
3
49
8
2
15
49
9
4
49
10
0
49
11
0
7
12
64
83
13
11
I
9
I
0
I
0
I
0
I
-2
p
14
x
3
@ds
x
1
t
x
3
@db
x
1
x
x
2
[]
x
4
Hash
x
16
new_from_literal
x
9
union_all
x
3
[]=
x
14
with_recursive
x
3
sql
x
6
should
s
65
WITH t AS (SELECT * FROM x UNION SELECT * FROM t) SELECT * FROM t
x
2
==
p
3
I
0
I
e56
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
80
#with and #with_recursive should raise an error unless the dataset supports CTEs
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
7
1
56
2
50
3
1
15
5
56
4
47
50
5
0
5
45
6
7
43
8
47
49
9
1
49
10
1
15
5
56
11
47
50
5
0
5
45
6
12
43
8
47
49
9
1
49
10
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
13
supports_cte?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
e5a
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
7
1
39
2
7
3
49
4
1
44
43
5
79
49
6
1
13
7
7
7
8
35
1
49
9
2
15
49
10
3
11
I
8
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
1
t
x
3
@db
x
1
x
x
2
[]
x
4
Hash
x
16
new_from_literal
x
4
args
x
1
b
x
3
[]=
x
4
with
p
3
I
0
I
e5b
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
39
2
7
3
49
4
1
39
2
7
1
49
4
1
44
43
5
79
49
6
1
13
7
7
7
8
7
9
35
2
49
10
2
15
49
11
4
11
I
a
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
1
t
x
3
@db
x
1
x
x
2
[]
x
4
Hash
x
16
new_from_literal
x
4
args
x
1
b
x
1
c
x
3
[]=
x
14
with_recursive
p
3
I
0
I
e5c
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
7
I
0
I
e5a
I
a
I
e5b
I
1f
I
e5c
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
77
#with should work on insert, update, and delete statements if they support it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
108
7
0
7
1
7
2
35
3
56
3
50
4
0
15
39
5
7
6
39
7
7
8
49
9
1
49
10
2
79
49
11
1
49
12
0
7
13
64
83
14
15
39
5
7
6
39
7
7
8
49
9
1
49
10
2
44
43
15
79
49
16
1
13
7
17
79
49
18
2
15
49
19
1
49
12
0
7
20
64
83
14
15
39
5
7
6
39
7
7
8
49
9
1
49
10
2
49
21
0
49
12
0
7
22
64
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
23
x
6
insert
x
6
update
x
6
delete
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
57
19
0
15
39
0
20
0
47
101
1
7
2
63
2
47
49
3
0
56
4
50
5
1
11
I
5
I
1
I
1
I
1
n
p
6
x
3
@ds
x
4
to_s
s
15
_clause_methods
x
6
to_sym
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
21
1
0
47
101
0
7
1
63
2
47
49
2
0
35
1
54
52
3
0
81
4
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
4
to_s
s
9
_with_sql
x
6
to_sym
n
x
1
+
p
3
I
0
I
e61
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
p
5
I
0
I
e60
I
4
I
e61
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
m
x
4
each
x
3
@ds
x
1
t
x
3
@db
x
1
x
x
2
[]
x
4
with
x
10
insert_sql
x
6
should
s
52
WITH t AS (SELECT * FROM x) INSERT INTO t VALUES (1)
x
2
==
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
x
10
update_sql
s
48
WITH t AS (SELECT * FROM x) UPDATE t SET foo = 1
x
10
delete_sql
s
41
WITH t AS (SELECT * FROM x) DELETE FROM t
p
9
I
0
I
e60
I
e
I
e63
I
29
I
e64
I
52
I
e65
I
6c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
90
should hoist WITH clauses in given dataset(s) if dataset doesn't support WITH in subselect
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
115
39
0
7
1
56
2
50
3
1
15
39
0
7
4
56
5
50
3
1
15
39
0
7
6
39
0
7
7
49
8
1
7
7
39
0
7
9
49
8
1
49
10
2
49
10
2
49
11
0
49
12
0
7
13
64
83
14
15
39
0
7
6
39
0
7
7
49
8
1
7
7
39
0
7
9
49
8
1
49
10
2
39
0
7
15
49
8
1
7
15
39
0
7
16
49
8
1
49
10
2
49
17
3
49
11
0
49
12
0
7
18
64
83
14
11
I
8
I
0
I
0
I
0
I
-2
p
19
x
3
@ds
x
13
supports_cte?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
e69
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
26
supports_cte_in_subselect?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
e6a
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
1
t
x
1
s
x
4
from
x
1
r
x
4
with
x
3
sql
x
6
should
s
67
WITH s AS (SELECT * FROM r), t AS (SELECT * FROM s) SELECT * FROM t
x
2
==
x
1
q
x
1
p
x
14
with_recursive
s
117
WITH s AS (SELECT * FROM r), q AS (SELECT * FROM p), t AS (SELECT * FROM s UNION ALL SELECT * FROM q) SELECT * FROM t
p
9
I
0
I
e69
I
a
I
e6a
I
14
I
e6b
I
3a
I
e6c
I
73
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
19
I
0
I
e3d
I
8
I
e42
I
13
I
e46
I
1e
I
e4a
I
29
I
e50
I
34
I
e55
I
3f
I
e59
I
4a
I
e5f
I
55
I
e68
I
60
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
x
3
SQL
x
9
Constants
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
85
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
17
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
29
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
38
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
3
@db
p
3
I
0
I
e72
I
1d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
24
should have CURRENT_DATE
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
45
1
2
43
3
43
4
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
10
43
5
49
6
1
49
7
0
7
8
64
83
9
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
3
@db
x
6
Sequel
n
x
3
SQL
x
9
Constants
x
12
CURRENT_DATE
x
7
literal
x
6
should
s
12
CURRENT_DATE
x
2
==
n
p
5
I
0
I
e76
I
17
I
e77
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
2
it
s
24
should have CURRENT_TIME
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
45
1
2
43
3
43
4
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
10
43
5
49
6
1
49
7
0
7
8
64
83
9
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
3
@db
x
6
Sequel
n
x
3
SQL
x
9
Constants
x
12
CURRENT_TIME
x
7
literal
x
6
should
s
12
CURRENT_TIME
x
2
==
n
p
5
I
0
I
e7b
I
17
I
e7c
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
29
should have CURRENT_TIMESTAMP
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
45
1
2
43
3
43
4
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
10
43
5
49
6
1
49
7
0
7
8
64
83
9
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
3
@db
x
6
Sequel
n
x
3
SQL
x
9
Constants
x
17
CURRENT_TIMESTAMP
x
7
literal
x
6
should
s
17
CURRENT_TIMESTAMP
x
2
==
n
p
5
I
0
I
e80
I
17
I
e81
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
16
should have NULL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
45
1
2
43
3
43
4
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
10
43
5
49
6
1
49
7
0
7
8
64
83
9
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
3
@db
x
6
Sequel
n
x
3
SQL
x
9
Constants
x
4
NULL
x
7
literal
x
6
should
s
4
NULL
x
2
==
n
p
5
I
0
I
e85
I
17
I
e86
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
19
should have NOTNULL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
45
1
2
43
3
43
4
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
10
43
5
49
6
1
49
7
0
7
8
64
83
9
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
3
@db
x
6
Sequel
n
x
3
SQL
x
9
Constants
x
7
NOTNULL
x
7
literal
x
6
should
s
8
NOT NULL
x
2
==
n
p
5
I
0
I
e8a
I
17
I
e8b
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
28
should have TRUE and SQLTRUE
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
84
39
0
45
1
2
43
3
43
4
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
10
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
11
43
3
43
4
43
12
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
13
43
12
49
6
1
49
7
0
7
8
64
83
9
11
I
3
I
0
I
0
I
0
I
-2
p
14
x
3
@db
x
6
Sequel
n
x
3
SQL
x
9
Constants
x
4
TRUE
x
7
literal
x
6
should
s
3
't'
x
2
==
n
n
x
7
SQLTRUE
n
p
9
I
0
I
e8f
I
17
I
e90
I
2a
I
e91
I
41
I
e92
I
54
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
30
should have FALSE and SQLFALSE
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
84
39
0
45
1
2
43
3
43
4
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
10
43
5
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
11
43
3
43
4
43
12
49
6
1
49
7
0
7
8
64
83
9
15
39
0
45
1
13
43
12
49
6
1
49
7
0
7
8
64
83
9
11
I
3
I
0
I
0
I
0
I
-2
p
14
x
3
@db
x
6
Sequel
n
x
3
SQL
x
9
Constants
x
5
FALSE
x
7
literal
x
6
should
s
3
'f'
x
2
==
n
n
x
8
SQLFALSE
n
p
9
I
0
I
e96
I
17
I
e97
I
2a
I
e98
I
41
I
e99
I
54
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
17
I
0
I
e71
I
8
I
e75
I
13
I
e7a
I
1e
I
e7f
I
29
I
e84
I
34
I
e89
I
3f
I
e8e
I
4a
I
e95
I
55
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
23
Sequel timezone support
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
137
5
56
0
47
50
1
0
15
5
56
2
47
50
3
0
15
5
7
4
64
56
5
47
50
6
1
15
5
7
7
64
56
8
47
50
6
1
15
5
7
9
64
56
10
47
50
6
1
15
5
7
11
64
56
12
47
50
6
1
15
5
7
13
64
56
14
47
50
6
1
15
5
7
15
64
56
16
47
50
6
1
15
5
7
17
64
56
18
47
50
6
1
15
5
7
19
64
56
20
47
50
6
1
15
5
7
21
64
56
22
47
50
6
1
15
5
7
23
64
56
24
47
50
6
1
15
5
7
25
64
56
26
47
50
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
27
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
89
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
38
6
15
39
6
49
7
0
38
8
15
39
8
7
9
56
10
50
11
1
15
39
8
7
12
56
13
50
11
1
15
5
7
14
64
45
15
16
49
17
0
49
18
0
4
60
49
19
1
4
60
49
20
1
36
1
47
51
21
1
38
22
11
I
5
I
0
I
0
I
0
I
-2
p
23
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
3
@db
x
7
dataset
x
8
@dataset
x
29
supports_timestamp_timezones?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
ea1
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
x
25
supports_timestamp_usecs?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
3
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
ea2
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
9
%+03i%02i
x
4
Time
n
x
3
now
x
10
utc_offset
x
1
/
x
6
divmod
x
7
sprintf
x
7
@offset
p
11
I
0
I
e9f
I
1d
I
ea0
I
25
I
ea1
I
2f
I
ea2
I
39
I
ea3
I
59
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
26
45
0
1
1
13
18
2
49
2
1
15
15
45
0
3
45
4
5
13
18
2
49
6
1
15
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
17
default_timezone=
n
x
4
Time
n
x
15
datetime_class=
p
5
I
0
I
ea6
I
c
I
ea7
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
after
s
67
should handle an database timezone of :utc when literalizing values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
104
45
0
1
7
2
13
18
2
49
3
1
15
15
45
4
5
49
6
0
19
0
15
20
0
49
7
0
7
8
64
49
9
1
19
1
15
39
10
20
0
49
11
1
49
12
0
20
1
47
101
13
7
14
63
2
83
15
15
45
16
17
49
6
0
19
0
15
20
0
78
49
18
1
7
8
64
49
9
1
19
1
15
39
10
20
0
49
11
1
49
12
0
20
1
47
101
13
7
14
63
2
83
15
11
I
6
I
2
I
0
I
0
I
-2
p
19
x
6
Sequel
n
x
3
utc
x
18
database_timezone=
x
4
Time
n
x
3
now
x
6
getutc
s
18
'%Y-%m-%d %H:%M:%S
x
8
strftime
x
8
@dataset
x
7
literal
x
6
should
x
4
to_s
s
6
+0000'
x
2
==
x
8
DateTime
n
x
10
new_offset
p
15
I
0
I
eab
I
d
I
ead
I
16
I
eae
I
24
I
eaf
I
3a
I
eb1
I
43
I
eb2
I
52
I
eb3
I
68
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
1
s
x
7
specify
s
69
should handle an database timezone of :local when literalizing values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
129
45
0
1
7
2
13
18
2
49
3
1
15
15
45
4
5
49
6
0
49
7
0
19
0
15
20
0
49
8
0
7
9
64
49
10
1
19
1
15
39
11
20
0
49
12
1
49
13
0
20
1
47
101
14
39
15
47
101
14
7
16
63
3
83
17
15
45
18
19
49
6
0
78
49
20
1
19
0
15
20
0
45
18
21
49
6
0
49
22
0
49
20
1
7
9
64
49
10
1
19
1
15
39
11
20
0
49
12
1
49
13
0
20
1
47
101
14
39
15
47
101
14
7
16
63
3
83
17
11
I
7
I
2
I
0
I
0
I
-2
p
23
x
6
Sequel
n
x
5
local
x
18
database_timezone=
x
4
Time
n
x
3
now
x
3
utc
x
8
getlocal
s
18
'%Y-%m-%d %H:%M:%S
x
8
strftime
x
8
@dataset
x
7
literal
x
6
should
x
4
to_s
x
7
@offset
s
1
'
x
2
==
x
8
DateTime
n
x
10
new_offset
n
x
6
offset
p
15
I
0
I
eb7
I
d
I
eb9
I
19
I
eba
I
27
I
ebb
I
42
I
ebd
I
4f
I
ebe
I
66
I
ebf
I
81
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
1
s
s
63
should have Database#timezone override Sequel.database_timezone
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
257
45
0
1
7
2
13
18
2
49
3
1
15
15
39
4
7
5
13
18
2
49
6
1
15
15
45
7
8
49
9
0
19
0
15
20
0
49
10
0
7
11
64
49
12
1
19
1
15
39
13
20
0
49
14
1
49
15
0
20
1
47
101
16
7
17
63
2
83
18
15
45
19
20
49
9
0
19
0
15
20
0
78
49
21
1
7
11
64
49
12
1
19
1
15
39
13
20
0
49
14
1
49
15
0
20
1
47
101
16
7
17
63
2
83
18
15
45
0
22
7
5
13
18
2
49
3
1
15
15
39
4
7
2
13
18
2
49
6
1
15
15
45
7
23
49
9
0
49
5
0
19
0
15
20
0
49
24
0
7
11
64
49
12
1
19
1
15
39
13
20
0
49
14
1
49
15
0
20
1
47
101
16
39
25
47
101
16
7
26
63
3
83
18
15
45
19
27
49
9
0
78
49
21
1
19
0
15
20
0
45
19
28
49
9
0
49
29
0
49
21
1
7
11
64
49
12
1
19
1
15
39
13
20
0
49
14
1
49
15
0
20
1
47
101
16
39
25
47
101
16
7
26
63
3
83
18
11
I
7
I
2
I
0
I
0
I
-2
p
30
x
6
Sequel
n
x
5
local
x
18
database_timezone=
x
3
@db
x
3
utc
x
9
timezone=
x
4
Time
n
x
3
now
x
6
getutc
s
18
'%Y-%m-%d %H:%M:%S
x
8
strftime
x
8
@dataset
x
7
literal
x
6
should
x
4
to_s
s
6
+0000'
x
2
==
x
8
DateTime
n
x
10
new_offset
n
n
x
8
getlocal
x
7
@offset
s
1
'
n
n
x
6
offset
p
33
I
0
I
ec3
I
d
I
ec4
I
19
I
ec6
I
22
I
ec7
I
30
I
ec8
I
46
I
eca
I
4f
I
ecb
I
5e
I
ecc
I
74
I
ece
I
81
I
ecf
I
8d
I
ed1
I
99
I
ed2
I
a7
I
ed3
I
c2
I
ed5
I
cf
I
ed6
I
e6
I
ed7
I
101
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
t
x
1
s
s
72
should handle converting database timestamps into application timestamps
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
442
45
0
1
7
2
13
18
2
49
3
1
15
15
45
0
4
7
5
13
18
2
49
6
1
15
15
45
7
8
49
9
0
49
2
0
19
0
15
45
0
10
20
0
49
11
1
49
12
0
49
13
0
20
0
49
14
0
49
12
0
83
15
15
45
0
16
20
0
49
12
0
49
11
1
49
12
0
49
13
0
20
0
49
14
0
49
12
0
83
15
15
45
0
17
20
0
7
18
64
49
19
1
49
11
1
49
12
0
49
13
0
20
0
49
14
0
49
12
0
83
15
15
45
0
20
45
21
22
13
18
2
49
23
1
15
15
45
21
24
49
9
0
19
1
15
20
1
78
49
25
1
19
2
15
45
0
26
20
2
49
11
1
49
12
0
49
13
0
20
1
49
12
0
83
15
15
45
0
27
20
2
49
12
0
49
11
1
49
12
0
49
13
0
20
1
49
12
0
83
15
15
45
0
28
20
2
7
18
64
49
19
1
49
11
1
49
12
0
49
13
0
20
1
49
12
0
83
15
15
45
0
29
45
7
30
13
18
2
49
23
1
15
15
45
0
31
7
5
13
18
2
49
3
1
15
15
45
0
32
7
2
13
18
2
49
6
1
15
15
45
0
33
20
0
49
14
0
49
11
1
49
12
0
49
13
0
20
0
49
12
0
83
15
15
45
0
34
20
0
49
14
0
49
12
0
49
11
1
49
12
0
49
13
0
20
0
49
12
0
83
15
15
45
0
35
20
0
49
14
0
7
18
64
49
19
1
49
11
1
49
12
0
49
13
0
20
0
49
12
0
83
15
15
45
0
36
45
21
37
13
18
2
49
23
1
15
15
45
0
38
20
1
49
11
1
49
12
0
49
13
0
20
2
49
12
0
83
15
15
45
0
39
20
1
49
12
0
49
11
1
49
12
0
49
13
0
20
2
49
12
0
83
15
15
45
0
40
20
1
7
18
64
49
19
1
49
11
1
49
12
0
49
13
0
20
2
49
12
0
83
15
11
I
7
I
3
I
0
I
0
I
-2
p
41
x
6
Sequel
n
x
3
utc
x
18
database_timezone=
n
x
5
local
x
21
application_timezone=
x
4
Time
n
x
3
now
n
x
33
database_to_application_timestamp
x
4
to_s
x
6
should
x
8
getlocal
x
2
==
n
n
s
17
%Y-%m-%d %H:%M:%S
x
8
strftime
n
x
8
DateTime
n
x
15
datetime_class=
n
x
10
new_offset
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
p
45
I
0
I
edb
I
d
I
edc
I
1a
I
edd
I
26
I
ede
I
3f
I
edf
I
5b
I
ee0
I
7a
I
ee2
I
88
I
ee3
I
91
I
ee4
I
9a
I
ee5
I
b0
I
ee6
I
c9
I
ee7
I
e5
I
ee9
I
f3
I
eea
I
100
I
eeb
I
10d
I
eec
I
126
I
eed
I
142
I
eee
I
161
I
ef0
I
16f
I
ef1
I
185
I
ef2
I
19e
I
ef3
I
1ba
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
t
x
2
dt
x
3
dt2
s
43
should handle typecasting timestamp columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
454
45
0
1
7
2
13
18
2
49
3
1
15
15
45
0
4
7
5
13
18
2
49
6
1
15
15
45
7
8
49
9
0
49
2
0
19
0
15
39
10
7
11
20
0
49
12
2
49
13
0
49
14
0
20
0
49
15
0
49
13
0
83
16
15
39
10
7
11
20
0
49
13
0
49
12
2
49
13
0
49
14
0
20
0
49
15
0
49
13
0
83
16
15
39
10
7
11
20
0
7
17
64
49
18
1
49
12
2
49
13
0
49
14
0
20
0
49
15
0
49
13
0
83
16
15
45
0
19
45
20
21
13
18
2
49
22
1
15
15
45
20
23
49
9
0
19
1
15
20
1
78
49
24
1
19
2
15
39
10
7
11
20
2
49
12
2
49
13
0
49
14
0
20
1
49
13
0
83
16
15
39
10
7
11
20
2
49
13
0
49
12
2
49
13
0
49
14
0
20
1
49
13
0
83
16
15
39
10
7
11
20
2
7
17
64
49
18
1
49
12
2
49
13
0
49
14
0
20
1
49
13
0
83
16
15
45
0
25
45
7
26
13
18
2
49
22
1
15
15
45
0
27
7
5
13
18
2
49
3
1
15
15
45
0
28
7
2
13
18
2
49
6
1
15
15
39
10
7
11
20
0
49
15
0
49
12
2
49
13
0
49
14
0
20
0
49
13
0
83
16
15
39
10
7
11
20
0
49
15
0
49
13
0
49
12
2
49
13
0
49
14
0
20
0
49
13
0
83
16
15
39
10
7
11
20
0
49
15
0
7
17
64
49
18
1
49
12
2
49
13
0
49
14
0
20
0
49
13
0
83
16
15
45
0
29
45
20
30
13
18
2
49
22
1
15
15
39
10
7
11
20
1
49
12
2
49
13
0
49
14
0
20
2
49
13
0
83
16
15
39
10
7
11
20
1
49
13
0
49
12
2
49
13
0
49
14
0
20
2
49
13
0
83
16
15
39
10
7
11
20
1
7
17
64
49
18
1
49
12
2
49
13
0
49
14
0
20
2
49
13
0
83
16
11
I
8
I
3
I
0
I
0
I
-2
p
31
x
6
Sequel
n
x
3
utc
x
18
typecast_timezone=
n
x
5
local
x
21
application_timezone=
x
4
Time
n
x
3
now
x
3
@db
x
8
datetime
x
14
typecast_value
x
4
to_s
x
6
should
x
8
getlocal
x
2
==
s
17
%Y-%m-%d %H:%M:%S
x
8
strftime
n
x
8
DateTime
n
x
15
datetime_class=
n
x
10
new_offset
n
n
n
n
n
n
p
45
I
0
I
ef7
I
d
I
ef8
I
1a
I
ef9
I
26
I
efa
I
40
I
efb
I
5d
I
efc
I
7d
I
efe
I
8b
I
eff
I
94
I
f00
I
9d
I
f01
I
b4
I
f02
I
ce
I
f03
I
eb
I
f05
I
f9
I
f06
I
106
I
f07
I
113
I
f08
I
12d
I
f09
I
14a
I
f0a
I
16a
I
f0c
I
178
I
f0d
I
18f
I
f0e
I
1a9
I
f0f
I
1c6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
t
x
2
dt
x
3
dt2
s
75
should handle converting database timestamp columns from an array of values
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
346
45
0
1
7
2
13
18
2
49
3
1
15
15
45
0
4
7
5
13
18
2
49
6
1
15
15
45
7
8
49
9
0
49
2
0
19
0
15
45
0
10
20
0
49
11
0
20
0
49
12
0
20
0
49
13
0
20
0
49
14
0
20
0
49
15
0
20
0
49
16
0
35
6
49
17
1
49
18
0
49
19
0
20
0
49
20
0
49
18
0
83
21
15
45
0
22
45
23
24
13
18
2
49
25
1
15
15
45
23
26
49
9
0
19
1
15
20
1
78
49
27
1
19
2
15
45
0
28
20
2
49
11
0
20
2
49
12
0
20
2
49
13
0
20
2
49
14
0
20
2
49
15
0
20
2
49
16
0
35
6
49
17
1
49
18
0
49
19
0
20
1
49
18
0
83
21
15
45
0
29
45
7
30
13
18
2
49
25
1
15
15
45
0
31
7
5
13
18
2
49
3
1
15
15
45
0
32
7
2
13
18
2
49
6
1
15
15
20
0
49
20
0
19
0
15
45
0
33
20
0
49
11
0
20
0
49
12
0
20
0
49
13
0
20
0
49
14
0
20
0
49
15
0
20
0
49
16
0
35
6
49
17
1
49
18
0
49
19
0
20
0
49
34
0
49
18
0
83
21
15
45
0
35
45
23
36
13
18
2
49
25
1
15
15
45
0
37
20
1
49
11
0
20
1
49
12
0
20
1
49
13
0
20
1
49
14
0
20
1
49
15
0
20
1
49
16
0
35
6
49
17
1
49
18
0
49
19
0
20
2
49
18
0
83
21
11
I
b
I
3
I
0
I
0
I
-2
p
38
x
6
Sequel
n
x
3
utc
x
18
database_timezone=
n
x
5
local
x
21
application_timezone=
x
4
Time
n
x
3
now
n
x
4
year
x
3
mon
x
3
day
x
4
hour
x
3
min
x
3
sec
x
33
database_to_application_timestamp
x
4
to_s
x
6
should
x
8
getlocal
x
2
==
n
x
8
DateTime
n
x
15
datetime_class=
n
x
10
new_offset
n
n
n
n
n
n
x
6
getutc
n
n
n
p
31
I
0
I
f13
I
d
I
f14
I
1a
I
f15
I
26
I
f16
I
5d
I
f18
I
6b
I
f19
I
74
I
f1a
I
7d
I
f1b
I
b1
I
f1d
I
bf
I
f1e
I
cc
I
f1f
I
d9
I
f20
I
e1
I
f21
I
118
I
f23
I
126
I
f24
I
15a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
1
t
x
2
dt
x
3
dt2
s
84
should raise an InvalidValue error when an error occurs while converting a timestamp
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
45
0
1
78
78
78
78
78
78
35
6
49
2
1
11
I
8
I
0
I
0
I
0
I
-2
p
3
x
6
Sequel
n
x
33
database_to_application_timestamp
p
3
I
0
I
f28
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
12
InvalidValue
x
11
raise_error
x
6
should
p
3
I
0
I
f28
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
89
should raise an error when attempting to typecast to a timestamp from an unsupported type
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
45
0
1
45
2
3
13
71
4
47
9
24
47
49
5
0
13
47
49
6
0
15
8
27
49
4
0
49
7
1
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
6
Sequel
n
x
6
Object
n
x
3
new
x
8
allocate
x
10
initialize
x
33
database_to_application_timestamp
p
3
I
0
I
f2c
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
12
InvalidValue
x
11
raise_error
x
6
should
p
3
I
0
I
f2c
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
148
should raise an InvalidValue error when the DateTime class is used and when a bad application timezone is used when attempting to convert timestamps
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
45
0
1
7
2
13
18
2
49
3
1
15
15
45
0
4
45
5
6
13
18
2
49
7
1
15
15
5
56
8
47
50
9
0
5
45
0
10
43
11
47
49
12
1
49
13
1
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
4
blah
x
21
application_timezone=
n
x
8
DateTime
n
x
15
datetime_class=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
45
0
1
7
2
64
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
6
Sequel
n
s
19
2009-06-01 10:20:30
x
33
database_to_application_timestamp
p
3
I
0
I
f32
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
n
x
12
InvalidValue
x
11
raise_error
x
6
should
p
7
I
0
I
f30
I
d
I
f31
I
1b
I
f32
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
145
should raise an InvalidValue error when the DateTime class is used and when a bad database timezone is used when attempting to convert timestamps
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
45
0
1
7
2
13
18
2
49
3
1
15
15
45
0
4
45
5
6
13
18
2
49
7
1
15
15
5
56
8
47
50
9
0
5
45
0
10
43
11
47
49
12
1
49
13
1
11
I
4
I
0
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
4
blah
x
18
database_timezone=
n
x
8
DateTime
n
x
15
datetime_class=
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
45
0
1
7
2
64
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
6
Sequel
n
s
19
2009-06-01 10:20:30
x
33
database_to_application_timestamp
p
3
I
0
I
f38
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
n
x
12
InvalidValue
x
11
raise_error
x
6
should
p
7
I
0
I
f36
I
d
I
f37
I
1b
I
f38
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
67
should have Sequel.default_timezone= should set all other timezones
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
94
45
0
1
49
2
0
49
3
0
1
83
4
15
45
0
5
49
6
0
49
3
0
1
83
4
15
45
0
7
49
8
0
49
3
0
1
83
4
15
45
0
9
7
10
13
18
2
49
11
1
15
15
45
0
12
49
2
0
49
3
0
7
10
83
4
15
45
0
13
49
6
0
49
3
0
7
10
83
4
15
45
0
14
49
8
0
49
3
0
7
10
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
15
x
6
Sequel
n
x
17
database_timezone
x
6
should
x
2
==
n
x
20
application_timezone
n
x
17
typecast_timezone
n
x
3
utc
x
17
default_timezone=
n
n
n
p
15
I
0
I
f3c
I
d
I
f3d
I
1a
I
f3e
I
27
I
f3f
I
34
I
f40
I
42
I
f41
I
50
I
f42
I
5e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
27
I
0
I
e9e
I
8
I
ea5
I
10
I
eaa
I
1b
I
eb6
I
26
I
ec2
I
31
I
eda
I
3c
I
ef6
I
47
I
f12
I
52
I
f27
I
5d
I
f2b
I
68
I
f2f
I
73
I
f35
I
7e
I
f3b
I
89
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
26
Sequel::Dataset#select_map
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
140
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
27
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
79
49
3
1
13
7
5
79
49
6
2
15
44
43
2
79
49
3
1
13
7
5
80
49
6
2
15
35
2
49
6
2
15
49
7
1
7
8
49
9
1
38
10
11
I
a
I
0
I
0
I
0
I
-2
p
11
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
c
x
3
[]=
x
4
mock
x
1
t
x
2
[]
x
3
@ds
p
3
I
0
I
f48
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
36
should do select and map in one step
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
49
2
1
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
1
a
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
15
SELECT a FROM t
p
5
I
0
I
f4c
I
11
I
f4d
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
46
should handle implicit qualifiers in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
49
2
1
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
4
a__b
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
17
SELECT a.b FROM t
p
5
I
0
I
f51
I
11
I
f52
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
60
should raise if multiple arguments and can't determine alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
15
5
56
9
47
50
1
0
5
45
2
10
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
18
39
0
45
1
2
7
3
49
4
1
7
5
35
2
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
6
Sequel
n
x
1
a
x
8
function
x
1
b
x
10
select_map
p
3
I
0
I
f56
I
12
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
45
1
2
7
3
49
4
1
56
5
50
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
6
Sequel
n
x
1
a
x
8
function
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
4
5
48
0
11
I
2
I
0
I
0
I
0
I
-2
p
1
x
1
b
p
3
I
0
I
f57
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
select_map
p
3
I
0
I
f57
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
56
1
50
2
0
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
56
0
47
50
1
0
5
48
2
35
2
11
I
3
I
0
I
0
I
0
I
-2
p
3
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
f58
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
1
a
x
1
b
p
3
I
0
I
f58
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
select_map
p
3
I
0
I
f58
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
7
I
0
I
f56
I
15
I
f57
I
2a
I
f58
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should handle implicit aliases in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
49
2
1
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
5
a___b
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
20
SELECT a AS b FROM t
p
5
I
0
I
f5c
I
11
I
f5d
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
should handle other objects
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
39
0
45
1
2
7
3
64
49
4
1
7
5
49
6
1
49
7
1
49
8
0
79
80
35
2
83
9
15
39
0
49
10
0
49
11
0
49
8
0
7
12
64
35
1
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
6
Sequel
n
s
1
a
x
3
lit
x
1
b
x
2
as
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
20
SELECT a AS b FROM t
p
5
I
0
I
f61
I
1d
I
f62
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
38
should handle identifiers with strings
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
78
39
0
45
1
2
43
3
43
4
13
71
5
47
9
30
47
49
6
0
13
7
7
64
47
49
8
1
15
8
36
7
7
64
49
5
1
7
9
35
2
49
10
1
49
11
0
79
79
35
2
80
80
35
2
35
2
83
12
15
39
0
49
13
0
49
14
0
49
11
0
7
15
64
35
1
83
12
11
I
5
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
6
Sequel
n
x
3
SQL
x
10
Identifier
x
3
new
x
8
allocate
s
1
c
x
10
initialize
x
1
c
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
18
SELECT c, c FROM t
p
5
I
0
I
f66
I
3b
I
f67
I
4e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
should accept a block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
56
1
50
2
0
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
5
48
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
t__c
x
1
a
p
3
I
0
I
f6b
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
20
SELECT a(t.c) FROM t
p
5
I
0
I
f6b
I
11
I
f6c
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
46
should accept a block with an array of columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
56
1
50
2
0
49
3
0
79
79
35
2
80
80
35
2
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
5
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
5
5
48
0
47
49
1
1
5
48
2
49
3
1
5
5
48
0
47
49
1
1
5
48
2
49
3
1
35
2
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
4
t__c
x
1
a
x
1
c
x
2
as
p
3
I
0
I
f70
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
38
SELECT a(t.c) AS c, a(t.c) AS c FROM t
p
5
I
0
I
f70
I
17
I
f71
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should accept a block with a column
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
56
2
50
3
1
49
4
0
79
79
35
2
80
80
35
2
35
2
83
5
15
39
0
49
6
0
49
7
0
49
4
0
7
8
64
35
1
83
5
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
1
c
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
5
5
48
0
47
49
1
1
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
t__c
x
1
a
x
1
c
x
2
as
p
3
I
0
I
f75
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
28
SELECT c, a(t.c) AS c FROM t
p
5
I
0
I
f75
I
19
I
f76
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should accept a block and array of arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
7
1
7
1
35
2
56
2
50
3
1
49
4
0
79
79
79
79
35
4
80
80
80
80
35
4
35
2
83
5
15
39
0
49
6
0
49
7
0
49
4
0
7
8
64
35
1
83
5
11
I
7
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
1
c
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
5
5
48
0
47
49
1
1
5
48
2
49
3
1
5
5
48
0
47
49
1
1
5
48
2
49
3
1
35
2
11
I
4
I
0
I
0
I
0
I
-2
p
4
x
4
t__c
x
1
a
x
1
c
x
2
as
p
3
I
0
I
f7a
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
44
SELECT c, c, a(t.c) AS c, a(t.c) AS c FROM t
p
5
I
0
I
f7a
I
21
I
f7b
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
should handle an array of columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
144
39
0
7
1
7
1
35
2
49
2
1
49
3
0
79
79
35
2
80
80
35
2
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
15
39
0
45
8
9
7
10
49
11
1
7
1
49
12
1
45
8
13
7
14
7
1
49
15
2
45
8
16
7
1
49
17
1
45
8
18
7
1
49
17
1
7
14
49
15
1
7
19
7
20
35
6
49
2
1
49
3
0
79
79
79
79
79
79
35
6
80
80
80
80
80
80
35
6
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
21
64
35
1
83
4
11
I
9
I
0
I
0
I
0
I
-2
p
22
x
3
@ds
x
1
c
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
18
SELECT c, c FROM t
x
6
Sequel
n
x
1
d
x
4
expr
x
2
as
n
x
1
b
x
7
qualify
n
x
10
identifier
n
x
4
a__c
x
8
a__d___c
s
48
SELECT d AS c, b.c, c, b.c, a.c, a.d AS c FROM t
p
9
I
0
I
f7f
I
1b
I
f80
I
2e
I
f81
I
7d
I
f82
I
90
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should handle an array with a single element
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
35
1
49
2
1
49
3
0
79
35
1
80
35
1
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
1
c
x
10
select_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
15
SELECT c FROM t
p
5
I
0
I
f86
I
17
I
f87
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
27
I
0
I
f47
I
8
I
f4b
I
13
I
f50
I
1e
I
f55
I
29
I
f5b
I
34
I
f60
I
3f
I
f65
I
4a
I
f6a
I
55
I
f6f
I
60
I
f74
I
6b
I
f79
I
76
I
f7e
I
81
I
f85
I
8c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
Sequel::Dataset#select_order_map
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
151
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
29
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
60
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
79
49
3
1
13
7
5
79
49
6
2
15
44
43
2
79
49
3
1
13
7
5
80
49
6
2
15
35
2
49
6
2
15
49
7
1
7
8
49
9
1
38
10
11
I
a
I
0
I
0
I
0
I
-2
p
11
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
c
x
3
[]=
x
4
mock
x
1
t
x
2
[]
x
3
@ds
p
3
I
0
I
f8d
I
3c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
36
should do select and map in one step
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
49
2
1
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
1
a
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
26
SELECT a FROM t ORDER BY a
p
5
I
0
I
f91
I
11
I
f92
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
46
should handle implicit qualifiers in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
49
2
1
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
4
a__b
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
30
SELECT a.b FROM t ORDER BY a.b
p
5
I
0
I
f96
I
11
I
f97
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
60
should raise if multiple arguments and can't determine alias
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
63
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
15
5
56
7
47
50
1
0
5
45
2
8
43
4
47
49
5
1
49
6
1
15
5
56
9
47
50
1
0
5
45
2
10
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
18
39
0
45
1
2
7
3
49
4
1
7
5
35
2
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
6
Sequel
n
x
1
a
x
8
function
x
1
b
x
16
select_order_map
p
3
I
0
I
f9b
I
12
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
16
39
0
45
1
2
7
3
49
4
1
56
5
50
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
6
Sequel
n
x
1
a
x
8
function
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
4
5
48
0
11
I
2
I
0
I
0
I
0
I
-2
p
1
x
1
b
p
3
I
0
I
f9c
I
4
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
16
select_order_map
p
3
I
0
I
f9c
I
10
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
56
1
50
2
0
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
13
5
56
0
47
50
1
0
5
48
2
35
2
11
I
3
I
0
I
0
I
0
I
-2
p
3
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
f9d
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
1
a
x
1
b
p
3
I
0
I
f9d
I
d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
16
select_order_map
p
3
I
0
I
f9d
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
n
p
7
I
0
I
f9b
I
15
I
f9c
I
2a
I
f9d
I
3f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should handle implicit aliases in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
49
2
1
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
5
a___b
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
31
SELECT a AS b FROM t ORDER BY a
p
5
I
0
I
fa1
I
11
I
fa2
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
58
should handle implicit qualifiers and aliases in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
7
1
49
2
1
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
8
t__a___b
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
35
SELECT t.a AS b FROM t ORDER BY t.a
p
5
I
0
I
fa6
I
11
I
fa7
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should handle AliasedExpressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
48
39
0
45
1
2
7
3
64
49
4
1
7
5
49
6
1
49
7
1
49
8
0
79
80
35
2
83
9
15
39
0
49
10
0
49
11
0
49
8
0
7
12
64
35
1
83
9
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
6
Sequel
n
s
1
a
x
3
lit
x
1
b
x
2
as
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
31
SELECT a AS b FROM t ORDER BY a
p
5
I
0
I
fab
I
1d
I
fac
I
30
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
32
should handle OrderedExpressions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
45
1
2
7
3
49
4
1
49
5
1
49
6
0
79
80
35
2
83
7
15
39
0
49
8
0
49
9
0
49
6
0
7
10
64
35
1
83
7
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
6
Sequel
n
x
1
a
x
4
desc
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
31
SELECT a FROM t ORDER BY a DESC
p
5
I
0
I
fb0
I
17
I
fb1
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
should accept a block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
39
0
56
1
50
2
0
49
3
0
79
80
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
9
5
5
48
0
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
x
4
t__c
x
1
a
p
3
I
0
I
fb5
I
9
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
36
SELECT a(t.c) FROM t ORDER BY a(t.c)
p
5
I
0
I
fb5
I
11
I
fb6
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
46
should accept a block with an array of columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
56
1
50
2
0
49
3
0
79
79
35
2
80
80
35
2
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
5
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
5
48
0
49
1
0
5
5
48
2
47
49
3
1
5
48
0
49
4
1
35
2
11
I
4
I
0
I
0
I
0
I
-2
p
5
x
1
c
x
4
desc
x
4
t__c
x
1
a
x
2
as
p
3
I
0
I
fba
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
52
SELECT c, a(t.c) AS c FROM t ORDER BY c DESC, a(t.c)
p
5
I
0
I
fba
I
17
I
fbb
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
35
should accept a block with a column
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
44
39
0
7
1
56
2
50
3
1
49
4
0
79
79
35
2
80
80
35
2
35
2
83
5
15
39
0
49
6
0
49
7
0
49
4
0
7
8
64
35
1
83
5
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
1
c
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
5
5
48
0
47
49
1
1
5
48
2
49
3
1
11
I
3
I
0
I
0
I
0
I
-2
p
4
x
4
t__c
x
1
a
x
1
c
x
2
as
p
3
I
0
I
fbf
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
47
SELECT c, a(t.c) AS c FROM t ORDER BY c, a(t.c)
p
5
I
0
I
fbf
I
19
I
fc0
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should accept a block and array of arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
39
0
7
1
7
1
35
2
56
2
50
3
1
49
4
0
79
79
79
79
35
4
80
80
80
80
35
4
35
2
83
5
15
39
0
49
6
0
49
7
0
49
4
0
7
8
64
35
1
83
5
11
I
7
I
0
I
0
I
0
I
-2
p
9
x
3
@ds
x
1
c
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
5
5
48
0
47
49
1
1
5
48
2
49
3
1
5
48
2
49
4
0
35
2
11
I
3
I
0
I
0
I
0
I
-2
p
5
x
4
t__c
x
1
a
x
1
c
x
2
as
x
4
desc
p
3
I
0
I
fc4
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
64
SELECT c, c, a(t.c) AS c, c FROM t ORDER BY c, c, a(t.c), c DESC
p
5
I
0
I
fc4
I
21
I
fc5
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
should handle an array of columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
184
39
0
7
1
7
1
35
2
49
2
1
49
3
0
79
79
35
2
80
80
35
2
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
15
39
0
45
8
9
7
10
49
11
1
7
1
49
12
1
45
8
13
7
14
7
1
49
15
2
45
8
16
7
1
49
17
1
45
8
18
7
1
49
17
1
7
14
49
15
1
45
8
19
7
1
49
17
1
7
14
49
15
1
49
20
0
7
21
45
8
22
7
23
49
20
1
45
8
24
45
8
25
7
23
49
11
1
49
20
1
35
8
49
2
1
49
3
0
79
79
79
79
79
79
79
79
35
8
80
80
80
80
80
80
80
80
35
8
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
26
64
35
1
83
4
11
I
c
I
0
I
0
I
0
I
-2
p
27
x
3
@ds
x
1
c
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
32
SELECT c, c FROM t ORDER BY c, c
x
6
Sequel
n
x
1
d
x
4
expr
x
2
as
n
x
1
b
x
7
qualify
n
x
10
identifier
n
n
x
4
desc
x
4
a__c
n
x
8
a__d___c
n
n
s
122
SELECT d AS c, b.c, c, b.c, b.c, a.c, a.d AS c, a.d AS c FROM t ORDER BY d, b.c, c, b.c, b.c DESC, a.c, a.d DESC, a.d DESC
p
9
I
0
I
fc9
I
1b
I
fca
I
2e
I
fcb
I
a5
I
fcc
I
b8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
44
should handle an array with a single element
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
42
39
0
7
1
35
1
49
2
1
49
3
0
79
35
1
80
35
1
35
2
83
4
15
39
0
49
5
0
49
6
0
49
3
0
7
7
64
35
1
83
4
11
I
4
I
0
I
0
I
0
I
-2
p
8
x
3
@ds
x
1
c
x
16
select_order_map
x
6
should
x
2
==
x
2
db
x
4
sqls
s
26
SELECT c FROM t ORDER BY c
p
5
I
0
I
fd0
I
17
I
fd1
I
2a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
29
I
0
I
f8c
I
8
I
f90
I
13
I
f95
I
1e
I
f9a
I
29
I
fa0
I
34
I
fa5
I
3f
I
faa
I
4a
I
faf
I
55
I
fb4
I
60
I
fb9
I
6b
I
fbe
I
76
I
fc3
I
81
I
fc8
I
8c
I
fcf
I
97
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
27
Sequel::Dataset#select_hash
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
107
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
21
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
83
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
7
5
79
49
6
2
15
13
7
7
80
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
35
2
49
6
2
15
49
8
1
38
9
15
39
9
7
10
49
11
1
38
12
11
I
a
I
0
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
a
x
3
[]=
x
1
b
x
4
mock
x
3
@db
x
1
t
x
2
[]
x
3
@ds
p
5
I
0
I
fd7
I
49
I
fd8
I
53
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
40
should do select and to_hash in one step
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
57
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
80
49
6
1
13
79
80
49
7
2
15
13
4
3
4
4
49
7
2
15
83
8
15
39
0
49
9
0
49
10
0
49
4
0
7
11
64
35
1
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
1
a
x
1
b
x
11
select_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
18
SELECT a, b FROM t
p
5
I
0
I
fdc
I
26
I
fdd
I
39
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
46
should handle implicit qualifiers in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
57
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
80
49
6
1
13
79
80
49
7
2
15
13
4
3
4
4
49
7
2
15
83
8
15
39
0
49
9
0
49
10
0
49
4
0
7
11
64
35
1
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
4
t__a
x
4
t__b
x
11
select_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
22
SELECT t.a, t.b FROM t
p
5
I
0
I
fe1
I
26
I
fe2
I
39
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should handle implicit aliases in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
57
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
80
49
6
1
13
79
80
49
7
2
15
13
4
3
4
4
49
7
2
15
83
8
15
39
0
49
9
0
49
10
0
49
4
0
7
11
64
35
1
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
5
c___a
x
5
d___b
x
11
select_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
28
SELECT c AS a, d AS b FROM t
p
5
I
0
I
fe6
I
26
I
fe7
I
39
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
58
should handle implicit qualifiers and aliases in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
57
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
80
49
6
1
13
79
80
49
7
2
15
13
4
3
4
4
49
7
2
15
83
8
15
39
0
49
9
0
49
10
0
49
4
0
7
11
64
35
1
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
8
t__c___a
x
8
t__d___b
x
11
select_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
32
SELECT t.c AS a, t.d AS b FROM t
p
5
I
0
I
feb
I
26
I
fec
I
39
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should handle SQL::Identifiers in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
69
39
0
45
1
2
7
3
49
4
1
45
1
5
7
6
49
4
1
49
7
2
49
8
0
44
43
9
80
49
10
1
13
79
80
49
11
2
15
13
4
3
4
4
49
11
2
15
83
12
15
39
0
49
13
0
49
14
0
49
8
0
7
15
64
35
1
83
12
11
I
6
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
6
Sequel
n
x
1
a
x
10
identifier
n
x
1
b
x
11
select_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
18
SELECT a, b FROM t
p
5
I
0
I
ff0
I
32
I
ff1
I
45
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
should handle SQL::QualifiedIdentifiers in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
76
39
0
45
1
2
7
3
7
4
49
5
2
45
1
6
7
7
49
8
1
7
3
49
5
1
49
9
2
49
10
0
44
43
11
80
49
12
1
13
79
80
49
13
2
15
13
4
3
4
4
49
13
2
15
83
14
15
39
0
49
15
0
49
16
0
49
10
0
7
17
64
35
1
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
18
x
3
@ds
x
6
Sequel
n
x
1
t
x
1
a
x
7
qualify
n
x
1
b
x
10
identifier
x
11
select_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
22
SELECT t.a, t.b FROM t
p
5
I
0
I
ff5
I
39
I
ff6
I
4c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should handle SQL::AliasedExpressions in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
79
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
45
1
7
7
8
49
4
1
7
9
49
6
1
49
10
2
49
11
0
44
43
12
80
49
13
1
13
79
80
49
14
2
15
13
4
3
4
4
49
14
2
15
83
15
15
39
0
49
16
0
49
17
0
49
11
0
7
18
64
35
1
83
15
11
I
6
I
0
I
0
I
0
I
-2
p
19
x
3
@ds
x
6
Sequel
n
x
1
c
x
4
expr
x
1
a
x
2
as
n
x
1
t
x
1
b
x
11
select_hash
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
28
SELECT c AS a, t AS b FROM t
p
5
I
0
I
ffa
I
3c
I
ffb
I
4f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should work with arrays of columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
298
39
0
44
43
1
4
3
49
2
1
13
7
3
79
49
4
2
15
13
7
5
80
49
4
2
15
13
7
6
4
3
49
4
2
15
44
43
1
4
3
49
2
1
13
7
3
4
4
49
4
2
15
13
7
5
4
5
49
4
2
15
13
7
6
4
6
49
4
2
15
35
2
13
18
2
49
7
1
15
15
39
8
7
3
7
6
35
2
7
5
49
9
2
49
10
0
44
43
1
80
49
2
1
13
79
4
3
35
2
80
49
4
2
15
13
4
4
4
6
35
2
4
5
49
4
2
15
83
11
15
39
8
49
12
0
49
13
0
49
10
0
7
14
64
35
1
83
11
15
39
8
7
3
7
5
7
6
35
2
49
9
2
49
10
0
44
43
1
80
49
2
1
13
79
80
4
3
35
2
49
4
2
15
13
4
4
4
5
4
6
35
2
49
4
2
15
83
11
15
39
8
49
12
0
49
13
0
49
10
0
7
15
64
35
1
83
11
15
39
8
7
3
7
5
35
2
7
5
7
6
35
2
49
9
2
49
10
0
44
43
1
80
49
2
1
13
79
80
35
2
80
4
3
35
2
49
4
2
15
13
4
4
4
5
35
2
4
5
4
6
35
2
49
4
2
15
83
11
15
39
8
49
12
0
49
13
0
49
10
0
7
16
64
35
1
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
17
x
3
@db
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
1
b
x
1
c
x
6
fetch=
x
3
@ds
x
11
select_hash
x
6
should
x
2
==
x
2
db
x
4
sqls
s
21
SELECT a, c, b FROM t
s
21
SELECT a, b, c FROM t
s
24
SELECT a, b, b, c FROM t
p
15
I
0
I
fff
I
50
I
1000
I
82
I
1001
I
95
I
1002
I
c7
I
1003
I
da
I
1004
I
117
I
1005
I
12a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
66
should raise an error if the resulting symbol cannot be determined
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
45
1
7
7
8
49
9
1
49
10
2
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
6
Sequel
n
x
1
c
x
4
expr
x
1
a
x
2
as
n
x
1
b
x
8
function
x
11
select_hash
p
3
I
0
I
1009
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
1009
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
21
I
0
I
fd6
I
8
I
fdb
I
13
I
fe0
I
1e
I
fe5
I
29
I
fea
I
34
I
fef
I
3f
I
ff4
I
4a
I
ff9
I
55
I
ffe
I
60
I
1008
I
6b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
Sequel::Dataset#select_hash_groups
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
107
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
21
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
83
45
0
1
44
43
2
79
49
3
1
13
7
4
44
43
2
80
49
3
1
13
7
5
79
49
6
2
15
13
7
7
80
49
6
2
15
44
43
2
80
49
3
1
13
7
5
4
3
49
6
2
15
13
7
7
4
4
49
6
2
15
35
2
49
6
2
15
49
8
1
38
9
15
39
9
7
10
49
11
1
38
12
11
I
a
I
0
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
x
1
a
x
3
[]=
x
1
b
x
4
mock
x
3
@db
x
1
t
x
2
[]
x
3
@ds
p
5
I
0
I
100f
I
49
I
1010
I
53
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
40
should do select and to_hash in one step
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
61
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
80
49
6
1
13
79
80
35
1
49
7
2
15
13
4
3
4
4
35
1
49
7
2
15
83
8
15
39
0
49
9
0
49
10
0
49
4
0
7
11
64
35
1
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
1
a
x
1
b
x
18
select_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
18
SELECT a, b FROM t
p
5
I
0
I
1014
I
2a
I
1015
I
3d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
46
should handle implicit qualifiers in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
61
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
80
49
6
1
13
79
80
35
1
49
7
2
15
13
4
3
4
4
35
1
49
7
2
15
83
8
15
39
0
49
9
0
49
10
0
49
4
0
7
11
64
35
1
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
4
t__a
x
4
t__b
x
18
select_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
22
SELECT t.a, t.b FROM t
p
5
I
0
I
1019
I
2a
I
101a
I
3d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should handle implicit aliases in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
61
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
80
49
6
1
13
79
80
35
1
49
7
2
15
13
4
3
4
4
35
1
49
7
2
15
83
8
15
39
0
49
9
0
49
10
0
49
4
0
7
11
64
35
1
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
5
c___a
x
5
d___b
x
18
select_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
28
SELECT c AS a, d AS b FROM t
p
5
I
0
I
101e
I
2a
I
101f
I
3d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
58
should handle implicit qualifiers and aliases in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
61
39
0
7
1
7
2
49
3
2
49
4
0
44
43
5
80
49
6
1
13
79
80
35
1
49
7
2
15
13
4
3
4
4
35
1
49
7
2
15
83
8
15
39
0
49
9
0
49
10
0
49
4
0
7
11
64
35
1
83
8
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
8
t__c___a
x
8
t__d___b
x
18
select_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
32
SELECT t.c AS a, t.d AS b FROM t
p
5
I
0
I
1023
I
2a
I
1024
I
3d
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should handle SQL::Identifiers in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
73
39
0
45
1
2
7
3
49
4
1
45
1
5
7
6
49
4
1
49
7
2
49
8
0
44
43
9
80
49
10
1
13
79
80
35
1
49
11
2
15
13
4
3
4
4
35
1
49
11
2
15
83
12
15
39
0
49
13
0
49
14
0
49
8
0
7
15
64
35
1
83
12
11
I
6
I
0
I
0
I
0
I
-2
p
16
x
3
@ds
x
6
Sequel
n
x
1
a
x
10
identifier
n
x
1
b
x
18
select_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
18
SELECT a, b FROM t
p
5
I
0
I
1028
I
36
I
1029
I
49
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
52
should handle SQL::QualifiedIdentifiers in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
80
39
0
45
1
2
7
3
7
4
49
5
2
45
1
6
7
7
49
8
1
7
3
49
5
1
49
9
2
49
10
0
44
43
11
80
49
12
1
13
79
80
35
1
49
13
2
15
13
4
3
4
4
35
1
49
13
2
15
83
14
15
39
0
49
15
0
49
16
0
49
10
0
7
17
64
35
1
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
18
x
3
@ds
x
6
Sequel
n
x
1
t
x
1
a
x
7
qualify
n
x
1
b
x
10
identifier
x
18
select_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
22
SELECT t.a, t.b FROM t
p
5
I
0
I
102d
I
3d
I
102e
I
50
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should handle SQL::AliasedExpressions in arguments
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
83
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
45
1
7
7
8
49
4
1
7
9
49
6
1
49
10
2
49
11
0
44
43
12
80
49
13
1
13
79
80
35
1
49
14
2
15
13
4
3
4
4
35
1
49
14
2
15
83
15
15
39
0
49
16
0
49
17
0
49
11
0
7
18
64
35
1
83
15
11
I
6
I
0
I
0
I
0
I
-2
p
19
x
3
@ds
x
6
Sequel
n
x
1
c
x
4
expr
x
1
a
x
2
as
n
x
1
t
x
1
b
x
18
select_hash_groups
x
6
should
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
2
==
x
2
db
x
4
sqls
s
28
SELECT c AS a, t AS b FROM t
p
5
I
0
I
1032
I
40
I
1033
I
53
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
34
should work with arrays of columns
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
310
39
0
44
43
1
4
3
49
2
1
13
7
3
79
49
4
2
15
13
7
5
80
49
4
2
15
13
7
6
4
3
49
4
2
15
44
43
1
4
3
49
2
1
13
7
3
4
4
49
4
2
15
13
7
5
4
5
49
4
2
15
13
7
6
4
6
49
4
2
15
35
2
13
18
2
49
7
1
15
15
39
8
7
3
7
6
35
2
7
5
49
9
2
49
10
0
44
43
1
80
49
2
1
13
79
4
3
35
2
80
35
1
49
4
2
15
13
4
4
4
6
35
2
4
5
35
1
49
4
2
15
83
11
15
39
8
49
12
0
49
13
0
49
10
0
7
14
64
35
1
83
11
15
39
8
7
3
7
5
7
6
35
2
49
9
2
49
10
0
44
43
1
80
49
2
1
13
79
80
4
3
35
2
35
1
49
4
2
15
13
4
4
4
5
4
6
35
2
35
1
49
4
2
15
83
11
15
39
8
49
12
0
49
13
0
49
10
0
7
15
64
35
1
83
11
15
39
8
7
3
7
5
35
2
7
5
7
6
35
2
49
9
2
49
10
0
44
43
1
80
49
2
1
13
79
80
35
2
80
4
3
35
2
35
1
49
4
2
15
13
4
4
4
5
35
2
4
5
4
6
35
2
35
1
49
4
2
15
83
11
15
39
8
49
12
0
49
13
0
49
10
0
7
16
64
35
1
83
11
11
I
7
I
0
I
0
I
0
I
-2
p
17
x
3
@db
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
1
b
x
1
c
x
6
fetch=
x
3
@ds
x
18
select_hash_groups
x
6
should
x
2
==
x
2
db
x
4
sqls
s
21
SELECT a, c, b FROM t
s
21
SELECT a, b, c FROM t
s
24
SELECT a, b, b, c FROM t
p
15
I
0
I
1037
I
50
I
1038
I
86
I
1039
I
99
I
103a
I
cf
I
103b
I
e2
I
103c
I
123
I
103d
I
136
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
66
should raise an error if the resulting symbol cannot be determined
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
39
0
45
1
2
7
3
49
4
1
7
5
49
6
1
45
1
7
7
8
49
9
1
49
10
2
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
6
Sequel
n
x
1
c
x
4
expr
x
1
a
x
2
as
n
x
1
b
x
8
function
x
18
select_hash_groups
p
3
I
0
I
1041
I
1b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
1041
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
21
I
0
I
100e
I
8
I
1013
I
13
I
1018
I
1e
I
101d
I
29
I
1022
I
34
I
1027
I
3f
I
102c
I
4a
I
1031
I
55
I
1036
I
60
I
1040
I
6b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
25
Modifying joined datasets
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
53
45
0
1
49
2
0
7
3
7
4
49
5
2
7
6
7
7
35
1
49
8
2
44
43
9
79
49
10
1
13
7
7
80
49
11
2
15
49
12
1
38
13
15
39
13
7
14
56
15
50
16
1
11
I
6
I
0
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
4
mock
x
1
b
x
1
c
x
4
from
x
1
d
x
2
id
x
4
join
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
5
where
x
3
@ds
x
25
supports_modifying_joins?
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
2
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
1048
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
p
5
I
0
I
1047
I
2b
I
1048
I
35
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
42
should allow deleting from joined datasets
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
39
0
49
1
0
15
39
0
49
2
0
49
3
0
49
4
0
7
5
64
35
1
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
6
delete
x
2
db
x
4
sqls
x
6
should
s
31
DELETE FROM b, c WHERE (id = 2)
x
2
==
p
5
I
0
I
104c
I
6
I
104d
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
37
should allow updating joined datasets
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
40
39
0
44
43
1
79
49
2
1
13
7
3
79
49
4
2
15
49
5
1
15
39
0
49
6
0
49
7
0
49
8
0
7
9
64
35
1
83
10
11
I
6
I
0
I
0
I
0
I
-2
p
11
x
3
@ds
x
4
Hash
x
16
new_from_literal
x
1
a
x
3
[]=
x
6
update
x
2
db
x
4
sqls
x
6
should
s
60
UPDATE b, c INNER JOIN d USING (id) SET a = 1 WHERE (id = 2)
x
2
==
p
5
I
0
I
1051
I
15
I
1052
I
28
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
1046
I
8
I
104b
I
13
I
1050
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
33
Dataset#lock_style and for_update
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
7
6
49
7
1
38
8
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
1
t
x
4
from
x
3
@ds
p
3
I
0
I
1058
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
33
#for_update should use FOR UPDATE
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
39
0
49
1
0
49
2
0
49
3
0
7
4
64
83
5
11
I
3
I
0
I
0
I
0
I
-2
p
6
x
3
@ds
x
10
for_update
x
3
sql
x
6
should
s
26
SELECT * FROM t FOR UPDATE
x
2
==
p
3
I
0
I
105c
I
11
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
33
#lock_style should accept symbols
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
39
0
7
1
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
x
6
update
x
10
lock_style
x
3
sql
x
6
should
s
26
SELECT * FROM t FOR UPDATE
x
2
==
p
3
I
0
I
1060
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
51
#lock_style should accept strings for arbitrary SQL
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
20
39
0
7
1
64
49
2
1
49
3
0
49
4
0
7
5
64
83
6
11
I
3
I
0
I
0
I
0
I
-2
p
7
x
3
@ds
s
9
FOR SHARE
x
10
lock_style
x
3
sql
x
6
should
s
25
SELECT * FROM t FOR SHARE
x
2
==
p
3
I
0
I
1064
I
14
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
9
I
0
I
1057
I
8
I
105b
I
13
I
105f
I
1e
I
1063
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
21
Custom ASTTransformer
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
30
should transform given objects
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
190
45
0
1
45
2
3
43
4
56
5
50
6
1
13
71
6
47
9
31
47
49
7
0
13
47
49
8
0
15
8
34
49
6
0
19
0
15
45
2
9
43
10
13
71
6
47
9
61
47
49
7
0
13
1
47
49
8
1
15
8
65
1
49
6
1
7
11
49
12
1
7
13
49
14
1
7
15
7
16
35
1
49
17
2
7
18
44
43
19
79
49
20
1
13
7
21
7
22
49
23
2
15
49
17
2
19
1
15
20
1
49
24
0
49
25
0
7
26
64
83
27
15
20
1
44
43
19
80
49
20
1
13
7
12
20
0
20
1
49
28
0
7
12
49
29
1
49
30
1
49
23
2
15
13
7
17
20
0
20
1
49
28
0
7
17
49
29
1
49
30
1
49
23
2
15
49
31
1
49
24
0
49
25
0
7
32
64
83
27
11
I
a
I
2
I
0
I
0
I
-2
p
33
x
5
Class
n
x
6
Sequel
n
x
14
ASTTransformer
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
1
v
M
1
n
n
x
1
v
i
44
20
0
45
0
1
49
2
1
13
10
20
15
20
0
45
3
4
49
2
1
9
40
20
0
47
101
5
20
0
47
101
5
63
2
47
49
6
0
8
43
54
89
7
11
I
3
I
1
I
1
I
1
n
p
8
x
6
Symbol
n
x
5
is_a?
x
6
String
n
x
4
to_s
x
6
to_sym
x
1
v
p
7
I
-1
I
106b
I
0
I
106c
I
2b
I
0
I
2c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
s
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
106b
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
8
allocate
x
10
initialize
n
x
7
Dataset
x
1
t
x
4
from
x
5
a___g
x
10
cross_join
x
5
b___h
x
1
c
x
4
join
x
5
d___i
x
4
Hash
x
16
new_from_literal
x
1
e
x
1
f
x
3
[]=
x
3
sql
x
6
should
s
94
SELECT * FROM t CROSS JOIN a AS g INNER JOIN b AS h USING (c) INNER JOIN d AS i ON (i.e = h.f)
x
2
==
x
4
opts
x
2
[]
x
9
transform
x
5
clone
s
106
SELECT * FROM tt CROSS JOIN aa AS gg INNER JOIN bb AS hh USING (cc) INNER JOIN dd AS ii ON (ii.ee = hh.ff)
p
9
I
0
I
106a
I
25
I
106f
I
6c
I
1070
I
7a
I
1071
I
be
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
c
x
2
ds
x
7
specify
p
3
I
0
I
1069
I
b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
17
Dataset#returning
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
52
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
50
45
0
1
44
43
2
79
49
3
1
13
7
4
5
56
5
47
50
6
0
49
7
2
15
49
8
1
7
9
49
10
1
7
11
49
12
1
38
13
15
5
56
14
47
50
6
0
38
15
11
I
7
I
0
I
0
I
0
I
-2
p
16
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
5
fetch
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
57
19
0
15
44
43
0
79
49
1
1
13
7
2
20
0
49
3
2
15
11
I
6
I
1
I
1
I
1
n
p
4
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
p
3
I
0
I
1077
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
s
x
4
proc
x
3
[]=
x
4
mock
x
1
t
x
2
[]
x
3
foo
x
9
returning
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
7
0
7
1
7
2
35
3
56
3
50
4
0
11
I
4
I
0
I
0
I
0
I
-2
p
5
x
6
insert
x
6
update
x
6
delete
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
57
19
0
15
39
0
20
0
47
101
1
7
2
63
2
47
49
3
0
56
4
50
5
1
11
I
5
I
1
I
1
I
1
n
p
6
x
3
@ds
x
4
to_s
s
15
_clause_methods
x
6
to_sym
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
54
52
0
0
21
1
0
47
101
1
7
2
63
2
47
49
3
0
35
1
81
4
11
I
4
I
0
I
0
I
0
I
-2
p
5
n
x
4
to_s
s
14
_returning_sql
x
6
to_sym
x
1
+
p
3
I
0
I
107a
I
17
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
8
meta_def
p
5
I
0
I
1079
I
4
I
107a
I
19
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
m
x
4
each
p
3
I
0
I
1079
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
@pr
p
5
I
0
I
1077
I
28
I
1078
I
32
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
65
should use RETURNING clause in the SQL if the dataset supports it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
64
39
0
49
1
0
15
39
2
49
3
0
49
4
0
7
5
64
83
6
15
39
2
79
49
7
1
49
4
0
7
8
64
83
6
15
39
2
44
43
9
79
49
10
1
13
7
11
79
49
12
2
15
49
13
1
49
4
0
7
14
64
83
6
11
I
6
I
0
I
0
I
0
I
-2
p
15
x
3
@pr
x
4
call
x
3
@ds
x
10
delete_sql
x
6
should
s
27
DELETE FROM t RETURNING foo
x
2
==
x
10
insert_sql
s
38
INSERT INTO t VALUES (1) RETURNING foo
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
x
10
update_sql
s
34
UPDATE t SET foo = 1 RETURNING foo
p
9
I
0
I
1080
I
6
I
1081
I
14
I
1082
I
23
I
1083
I
40
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
77
should not use RETURNING clause in the SQL if the dataset does not support it
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
58
39
0
49
1
0
49
2
0
7
3
64
83
4
15
39
0
79
49
5
1
49
2
0
7
6
64
83
4
15
39
0
44
43
7
79
49
8
1
13
7
9
79
49
10
2
15
49
11
1
49
2
0
7
12
64
83
4
11
I
6
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
10
delete_sql
x
6
should
s
13
DELETE FROM t
x
2
==
x
10
insert_sql
s
24
INSERT INTO t VALUES (1)
x
4
Hash
x
16
new_from_literal
x
3
foo
x
3
[]=
x
10
update_sql
s
20
UPDATE t SET foo = 1
p
7
I
0
I
1087
I
e
I
1088
I
1d
I
1089
I
3a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
75
should have insert, update, and delete yield to blocks if RETURNING is used
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
131
39
0
49
1
0
15
44
43
2
78
49
3
1
19
0
15
39
4
56
5
50
6
0
15
20
0
49
7
0
44
43
2
79
49
3
1
13
7
8
7
9
64
49
10
2
15
83
11
15
39
4
79
56
12
50
13
1
15
20
0
49
7
0
44
43
2
79
49
3
1
13
7
8
7
14
64
49
10
2
15
83
11
15
39
4
44
43
2
79
49
3
1
13
7
8
79
49
10
2
15
56
15
50
16
1
15
20
0
49
7
0
44
43
2
79
49
3
1
13
7
8
7
17
64
49
10
2
15
83
11
11
I
7
I
1
I
0
I
0
I
-2
p
18
x
3
@pr
x
4
call
x
4
Hash
x
16
new_from_literal
x
3
@ds
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
22
1
0
11
I
3
I
1
I
1
I
1
n
p
0
p
3
I
0
I
108f
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
6
delete
x
6
should
x
3
foo
s
27
DELETE FROM t RETURNING foo
x
3
[]=
x
2
==
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
22
1
0
11
I
3
I
1
I
1
I
1
n
p
0
p
3
I
0
I
1091
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
6
insert
s
38
INSERT INTO t VALUES (1) RETURNING foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
10
57
19
0
15
20
0
22
1
0
11
I
3
I
1
I
1
I
1
n
p
0
p
3
I
0
I
1093
I
a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
r
x
6
update
s
34
UPDATE t SET foo = 1 RETURNING foo
p
17
I
0
I
108d
I
6
I
108e
I
10
I
108f
I
18
I
1090
I
31
I
1091
I
3a
I
1092
I
53
I
1093
I
6a
I
1094
I
83
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
h
s
108
should have insert, update, and delete return arrays of hashes if RETURNING is used and a block is not given
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
122
39
0
49
1
0
15
44
43
2
78
49
3
1
19
0
15
39
4
49
5
0
49
6
0
44
43
2
79
49
3
1
13
7
7
7
8
64
49
9
2
15
35
1
83
10
15
39
4
79
49
11
1
49
6
0
44
43
2
79
49
3
1
13
7
7
7
12
64
49
9
2
15
35
1
83
10
15
39
4
44
43
2
79
49
3
1
13
7
7
79
49
9
2
15
49
13
1
49
6
0
44
43
2
79
49
3
1
13
7
7
7
14
64
49
9
2
15
35
1
83
10
11
I
7
I
1
I
0
I
0
I
-2
p
15
x
3
@pr
x
4
call
x
4
Hash
x
16
new_from_literal
x
3
@ds
x
6
delete
x
6
should
x
3
foo
s
27
DELETE FROM t RETURNING foo
x
3
[]=
x
2
==
x
6
insert
s
38
INSERT INTO t VALUES (1) RETURNING foo
x
6
update
s
34
UPDATE t SET foo = 1 RETURNING foo
p
11
I
0
I
1098
I
6
I
1099
I
10
I
109a
I
2e
I
109b
I
4d
I
109c
I
7a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
h
p
11
I
0
I
1076
I
8
I
107f
I
13
I
1086
I
1e
I
108c
I
29
I
1097
I
34
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
42
Dataset emulating bitwise operator support
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
19
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
5
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
55
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
0
38
7
15
39
7
2
13
18
2
49
8
1
15
15
99
7
9
7
10
65
39
7
49
11
4
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
7
dataset
x
3
@ds
x
18
quote_identifiers=
x
29
complex_expression_sql_append
M
1
n
n
x
29
complex_expression_sql_append
i
15
20
0
5
20
2
56
0
47
50
1
1
49
2
1
11
I
7
I
3
I
3
I
3
n
p
3
M
1
p
2
x
9
for_block
t
n
x
29
complex_expression_sql_append
i
39
58
37
19
0
15
37
19
1
15
15
7
0
5
20
0
47
49
1
1
47
101
2
7
3
5
20
1
47
49
1
1
47
101
2
7
4
63
5
11
I
8
I
2
I
2
I
2
n
p
5
s
7
bitand(
x
7
literal
x
4
to_s
s
2
, 
s
1
)
p
3
I
0
I
10a5
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
2
x
1
a
x
1
b
x
28
complex_expression_arg_pairs
x
2
<<
p
5
I
-1
I
10a4
I
0
I
10a5
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
3
x
3
sql
x
2
op
x
4
args
x
13
attach_method
p
7
I
0
I
10a2
I
20
I
10a3
I
2b
I
10a4
I
37
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
s
55
should work with any numbers of arguments for operators
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
115
39
0
45
1
2
43
3
43
4
13
71
5
47
9
31
47
49
6
0
13
7
7
7
8
47
49
9
2
15
8
38
7
7
7
8
49
5
2
49
10
1
49
11
0
49
12
0
7
13
64
83
14
15
39
0
45
1
15
7
8
49
16
1
79
49
7
1
49
10
1
49
11
0
49
12
0
7
17
64
83
14
15
39
0
45
1
18
7
8
49
16
1
79
49
7
1
80
49
7
1
49
10
1
49
11
0
49
12
0
7
19
64
83
14
11
I
6
I
0
I
0
I
0
I
-2
p
20
x
3
@ds
x
6
Sequel
n
x
3
SQL
x
17
ComplexExpression
x
3
new
x
8
allocate
x
1
&
x
1
x
x
10
initialize
x
6
select
x
3
sql
x
6
should
s
10
SELECT "x"
x
2
==
n
x
4
expr
s
21
SELECT bitand("x", 1)
n
s
32
SELECT bitand(bitand("x", 1), 2)
p
7
I
0
I
10aa
I
35
I
10ab
I
52
I
10ac
I
73
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
2
it
p
5
I
0
I
10a1
I
8
I
10a9
I
13
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
24
Dataset feature defaults
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
s
56
should not require aliases for recursive CTEs by default
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
0
49
7
0
5
48
8
49
9
1
11
I
3
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
7
dataset
x
38
recursive_cte_requires_column_aliases?
x
8
be_false
x
6
should
p
3
I
0
I
10b2
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
2
it
s
57
should not require placeholder type specifiers by default
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
0
49
7
0
5
48
8
49
9
1
11
I
3
I
0
I
0
I
0
I
-2
p
10
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
7
dataset
x
37
requires_placeholder_type_specifiers?
x
8
be_false
x
6
should
p
3
I
0
I
10b6
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
70
offset use should be returning a separate row number column by default
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
0
7
7
49
8
1
5
48
9
49
10
1
11
I
3
I
0
I
0
I
0
I
-2
p
11
x
6
Sequel
n
x
8
Database
x
3
new
x
8
allocate
x
10
initialize
x
7
dataset
x
33
offset_returns_row_number_column?
x
4
send
x
8
be_false
x
6
should
p
3
I
0
I
10ba
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
7
I
0
I
10b1
I
b
I
10b5
I
16
I
10b9
I
21
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
18
Dataset extensions
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
149
5
7
0
56
1
47
50
2
1
15
5
7
0
56
3
47
50
4
1
15
5
56
5
47
50
2
0
15
5
7
6
64
56
7
47
50
8
1
15
5
7
9
64
56
10
47
50
8
1
15
5
7
11
64
56
12
47
50
8
1
15
5
7
13
64
56
14
47
50
8
1
15
5
7
15
64
56
16
47
50
8
1
15
5
7
17
64
56
18
47
50
8
1
15
5
7
19
64
56
20
47
50
8
1
15
5
7
21
64
56
22
47
50
8
1
15
5
7
23
64
56
24
47
50
8
1
15
5
7
25
64
56
26
47
50
8
1
15
5
7
27
64
56
28
47
50
8
1
11
I
4
I
0
I
0
I
0
I
-2
p
29
x
3
all
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
45
0
1
99
43
2
12
49
3
1
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
54
50
4
0
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
4
Type
x
22
object_singleton_class
x
18
__metaclass_init__
M
1
n
n
x
18
__metaclass_init__
i
26
5
66
65
7
0
7
1
47
49
2
2
15
99
7
1
7
3
65
67
49
4
0
49
5
4
11
I
5
I
0
I
0
I
0
n
p
6
x
10
_extension
x
9
extension
x
12
alias_method
M
1
n
n
x
9
extension
i
2
1
11
I
2
I
1
I
0
I
0
I
0
p
0
p
5
I
-1
I
10c2
I
0
I
10c3
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
14
@unnamed_splat
x
17
method_visibility
x
15
add_defn_method
p
5
I
2
I
10c1
I
c
I
10c2
I
1a
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
13
attach_method
p
3
I
0
I
10c0
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
30
45
0
1
99
43
2
12
49
3
1
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
54
50
4
0
11
I
7
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
4
Type
x
22
object_singleton_class
x
18
__metaclass_init__
M
1
n
n
x
18
__metaclass_init__
i
12
5
66
65
7
0
7
1
47
49
2
2
11
I
3
I
0
I
0
I
0
n
p
3
x
9
extension
x
10
_extension
x
12
alias_method
p
3
I
2
I
10c8
I
c
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
13
attach_method
p
3
I
0
I
10c7
I
1e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
5
after
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
31
45
0
1
43
2
13
71
3
47
9
24
47
49
4
0
13
1
47
49
5
1
15
8
28
1
49
3
1
38
6
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
6
Sequel
n
x
7
Dataset
x
3
new
x
8
allocate
x
10
initialize
x
3
@ds
p
3
I
0
I
10cc
I
1f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
90
should be able to register an extension with a module Database#extension extend the module
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
36
45
0
1
43
2
7
3
45
4
5
56
6
50
7
0
49
8
2
15
39
9
7
3
49
10
1
49
11
0
49
12
0
79
83
13
11
I
5
I
0
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
7
Dataset
x
3
foo
x
6
Module
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
1
a
M
1
n
n
x
1
a
i
2
79
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
10d0
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
10d0
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
18
register_extension
x
3
@ds
x
9
extension
x
1
a
x
6
should
x
2
==
p
5
I
0
I
10d0
I
13
I
10d1
I
24
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
7
specify
s
90
should be able to register an extension with a block and Database#extension call the block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
41
39
0
3
13
18
2
49
1
1
15
15
45
2
3
43
4
7
5
56
6
50
7
1
15
39
0
7
5
49
8
1
49
9
0
5
48
10
49
11
1
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
3
@ds
x
18
quote_identifiers=
x
6
Sequel
n
x
7
Dataset
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
57
19
0
15
20
0
2
13
18
2
49
0
1
15
11
I
5
I
1
I
1
I
1
n
p
1
x
18
quote_identifiers=
p
3
I
0
I
10d6
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
db
x
18
register_extension
x
9
extension
x
18
quote_identifiers?
x
7
be_true
x
6
should
p
7
I
0
I
10d5
I
b
I
10d6
I
18
I
10d7
I
29
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
96
should be able to register an extension with a callable and Database#extension call the callable
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
46
39
0
3
13
18
2
49
1
1
15
15
45
2
3
43
4
7
5
5
56
6
47
50
7
0
49
8
2
15
39
0
7
5
49
9
1
49
10
0
5
48
11
49
12
1
11
I
5
I
0
I
0
I
0
I
-2
p
13
x
3
@ds
x
18
quote_identifiers=
x
6
Sequel
n
x
7
Dataset
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
57
19
0
15
20
0
2
13
18
2
49
0
1
15
11
I
5
I
1
I
1
I
1
n
p
1
x
18
quote_identifiers=
p
3
I
0
I
10dc
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
db
x
4
proc
x
18
register_extension
x
9
extension
x
18
quote_identifiers?
x
7
be_true
x
6
should
p
7
I
0
I
10db
I
b
I
10dc
I
1d
I
10dd
I
2e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
59
should be able to load multiple extensions in the same call
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
95
39
0
3
13
18
2
49
1
1
15
15
39
0
7
2
13
18
2
49
3
1
15
15
45
4
5
43
6
7
7
5
56
8
47
50
9
0
49
10
2
15
45
4
11
43
6
7
12
5
56
13
47
50
9
0
49
10
2
15
39
0
7
7
7
12
49
14
2
19
0
15
20
0
49
15
0
5
48
16
49
17
1
15
20
0
49
18
0
5
48
19
49
17
1
11
I
6
I
1
I
0
I
0
I
-2
p
20
x
3
@ds
x
18
quote_identifiers=
x
8
downcase
x
24
identifier_input_method=
x
6
Sequel
n
x
7
Dataset
x
3
foo
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
57
19
0
15
20
0
2
13
18
2
49
0
1
15
11
I
5
I
1
I
1
I
1
n
p
1
x
18
quote_identifiers=
p
3
I
0
I
10e3
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
x
4
proc
x
18
register_extension
n
x
3
bar
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
15
57
19
0
15
20
0
1
13
18
2
49
0
1
15
11
I
5
I
1
I
1
I
1
n
p
1
x
24
identifier_input_method=
p
3
I
0
I
10e4
I
f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
x
9
extension
x
18
quote_identifiers?
x
7
be_true
x
6
should
x
23
identifier_input_method
x
6
be_nil
p
15
I
0
I
10e1
I
b
I
10e2
I
17
I
10e3
I
29
I
10e4
I
3b
I
10e5
I
47
I
10e6
I
53
I
10e7
I
5f
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
2
ds
s
46
should have #extension not modify the receiver
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
46
45
0
1
43
2
7
3
45
4
5
56
6
50
7
0
49
8
2
15
39
9
7
3
49
10
1
15
5
56
11
47
50
12
0
5
45
13
14
47
49
15
1
49
16
1
11
I
5
I
0
I
0
I
0
I
-2
p
17
x
6
Sequel
n
x
7
Dataset
x
3
foo
x
6
Module
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
1
a
M
1
n
n
x
1
a
i
2
79
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
10eb
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
10eb
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
18
register_extension
x
3
@ds
x
9
extension
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
-2
p
2
x
3
@ds
x
1
a
p
3
I
0
I
10ed
I
6
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
13
NoMethodError
n
x
11
raise_error
x
6
should
p
7
I
0
I
10eb
I
13
I
10ec
I
1b
I
10ed
I
2e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
50
should have #extension not return a cloned dataset
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
84
39
0
45
1
2
56
3
50
4
0
49
5
1
15
45
6
7
43
8
7
9
45
1
10
56
11
50
4
0
49
12
2
15
39
0
7
9
49
13
1
19
0
15
20
0
5
39
0
47
49
14
1
49
15
1
15
20
0
5
45
6
16
43
8
47
49
17
1
49
18
1
15
20
0
49
19
0
49
18
0
80
83
20
11
I
6
I
1
I
0
I
0
I
-2
p
21
x
3
@ds
x
6
Module
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
1
b
M
1
n
n
x
1
b
i
2
80
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
10f1
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
10f1
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
6
extend
x
6
Sequel
n
x
7
Dataset
x
3
foo
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
1
a
M
1
n
n
x
1
a
i
2
79
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
10f2
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
10f2
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
18
register_extension
x
9
extension
x
5
equal
x
10
should_not
n
x
12
be_a_kind_of
x
6
should
x
1
b
x
2
==
p
13
I
0
I
10f1
I
e
I
10f2
I
21
I
10f3
I
2b
I
10f4
I
38
I
10f5
I
48
I
10f6
I
54
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
1
x
1
v
s
43
should have #extension! modify the receiver
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
39
45
0
1
43
2
7
3
45
4
5
56
6
50
7
0
49
8
2
15
39
9
7
3
49
10
1
15
39
9
49
11
0
49
12
0
79
83
13
11
I
5
I
0
I
0
I
0
I
-2
p
14
x
6
Sequel
n
x
7
Dataset
x
3
foo
x
6
Module
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
1
a
M
1
n
n
x
1
a
i
2
79
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
10fa
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
10fa
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
18
register_extension
x
3
@ds
x
10
extension!
x
1
a
x
6
should
x
2
==
p
7
I
0
I
10fa
I
13
I
10fb
I
1b
I
10fc
I
27
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
43
should have #extension! return the receiver
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
45
0
1
43
2
7
3
45
4
5
56
6
50
7
0
49
8
2
15
39
9
7
3
49
10
1
5
39
9
47
49
11
1
49
12
1
11
I
5
I
0
I
0
I
0
I
-2
p
13
x
6
Sequel
n
x
7
Dataset
x
3
foo
x
6
Module
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
1
a
M
1
n
n
x
1
a
i
2
79
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
1100
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
1100
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
18
register_extension
x
3
@ds
x
10
extension!
x
5
equal
x
6
should
p
5
I
0
I
1100
I
13
I
1101
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
94
should register a Database extension for modifying all datasets when registering with a module
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
43
45
0
1
43
2
7
3
45
4
5
56
6
50
7
0
49
8
2
15
45
0
9
49
10
0
7
3
49
11
1
49
12
0
49
13
0
49
14
0
79
83
15
11
I
5
I
0
I
0
I
0
I
-2
p
16
x
6
Sequel
n
x
7
Dataset
x
3
foo
x
6
Module
n
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
1
a
M
1
n
n
x
1
a
i
2
79
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
1105
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
1105
I
e
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
3
new
x
18
register_extension
n
x
4
mock
x
9
extension
x
7
dataset
x
1
a
x
6
should
x
2
==
p
5
I
0
I
1105
I
13
I
1106
I
2b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
67
should raise an Error if registering with both a module and a block
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
37
45
0
1
43
2
7
3
45
4
5
13
71
6
47
9
28
47
49
7
0
13
47
49
8
0
15
8
31
49
6
0
56
9
50
10
2
11
I
5
I
0
I
0
I
0
I
-2
p
11
x
6
Sequel
n
x
7
Dataset
x
3
foo
x
6
Module
n
x
3
new
x
8
allocate
x
10
initialize
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
1
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
110a
I
2
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
18
register_extension
p
3
I
0
I
110a
I
25
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
110a
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
s
69
should raise an Error if attempting to load an incompatible extension
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
8
39
0
7
1
49
2
1
11
I
3
I
0
I
0
I
0
I
-2
p
3
x
3
@ds
x
4
foo2
x
9
extension
p
3
I
0
I
110e
I
8
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
x
4
proc
x
6
Sequel
n
x
5
Error
x
11
raise_error
x
6
should
p
3
I
0
I
110e
I
15
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
29
I
0
I
10bf
I
a
I
10c6
I
14
I
10cb
I
1c
I
10cf
I
27
I
10d4
I
32
I
10da
I
3d
I
10e0
I
48
I
10ea
I
53
I
10f0
I
5e
I
10f9
I
69
I
10ff
I
74
I
1104
I
7f
I
1109
I
8a
I
110d
I
95
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0
p
207
I
0
I
1
I
1f
I
3
I
2a
I
65
I
35
I
94
I
40
I
ad
I
4b
I
c8
I
56
I
114
I
61
I
12e
I
6c
I
149
I
77
I
15d
I
82
I
275
I
8d
I
296
I
98
I
2b5
I
a3
I
2de
I
ae
I
2ee
I
b9
I
2f4
I
c4
I
306
I
cf
I
31f
I
da
I
340
I
e5
I
380
I
f0
I
387
I
fb
I
3ab
I
106
I
465
I
111
I
4b0
I
11c
I
4f0
I
127
I
505
I
132
I
535
I
13d
I
54b
I
148
I
569
I
153
I
599
I
15e
I
59f
I
169
I
5a5
I
174
I
5ab
I
17f
I
5b1
I
18a
I
5ce
I
195
I
5e8
I
1a0
I
5ff
I
1ab
I
612
I
1b6
I
639
I
1c1
I
666
I
1cc
I
66f
I
1d7
I
678
I
1e2
I
690
I
1ed
I
6b1
I
1f8
I
6d8
I
203
I
6ff
I
20e
I
71a
I
219
I
760
I
224
I
786
I
22f
I
790
I
23a
I
7ae
I
245
I
7c5
I
250
I
7e8
I
25b
I
8ef
I
266
I
8f8
I
271
I
901
I
27c
I
922
I
287
I
944
I
292
I
95c
I
29d
I
970
I
2a8
I
9a9
I
2b3
I
a05
I
2be
I
a14
I
2c9
I
a25
I
2d4
I
a3d
I
2df
I
a5e
I
2ea
I
a70
I
2f5
I
a80
I
300
I
abe
I
30b
I
ac8
I
316
I
b00
I
321
I
b71
I
32c
I
b9e
I
337
I
bac
I
342
I
bc2
I
34d
I
bfe
I
358
I
c11
I
363
I
c23
I
36e
I
c64
I
379
I
c9d
I
384
I
d11
I
393
I
d3f
I
39e
I
d4b
I
3a9
I
d59
I
3b4
I
d6f
I
3bf
I
d85
I
3ca
I
d8f
I
3d5
I
d95
I
3e0
I
df2
I
3eb
I
e3c
I
3f6
I
e70
I
405
I
e9d
I
410
I
f46
I
41b
I
f8b
I
426
I
fd5
I
431
I
100d
I
43c
I
1045
I
447
I
1056
I
452
I
1068
I
45d
I
1075
I
468
I
10a0
I
473
I
10b0
I
47e
I
10be
I
48b
x
106
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/core/dataset_spec.rb
p
0

!RBIX
9595534255132031488
x
M
1
n
n
x
10
__script__
i
44
5
45
0
1
45
0
2
45
0
3
65
49
4
0
49
5
1
49
6
1
7
7
64
49
8
2
47
49
9
1
15
5
7
10
64
56
11
47
50
12
1
15
2
11
I
5
I
0
I
0
I
0
n
p
13
x
4
File
n
n
n
x
11
active_path
x
11
expand_path
x
7
dirname
s
11
spec_helper
x
4
join
x
7
require
s
15
sharding plugin
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
206
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
15
5
7
9
64
56
10
47
50
4
1
15
5
7
11
64
56
12
47
50
4
1
15
5
7
13
64
56
14
47
50
4
1
15
5
7
15
64
56
16
47
50
4
1
15
5
7
17
64
56
18
47
50
4
1
15
5
7
19
64
56
20
47
50
4
1
15
5
7
21
64
56
22
47
50
4
1
15
5
7
23
64
56
24
47
50
4
1
15
5
7
25
64
56
26
47
50
4
1
15
5
7
27
64
56
28
47
50
4
1
15
5
7
29
64
56
30
47
50
4
1
15
5
7
31
64
56
32
47
50
4
1
15
5
7
33
64
56
34
47
50
4
1
15
5
7
35
64
56
36
47
50
4
1
15
5
7
37
64
56
38
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
39
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
408
45
0
1
44
43
2
4
3
49
3
1
13
7
4
79
49
5
2
15
13
7
6
5
56
7
47
50
8
0
49
5
2
15
13
7
9
44
43
2
4
4
49
3
1
13
7
10
44
43
2
78
49
3
1
49
5
2
15
13
7
11
44
43
2
78
49
3
1
49
5
2
15
13
7
12
44
43
2
78
49
3
1
49
5
2
15
13
7
13
44
43
2
78
49
3
1
49
5
2
15
49
5
2
15
49
14
1
38
15
15
45
16
17
13
71
18
47
9
144
47
49
19
0
13
45
0
20
39
15
7
21
49
22
1
49
23
1
47
49
24
1
15
8
160
45
0
25
39
15
7
21
49
22
1
49
23
1
49
18
1
38
26
15
39
26
56
27
50
28
0
15
45
16
29
13
71
18
47
9
205
47
49
19
0
13
45
0
30
39
15
7
31
49
22
1
49
23
1
47
49
24
1
15
8
221
45
0
32
39
15
7
31
49
22
1
49
23
1
49
18
1
38
33
15
39
33
56
34
50
28
0
15
45
16
35
13
71
18
47
9
266
47
49
19
0
13
45
0
36
39
15
7
37
49
22
1
49
23
1
47
49
24
1
15
8
282
45
0
38
39
15
7
37
49
22
1
49
23
1
49
18
1
38
39
15
39
39
56
40
50
28
0
15
39
26
7
31
44
43
2
80
49
3
1
13
7
41
39
33
49
5
2
15
13
7
42
7
43
49
5
2
15
49
44
2
15
39
33
7
45
44
43
2
79
49
3
1
13
7
41
39
26
49
5
2
15
49
46
2
15
39
33
7
37
44
43
2
4
4
49
3
1
13
7
41
39
39
49
5
2
15
13
7
47
7
48
49
5
2
15
13
7
49
7
50
49
5
2
15
13
7
51
7
52
49
5
2
15
49
53
2
15
39
15
49
54
0
11
I
a
I
0
I
0
I
0
I
-2
p
55
x
6
Sequel
n
x
4
Hash
x
16
new_from_literal
x
7
numrows
x
3
[]=
x
6
autoid
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
2
79
11
I
2
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
5
I
2
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
x
4
proc
x
7
servers
x
2
s1
x
2
s2
x
2
s3
x
2
s4
x
4
mock
x
3
@db
x
5
Class
n
x
3
new
x
8
allocate
n
x
7
artists
x
2
[]
x
5
Model
x
10
initialize
n
x
7
@Artist
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
64
5
48
0
5
48
1
44
43
2
80
49
3
1
13
7
4
80
49
5
2
15
13
7
6
7
7
64
49
5
2
15
13
18
2
49
8
1
15
13
18
2
49
8
1
15
15
5
7
4
7
6
47
49
9
2
15
5
7
10
47
49
11
1
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
16
instance_dataset
x
7
dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
4
name
s
3
YJM
x
7
_fetch=
x
7
columns
x
8
sharding
x
6
plugin
p
7
I
0
I
8
I
2e
I
9
I
38
I
a
I
40
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
x
10
class_eval
n
n
x
6
albums
n
x
6
@Album
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
75
5
48
0
5
48
1
44
43
2
4
3
49
3
1
13
7
4
79
49
5
2
15
13
7
6
7
7
64
49
5
2
15
13
7
8
80
49
5
2
15
13
18
2
49
9
1
15
13
18
2
49
9
1
15
15
5
7
4
7
8
7
6
47
49
10
3
15
5
7
11
47
49
12
1
11
I
7
I
0
I
0
I
0
I
-2
p
13
x
16
instance_dataset
x
7
dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
4
name
s
2
RF
x
9
artist_id
x
7
_fetch=
x
7
columns
x
8
sharding
x
6
plugin
p
7
I
0
I
e
I
37
I
f
I
43
I
10
I
4b
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
n
n
x
4
tags
n
x
4
@Tag
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
65
5
48
0
5
48
1
44
43
2
80
49
3
1
13
7
4
4
3
49
5
2
15
13
7
6
7
7
64
49
5
2
15
13
18
2
49
8
1
15
13
18
2
49
8
1
15
15
5
7
4
7
6
47
49
9
2
15
5
7
10
47
49
11
1
11
I
7
I
0
I
0
I
0
I
-2
p
12
x
16
instance_dataset
x
7
dataset
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
4
name
s
1
M
x
7
_fetch=
x
7
columns
x
8
sharding
x
6
plugin
p
7
I
0
I
14
I
2f
I
15
I
39
I
16
I
41
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
x
5
class
x
3
key
x
9
artist_id
x
11
one_to_many
x
6
artist
x
11
many_to_one
x
8
left_key
x
8
album_id
x
9
right_key
x
6
tag_id
x
10
join_table
x
11
albums_tags
x
12
many_to_many
x
4
sqls
p
23
I
0
I
5
I
6e
I
6
I
a3
I
7
I
ab
I
c
I
e0
I
d
I
e8
I
12
I
11d
I
13
I
125
I
18
I
146
I
19
I
15e
I
1a
I
192
I
1b
I
198
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
x
6
before
s
66
should allow you to instantiate a new object for a specified shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
79
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
64
49
6
2
15
49
7
2
49
8
0
15
39
9
49
10
0
49
11
0
7
12
64
7
13
64
35
2
83
14
15
39
0
7
15
56
16
50
7
1
49
8
0
15
39
9
49
10
0
49
11
0
7
17
64
7
18
64
35
2
83
14
11
I
7
I
0
I
0
I
0
I
-2
p
19
x
6
@Album
x
2
s1
x
4
Hash
x
16
new_from_literal
x
4
name
s
2
RF
x
3
[]=
x
16
new_using_server
x
4
save
x
3
@db
x
4
sqls
x
6
should
s
45
INSERT INTO albums (name) VALUES ('RF') -- s1
s
49
SELECT * FROM albums WHERE (id = 1) LIMIT 1 -- s1
x
2
==
x
2
s2
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
57
19
0
15
20
0
7
0
64
13
18
2
49
1
1
15
11
I
5
I
1
I
1
I
1
n
p
2
s
2
MO
x
5
name=
p
3
I
0
I
22
I
11
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
1
o
s
45
INSERT INTO albums (name) VALUES ('MO') -- s2
s
49
SELECT * FROM albums WHERE (id = 1) LIMIT 1 -- s2
p
9
I
0
I
1f
I
1c
I
20
I
2f
I
22
I
3c
I
23
I
4f
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
x
7
specify
s
70
should allow you to create and save a new object for a specified shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
73
39
0
7
1
44
43
2
79
49
3
1
13
7
4
7
5
64
49
6
2
15
49
7
2
15
39
8
49
9
0
49
10
0
7
11
64
7
12
64
35
2
83
13
15
39
0
7
14
56
15
50
7
1
15
39
8
49
9
0
49
10
0
7
16
64
7
17
64
35
2
83
13
11
I
7
I
0
I
0
I
0
I
-2
p
18
x
6
@Album
x
2
s1
x
4
Hash
x
16
new_from_literal
x
4
name
s
2
RF
x
3
[]=
x
19
create_using_server
x
3
@db
x
4
sqls
x
6
should
s
45
INSERT INTO albums (name) VALUES ('RF') -- s1
s
49
SELECT * FROM albums WHERE (id = 1) LIMIT 1 -- s1
x
2
==
x
2
s2
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
17
57
19
0
15
20
0
7
0
64
13
18
2
49
1
1
15
11
I
5
I
1
I
1
I
1
n
p
2
s
2
MO
x
5
name=
p
3
I
0
I
2a
I
11
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
1
o
s
45
INSERT INTO albums (name) VALUES ('MO') -- s2
s
49
SELECT * FROM albums WHERE (id = 1) LIMIT 1 -- s2
p
9
I
0
I
27
I
19
I
28
I
2c
I
2a
I
36
I
2b
I
49
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
s
69
should have objects retrieved from a specific shard update that shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
50
39
0
7
1
49
2
1
49
3
0
44
43
4
79
49
5
1
13
7
6
7
7
64
49
8
2
15
49
9
1
15
39
10
49
11
0
49
12
0
7
13
64
7
14
64
35
2
83
15
11
I
6
I
0
I
0
I
0
I
-2
p
16
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
4
Hash
x
16
new_from_literal
x
4
name
s
2
MO
x
3
[]=
x
6
update
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
s
50
UPDATE albums SET name = 'MO' WHERE (id = 1) -- s1
x
2
==
p
5
I
0
I
2f
I
1f
I
30
I
32
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
s
74
should have objects retrieved from a specific shard delete from that shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
7
1
49
2
1
49
3
0
49
4
0
15
39
5
49
6
0
49
7
0
7
8
64
7
9
64
35
2
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
6
delete
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
s
39
DELETE FROM albums WHERE (id = 1) -- s1
x
2
==
p
5
I
0
I
34
I
e
I
35
I
21
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
s
74
should have objects retrieved from a specific shard reload from that shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
33
39
0
7
1
49
2
1
49
3
0
49
4
0
15
39
5
49
6
0
49
7
0
7
8
64
7
9
64
35
2
83
10
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
6
reload
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
s
49
SELECT * FROM albums WHERE (id = 1) LIMIT 1 -- s1
x
2
==
p
5
I
0
I
39
I
e
I
3a
I
21
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
s
106
should use current dataset's shard when eager loading if eagerly loaded dataset doesn't have its own shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
77
39
0
7
1
49
2
1
7
3
49
4
1
49
5
0
19
0
15
39
6
49
7
0
49
8
0
7
9
64
7
10
64
35
2
83
11
15
20
0
49
12
0
49
8
0
79
83
11
15
20
0
49
13
0
49
3
0
49
14
0
15
39
6
49
7
0
49
8
0
7
15
64
35
1
83
11
11
I
5
I
1
I
0
I
0
I
-2
p
16
x
6
@Album
x
2
s1
x
6
server
x
6
artist
x
5
eager
x
3
all
x
3
@db
x
4
sqls
x
6
should
s
26
SELECT * FROM albums -- s1
s
53
SELECT * FROM artists WHERE (artists.id IN (2)) -- s1
x
2
==
x
6
length
x
5
first
x
4
save
s
52
UPDATE artists SET name = 'YJM' WHERE (id = 2) -- s1
p
11
I
0
I
3e
I
12
I
3f
I
25
I
40
I
31
I
41
I
3d
I
42
I
4d
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
6
albums
s
101
should not use current dataset's shard when eager loading if eagerly loaded dataset has its own shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
114
39
0
49
1
0
49
2
0
7
3
39
0
49
4
0
49
2
0
7
3
7
5
13
18
3
49
6
2
15
13
18
3
49
6
2
15
15
39
7
7
8
49
3
1
7
9
49
10
1
49
11
0
19
0
15
39
12
49
13
0
49
14
0
7
15
64
7
16
64
35
2
83
17
15
20
0
49
18
0
49
14
0
79
83
17
15
20
0
49
19
0
49
9
0
49
20
0
15
39
12
49
13
0
49
14
0
7
21
64
35
1
83
17
11
I
8
I
1
I
0
I
0
I
-2
p
22
x
7
@Artist
x
16
instance_dataset
x
4
opts
x
6
server
x
7
dataset
x
2
s2
x
3
[]=
x
6
@Album
x
2
s1
x
6
artist
x
5
eager
x
3
all
x
3
@db
x
4
sqls
x
6
should
s
26
SELECT * FROM albums -- s1
s
53
SELECT * FROM artists WHERE (artists.id IN (2)) -- s2
x
2
==
x
6
length
x
5
first
x
4
save
s
52
UPDATE artists SET name = 'YJM' WHERE (id = 2) -- s2
p
13
I
0
I
46
I
25
I
47
I
37
I
48
I
4a
I
49
I
56
I
4a
I
62
I
4b
I
72
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
6
albums
s
108
should use current dataset's shard when eager graphing if eagerly graphed dataset doesn't have its own shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
141
39
0
7
1
49
2
1
7
3
49
4
1
19
0
15
20
0
44
43
5
4
5
49
6
1
13
7
7
79
49
8
2
15
13
7
9
80
49
8
2
15
13
7
10
7
11
64
49
8
2
15
13
7
12
80
49
8
2
15
13
7
13
7
14
64
49
8
2
15
13
18
2
49
15
1
15
15
20
0
49
16
0
19
1
15
39
17
49
18
0
49
19
0
7
20
64
35
1
83
21
15
20
1
49
22
0
49
19
0
79
83
21
15
20
1
49
23
0
49
3
0
49
24
0
15
39
17
49
18
0
49
19
0
7
25
64
35
1
83
21
11
I
8
I
2
I
0
I
0
I
-2
p
26
x
6
@Album
x
2
s1
x
6
server
x
6
artist
x
11
eager_graph
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
9
artist_id
x
4
name
s
2
RF
x
11
artist_id_0
x
11
artist_name
s
3
YJM
x
7
_fetch=
x
3
all
x
3
@db
x
4
sqls
x
6
should
s
187
SELECT albums.id, albums.artist_id, albums.name, artist.id AS artist_id_0, artist.name AS artist_name FROM albums LEFT OUTER JOIN artists AS artist ON (artist.id = albums.artist_id) -- s1
x
2
==
x
6
length
x
5
first
x
4
save
s
52
UPDATE artists SET name = 'YJM' WHERE (id = 2) -- s1
p
15
I
0
I
4f
I
f
I
50
I
4d
I
51
I
55
I
52
I
65
I
53
I
71
I
54
I
7d
I
55
I
8d
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
2
x
2
ds
x
6
albums
s
103
should not use current dataset's shard when eager graphing if eagerly graphed dataset has its own shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
178
39
0
49
1
0
49
2
0
7
3
39
0
49
4
0
49
2
0
7
3
7
5
13
18
3
49
6
2
15
13
18
3
49
6
2
15
15
39
7
7
8
49
3
1
7
9
49
10
1
19
0
15
20
0
44
43
11
4
5
49
12
1
13
7
13
79
49
6
2
15
13
7
14
80
49
6
2
15
13
7
15
7
16
64
49
6
2
15
13
7
17
80
49
6
2
15
13
7
18
7
19
64
49
6
2
15
13
18
2
49
20
1
15
15
20
0
49
21
0
19
1
15
39
22
49
23
0
49
24
0
7
25
64
35
1
83
26
15
20
1
49
27
0
49
24
0
79
83
26
15
20
1
49
28
0
49
9
0
49
29
0
15
39
22
49
23
0
49
24
0
7
30
64
35
1
83
26
11
I
9
I
2
I
0
I
0
I
-2
p
31
x
7
@Artist
x
16
instance_dataset
x
4
opts
x
6
server
x
7
dataset
x
2
s2
x
3
[]=
x
6
@Album
x
2
s1
x
6
artist
x
11
eager_graph
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
artist_id
x
4
name
s
2
RF
x
11
artist_id_0
x
11
artist_name
s
3
YJM
x
7
_fetch=
x
3
all
x
3
@db
x
4
sqls
x
6
should
s
187
SELECT albums.id, albums.artist_id, albums.name, artist.id AS artist_id_0, artist.name AS artist_name FROM albums LEFT OUTER JOIN artists AS artist ON (artist.id = albums.artist_id) -- s1
x
2
==
x
6
length
x
5
first
x
4
save
s
52
UPDATE artists SET name = 'YJM' WHERE (id = 2) -- s2
p
17
I
0
I
59
I
25
I
5a
I
34
I
5b
I
72
I
5c
I
7a
I
5d
I
8a
I
5e
I
96
I
5f
I
a2
I
60
I
b2
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
2
x
2
ds
x
6
albums
s
114
should use eagerly graphed dataset shard for eagerly graphed objects even if current dataset does not have a shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
173
39
0
49
1
0
49
2
0
7
3
39
0
49
4
0
49
2
0
7
3
7
5
13
18
3
49
6
2
15
13
18
3
49
6
2
15
15
39
7
7
8
49
9
1
19
0
15
20
0
44
43
10
4
5
49
11
1
13
7
12
79
49
6
2
15
13
7
13
80
49
6
2
15
13
7
14
7
15
64
49
6
2
15
13
7
16
80
49
6
2
15
13
7
17
7
18
64
49
6
2
15
13
18
2
49
19
1
15
15
20
0
49
20
0
19
1
15
39
21
49
22
0
49
23
0
7
24
64
35
1
83
25
15
20
1
49
26
0
49
23
0
79
83
25
15
20
1
49
27
0
49
8
0
49
28
0
15
39
21
49
22
0
49
23
0
7
29
64
35
1
83
25
11
I
9
I
2
I
0
I
0
I
-2
p
30
x
7
@Artist
x
16
instance_dataset
x
4
opts
x
6
server
x
7
dataset
x
2
s2
x
3
[]=
x
6
@Album
x
6
artist
x
11
eager_graph
x
4
Hash
x
16
new_from_literal
x
2
id
x
9
artist_id
x
4
name
s
2
RF
x
11
artist_id_0
x
11
artist_name
s
3
YJM
x
7
_fetch=
x
3
all
x
3
@db
x
4
sqls
x
6
should
s
181
SELECT albums.id, albums.artist_id, albums.name, artist.id AS artist_id_0, artist.name AS artist_name FROM albums LEFT OUTER JOIN artists AS artist ON (artist.id = albums.artist_id)
x
2
==
x
6
length
x
5
first
x
4
save
s
52
UPDATE artists SET name = 'YJM' WHERE (id = 2) -- s2
p
17
I
0
I
64
I
25
I
65
I
2f
I
66
I
6d
I
67
I
75
I
68
I
85
I
69
I
91
I
6a
I
9d
I
6b
I
ad
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
2
x
2
ds
x
6
albums
s
153
should have objects retrieved from a specific shard use associated objects from that shard, with modifications to the associated objects using that shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
145
39
0
7
1
49
2
1
49
3
0
19
0
15
39
4
49
5
0
49
6
0
7
7
64
35
1
83
8
15
20
0
49
9
0
44
43
10
79
49
11
1
13
7
12
7
13
64
49
14
2
15
49
15
1
15
39
4
49
5
0
49
6
0
7
16
64
7
17
64
35
2
83
8
15
20
0
49
18
0
56
19
50
20
0
15
39
4
49
5
0
49
6
0
7
21
64
7
22
64
35
2
83
8
15
39
23
7
24
49
2
1
49
3
0
49
25
0
56
26
50
20
0
15
39
4
49
5
0
49
6
0
7
27
64
7
28
64
7
29
64
35
3
83
8
11
I
7
I
1
I
0
I
0
I
-2
p
30
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
x
2
==
x
6
artist
x
4
Hash
x
16
new_from_literal
x
4
name
s
2
AS
x
3
[]=
x
6
update
s
58
SELECT * FROM artists WHERE (artists.id = 2) LIMIT 1 -- s1
s
51
UPDATE artists SET name = 'AS' WHERE (id = 2) -- s1
x
4
tags
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
57
19
0
15
20
0
44
43
0
79
49
1
1
13
7
2
7
3
64
49
4
2
15
49
5
1
11
I
7
I
1
I
1
I
1
n
p
6
x
4
Hash
x
16
new_from_literal
x
4
name
s
2
SR
x
3
[]=
x
6
update
p
3
I
0
I
73
I
1b
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
1
a
x
3
map
s
119
SELECT tags.* FROM tags INNER JOIN albums_tags ON ((albums_tags.tag_id = tags.id) AND (albums_tags.album_id = 1)) -- s1
s
48
UPDATE tags SET name = 'SR' WHERE (id = 3) -- s1
x
7
@Artist
x
2
s2
x
6
albums
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
57
19
0
15
20
0
44
43
0
79
49
1
1
13
7
2
7
3
64
49
4
2
15
49
5
1
11
I
7
I
1
I
1
I
1
n
p
6
x
4
Hash
x
16
new_from_literal
x
4
name
s
2
MO
x
3
[]=
x
6
update
p
3
I
0
I
75
I
1b
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
1
a
s
35
SELECT * FROM artists LIMIT 1 -- s2
s
55
SELECT * FROM albums WHERE (albums.artist_id = 2) -- s2
s
50
UPDATE albums SET name = 'MO' WHERE (id = 1) -- s2
p
17
I
0
I
6f
I
d
I
70
I
1d
I
71
I
37
I
72
I
4a
I
73
I
55
I
74
I
68
I
75
I
7b
I
76
I
91
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
5
album
s
88
should have objects retrieved from a specific shard add associated objects to that shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
180
39
0
7
1
49
2
1
49
3
0
19
0
15
39
4
7
5
49
2
1
49
3
0
19
1
15
39
6
49
7
0
49
8
0
7
9
64
7
10
64
35
2
83
11
15
20
1
44
43
12
79
49
13
1
13
7
14
7
15
64
49
16
2
15
49
17
1
15
39
6
49
7
0
19
2
15
7
18
64
7
19
64
35
2
5
20
2
49
20
0
47
49
21
1
49
8
1
15
20
2
49
8
0
7
22
64
35
1
83
11
15
20
0
44
43
12
79
49
13
1
13
7
14
7
23
64
49
16
2
15
49
24
1
15
39
6
49
7
0
19
2
15
7
25
64
7
26
64
35
2
5
20
2
49
27
0
47
49
21
1
49
8
1
15
20
2
49
8
0
7
28
64
7
29
64
35
2
83
11
11
I
9
I
3
I
0
I
0
I
-2
p
30
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
7
@Artist
x
2
s2
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
s
35
SELECT * FROM artists LIMIT 1 -- s2
x
2
==
x
4
Hash
x
16
new_from_literal
x
4
name
s
2
MO
x
3
[]=
x
9
add_album
s
59
INSERT INTO albums (artist_id, name) VALUES (2, 'MO') -- s2
s
59
INSERT INTO albums (name, artist_id) VALUES ('MO', 2) -- s2
x
5
shift
x
7
include
s
49
SELECT * FROM albums WHERE (id = 1) LIMIT 1 -- s2
s
2
SR
x
7
add_tag
s
62
INSERT INTO albums_tags (album_id, tag_id) VALUES (1, 3) -- s1
s
62
INSERT INTO albums_tags (tag_id, album_id) VALUES (3, 1) -- s1
x
3
pop
s
43
INSERT INTO tags (name) VALUES ('SR') -- s1
s
47
SELECT * FROM tags WHERE (id = 1) LIMIT 1 -- s1
p
23
I
0
I
7a
I
d
I
7b
I
1a
I
7c
I
2d
I
7e
I
44
I
7f
I
4c
I
80
I
62
I
81
I
6f
I
83
I
86
I
84
I
8e
I
85
I
a4
I
86
I
b4
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
3
x
5
album
x
6
artist
x
4
sqls
s
93
should have objects retrieved from a specific shard remove associated objects from that shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
122
39
0
7
1
49
2
1
49
3
0
19
0
15
39
4
7
5
49
2
1
49
3
0
19
1
15
39
6
49
7
0
49
8
0
7
9
64
7
10
64
35
2
83
11
15
20
1
79
49
12
1
15
39
6
49
7
0
19
2
15
7
13
64
7
14
64
35
2
5
20
2
49
15
0
47
49
16
1
49
8
1
15
20
2
49
8
0
7
17
64
35
1
83
11
15
20
0
4
3
49
18
1
15
39
6
49
7
0
49
8
0
7
19
64
7
20
64
35
2
83
11
11
I
7
I
3
I
0
I
0
I
-2
p
21
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
7
@Artist
x
2
s2
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
s
35
SELECT * FROM artists LIMIT 1 -- s2
x
2
==
x
12
remove_album
s
68
UPDATE albums SET artist_id = NULL, name = 'RF' WHERE (id = 1) -- s2
s
68
UPDATE albums SET name = 'RF', artist_id = NULL WHERE (id = 1) -- s2
x
3
pop
x
7
include
s
85
SELECT * FROM albums WHERE ((albums.artist_id = 2) AND (albums.id = 1)) LIMIT 1 -- s2
x
10
remove_tag
s
147
SELECT tags.* FROM tags INNER JOIN albums_tags ON ((albums_tags.tag_id = tags.id) AND (albums_tags.album_id = 1)) WHERE (tags.id = 3) LIMIT 1 -- s1
s
69
DELETE FROM albums_tags WHERE ((album_id = 1) AND (tag_id = 3)) -- s1
p
19
I
0
I
8a
I
d
I
8b
I
1a
I
8c
I
2d
I
8e
I
34
I
8f
I
3c
I
90
I
52
I
91
I
5f
I
93
I
67
I
94
I
7a
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
3
x
5
album
x
6
artist
x
4
sqls
s
97
should have objects retrieved from a specific shard remove all associated objects from that shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
89
39
0
7
1
49
2
1
49
3
0
19
0
15
39
4
7
5
49
2
1
49
3
0
19
1
15
39
6
49
7
0
49
8
0
7
9
64
7
10
64
35
2
83
11
15
20
1
49
12
0
15
39
6
49
7
0
49
8
0
7
13
64
35
1
83
11
15
20
0
49
14
0
15
39
6
49
7
0
49
8
0
7
15
64
35
1
83
11
11
I
6
I
2
I
0
I
0
I
-2
p
16
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
7
@Artist
x
2
s2
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
s
35
SELECT * FROM artists LIMIT 1 -- s2
x
2
==
x
17
remove_all_albums
s
62
UPDATE albums SET artist_id = NULL WHERE (artist_id = 2) -- s2
x
15
remove_all_tags
s
50
DELETE FROM albums_tags WHERE (album_id = 1) -- s1
p
15
I
0
I
98
I
d
I
99
I
1a
I
9a
I
2d
I
9c
I
33
I
9d
I
43
I
9f
I
49
I
a0
I
59
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
2
x
5
album
x
6
artist
s
64
should not override a server already set on an associated object
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
206
39
0
7
1
49
2
1
49
3
0
19
0
15
39
4
7
5
49
2
1
49
3
0
19
1
15
39
6
49
7
0
49
8
0
7
9
64
7
10
64
35
2
83
11
15
20
1
39
0
44
43
12
80
49
13
1
13
7
14
4
4
49
15
2
15
13
7
16
7
17
64
49
15
2
15
49
18
1
7
19
49
20
1
49
21
1
15
7
22
64
7
23
64
35
2
5
39
6
49
7
0
49
24
0
47
49
25
1
49
8
1
15
20
1
39
0
44
43
12
4
3
49
13
1
13
7
14
4
5
49
15
2
15
13
7
16
7
26
64
49
15
2
15
13
7
27
80
49
15
2
15
49
18
1
7
28
49
20
1
49
29
1
15
39
6
49
7
0
19
2
15
7
30
64
7
31
64
35
2
5
20
2
49
24
0
47
49
25
1
49
8
1
15
20
2
49
8
0
7
32
64
35
1
83
11
11
I
a
I
3
I
0
I
0
I
-2
p
33
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
7
@Artist
x
2
s2
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
s
35
SELECT * FROM artists LIMIT 1 -- s2
x
2
==
x
4
Hash
x
16
new_from_literal
x
2
id
x
3
[]=
x
4
name
s
2
MO
x
4
load
x
2
s3
x
10
set_server
x
9
add_album
s
65
UPDATE albums SET artist_id = 2, name = 'MO' WHERE (id = 4) -- s3
s
65
UPDATE albums SET name = 'MO', artist_id = 2 WHERE (id = 4) -- s3
x
3
pop
x
7
include
s
1
T
x
9
artist_id
x
2
s4
x
12
remove_album
s
67
UPDATE albums SET artist_id = NULL, name = 'T' WHERE (id = 5) -- s4
s
67
UPDATE albums SET name = 'T', artist_id = NULL WHERE (id = 5) -- s4
s
85
SELECT 1 AS one FROM albums WHERE ((albums.artist_id = 2) AND (id = 5)) LIMIT 1 -- s2
p
19
I
0
I
a4
I
d
I
a5
I
1a
I
a6
I
2d
I
a8
I
57
I
a9
I
70
I
ab
I
a3
I
ad
I
ab
I
ae
I
c1
I
af
I
ce
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
3
x
5
album
x
6
artist
x
4
sqls
s
68
should be able to set a shard to use for any object using set_server
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
38
39
0
7
1
49
2
1
49
3
0
7
4
49
5
1
49
6
0
15
39
7
49
8
0
49
9
0
7
10
64
7
11
64
35
2
83
12
11
I
4
I
0
I
0
I
0
I
-2
p
13
x
6
@Album
x
2
s1
x
6
server
x
5
first
x
2
s2
x
10
set_server
x
6
reload
x
3
@db
x
4
sqls
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s1
s
49
SELECT * FROM albums WHERE (id = 1) LIMIT 1 -- s2
x
2
==
p
5
I
0
I
b3
I
13
I
b4
I
26
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
s
44
should use transactions on the correct shard
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
75
39
0
2
13
18
2
49
1
1
15
15
39
0
7
2
49
3
1
49
4
0
49
5
0
15
39
6
49
7
0
19
0
15
7
8
64
7
9
64
35
2
5
20
0
80
49
10
1
47
49
11
1
49
12
1
15
20
0
49
12
0
7
13
64
7
14
64
7
15
64
35
3
83
16
11
I
6
I
1
I
0
I
0
I
-2
p
17
x
6
@Album
x
17
use_transactions=
x
2
s2
x
6
server
x
5
first
x
4
save
x
3
@db
x
4
sqls
s
65
UPDATE albums SET artist_id = 2, name = 'RF' WHERE (id = 1) -- s2
s
65
UPDATE albums SET name = 'RF', artist_id = 2 WHERE (id = 1) -- s2
x
6
slice!
x
7
include
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s2
s
11
BEGIN -- s2
s
12
COMMIT -- s2
x
2
==
p
11
I
0
I
b8
I
b
I
b9
I
19
I
ba
I
21
I
bb
I
38
I
bc
I
4b
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
4
sqls
s
71
should use override current shard when saving with given :server option
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
91
39
0
2
13
18
2
49
1
1
15
15
39
0
7
2
49
3
1
49
4
0
44
43
5
79
49
6
1
13
7
3
7
7
49
8
2
15
49
9
1
15
39
10
49
11
0
19
0
15
7
12
64
7
13
64
35
2
5
20
0
80
49
14
1
47
49
15
1
49
16
1
15
20
0
49
16
0
7
17
64
7
18
64
7
19
64
35
3
83
20
11
I
7
I
1
I
0
I
0
I
-2
p
21
x
6
@Album
x
17
use_transactions=
x
2
s2
x
6
server
x
5
first
x
4
Hash
x
16
new_from_literal
x
2
s1
x
3
[]=
x
4
save
x
3
@db
x
4
sqls
s
65
UPDATE albums SET artist_id = 2, name = 'RF' WHERE (id = 1) -- s1
s
65
UPDATE albums SET name = 'RF', artist_id = 2 WHERE (id = 1) -- s1
x
6
slice!
x
7
include
x
6
should
s
34
SELECT * FROM albums LIMIT 1 -- s2
s
11
BEGIN -- s1
s
12
COMMIT -- s1
x
2
==
p
11
I
0
I
c0
I
b
I
c1
I
29
I
c2
I
31
I
c3
I
48
I
c4
I
5b
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
1
x
4
sqls
p
39
I
0
I
4
I
8
I
1e
I
13
I
26
I
1e
I
2e
I
29
I
33
I
34
I
38
I
3f
I
3d
I
4a
I
45
I
55
I
4e
I
60
I
58
I
6b
I
63
I
76
I
6e
I
81
I
79
I
8c
I
89
I
97
I
97
I
a2
I
a3
I
ad
I
b2
I
b8
I
b7
I
c3
I
bf
I
ce
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
x
8
describe
p
5
I
0
I
1
I
1f
I
3
I
2c
x
113
/Users/jhbabon/Code/projects/wuakitv/src/shield/vendor/bundle/gems/sequel-3.39.0/spec/extensions/sharding_spec.rb
p
0
